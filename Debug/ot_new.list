
ot_new.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007214  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002ac  080072d4  080072d4  000172d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007580  08007580  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  08007580  08007580  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08007580  08007580  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007580  08007580  00017580  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007584  08007584  00017584  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08007588  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000314  20000068  080075f0  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000037c  080075f0  0002037c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 13 .debug_info   000113ef  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000027a6  00000000  00000000  000314c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001020  00000000  00000000  00033c68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000cc1  00000000  00000000  00034c88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001145c  00000000  00000000  00035949  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000148b2  00000000  00000000  00046da5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00067732  00000000  00000000  0005b657  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003f10  00000000  00000000  000c2d8c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008a  00000000  00000000  000c6c9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000068 	.word	0x20000068
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080072bc 	.word	0x080072bc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000006c 	.word	0x2000006c
 8000104:	080072bc 	.word	0x080072bc

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <init_gesture>:
 8000234:	b590      	push	{r4, r7, lr}
 8000236:	b083      	sub	sp, #12
 8000238:	af00      	add	r7, sp, #0
 800023a:	1dfc      	adds	r4, r7, #7
 800023c:	2092      	movs	r0, #146	; 0x92
 800023e:	f000 fa63 	bl	8000708 <read8>
 8000242:	0003      	movs	r3, r0
 8000244:	7023      	strb	r3, [r4, #0]
 8000246:	1dfb      	adds	r3, r7, #7
 8000248:	781b      	ldrb	r3, [r3, #0]
 800024a:	2bab      	cmp	r3, #171	; 0xab
 800024c:	d001      	beq.n	8000252 <init_gesture+0x1e>
 800024e:	2300      	movs	r3, #0
 8000250:	e0a7      	b.n	80003a2 <init_gesture+0x16e>
 8000252:	2100      	movs	r1, #0
 8000254:	2080      	movs	r0, #128	; 0x80
 8000256:	f000 fa31 	bl	80006bc <write8>
 800025a:	1e03      	subs	r3, r0, #0
 800025c:	d101      	bne.n	8000262 <init_gesture+0x2e>
 800025e:	2300      	movs	r3, #0
 8000260:	e09f      	b.n	80003a2 <init_gesture+0x16e>
 8000262:	4b52      	ldr	r3, [pc, #328]	; (80003ac <init_gesture+0x178>)
 8000264:	2200      	movs	r2, #0
 8000266:	701a      	strb	r2, [r3, #0]
 8000268:	4b51      	ldr	r3, [pc, #324]	; (80003b0 <init_gesture+0x17c>)
 800026a:	2200      	movs	r2, #0
 800026c:	701a      	strb	r2, [r3, #0]
 800026e:	21ff      	movs	r1, #255	; 0xff
 8000270:	2083      	movs	r0, #131	; 0x83
 8000272:	f000 fa23 	bl	80006bc <write8>
 8000276:	1e03      	subs	r3, r0, #0
 8000278:	d101      	bne.n	800027e <init_gesture+0x4a>
 800027a:	2300      	movs	r3, #0
 800027c:	e091      	b.n	80003a2 <init_gesture+0x16e>
 800027e:	218f      	movs	r1, #143	; 0x8f
 8000280:	20a6      	movs	r0, #166	; 0xa6
 8000282:	f000 fa1b 	bl	80006bc <write8>
 8000286:	1e03      	subs	r3, r0, #0
 8000288:	d101      	bne.n	800028e <init_gesture+0x5a>
 800028a:	2300      	movs	r3, #0
 800028c:	e089      	b.n	80003a2 <init_gesture+0x16e>
 800028e:	218f      	movs	r1, #143	; 0x8f
 8000290:	208e      	movs	r0, #142	; 0x8e
 8000292:	f000 fa13 	bl	80006bc <write8>
 8000296:	1e03      	subs	r3, r0, #0
 8000298:	d101      	bne.n	800029e <init_gesture+0x6a>
 800029a:	2300      	movs	r3, #0
 800029c:	e081      	b.n	80003a2 <init_gesture+0x16e>
 800029e:	1dfc      	adds	r4, r7, #7
 80002a0:	20ab      	movs	r0, #171	; 0xab
 80002a2:	f000 fa31 	bl	8000708 <read8>
 80002a6:	0003      	movs	r3, r0
 80002a8:	7023      	strb	r3, [r4, #0]
 80002aa:	1dfb      	adds	r3, r7, #7
 80002ac:	1dfa      	adds	r2, r7, #7
 80002ae:	7812      	ldrb	r2, [r2, #0]
 80002b0:	2102      	movs	r1, #2
 80002b2:	430a      	orrs	r2, r1
 80002b4:	701a      	strb	r2, [r3, #0]
 80002b6:	1dfb      	adds	r3, r7, #7
 80002b8:	781b      	ldrb	r3, [r3, #0]
 80002ba:	0019      	movs	r1, r3
 80002bc:	20ab      	movs	r0, #171	; 0xab
 80002be:	f000 f9fd 	bl	80006bc <write8>
 80002c2:	1dfc      	adds	r4, r7, #7
 80002c4:	20ab      	movs	r0, #171	; 0xab
 80002c6:	f000 fa1f 	bl	8000708 <read8>
 80002ca:	0003      	movs	r3, r0
 80002cc:	7023      	strb	r3, [r4, #0]
 80002ce:	1dfb      	adds	r3, r7, #7
 80002d0:	1dfa      	adds	r2, r7, #7
 80002d2:	7812      	ldrb	r2, [r2, #0]
 80002d4:	2101      	movs	r1, #1
 80002d6:	430a      	orrs	r2, r1
 80002d8:	701a      	strb	r2, [r3, #0]
 80002da:	1dfb      	adds	r3, r7, #7
 80002dc:	781b      	ldrb	r3, [r3, #0]
 80002de:	0019      	movs	r1, r3
 80002e0:	20ab      	movs	r0, #171	; 0xab
 80002e2:	f000 f9eb 	bl	80006bc <write8>
 80002e6:	4b32      	ldr	r3, [pc, #200]	; (80003b0 <init_gesture+0x17c>)
 80002e8:	2201      	movs	r2, #1
 80002ea:	701a      	strb	r2, [r3, #0]
 80002ec:	1dfc      	adds	r4, r7, #7
 80002ee:	2080      	movs	r0, #128	; 0x80
 80002f0:	f000 fa0a 	bl	8000708 <read8>
 80002f4:	0003      	movs	r3, r0
 80002f6:	7023      	strb	r3, [r4, #0]
 80002f8:	1dfb      	adds	r3, r7, #7
 80002fa:	1dfa      	adds	r2, r7, #7
 80002fc:	7812      	ldrb	r2, [r2, #0]
 80002fe:	2101      	movs	r1, #1
 8000300:	430a      	orrs	r2, r1
 8000302:	701a      	strb	r2, [r3, #0]
 8000304:	1dfb      	adds	r3, r7, #7
 8000306:	781b      	ldrb	r3, [r3, #0]
 8000308:	0019      	movs	r1, r3
 800030a:	2080      	movs	r0, #128	; 0x80
 800030c:	f000 f9d6 	bl	80006bc <write8>
 8000310:	1dfc      	adds	r4, r7, #7
 8000312:	2080      	movs	r0, #128	; 0x80
 8000314:	f000 f9f8 	bl	8000708 <read8>
 8000318:	0003      	movs	r3, r0
 800031a:	7023      	strb	r3, [r4, #0]
 800031c:	1dfb      	adds	r3, r7, #7
 800031e:	1dfa      	adds	r2, r7, #7
 8000320:	7812      	ldrb	r2, [r2, #0]
 8000322:	2168      	movs	r1, #104	; 0x68
 8000324:	430a      	orrs	r2, r1
 8000326:	701a      	strb	r2, [r3, #0]
 8000328:	1dfb      	adds	r3, r7, #7
 800032a:	781b      	ldrb	r3, [r3, #0]
 800032c:	0019      	movs	r1, r3
 800032e:	2080      	movs	r0, #128	; 0x80
 8000330:	f000 f9c4 	bl	80006bc <write8>
 8000334:	1dfc      	adds	r4, r7, #7
 8000336:	2080      	movs	r0, #128	; 0x80
 8000338:	f000 f9e6 	bl	8000708 <read8>
 800033c:	0003      	movs	r3, r0
 800033e:	7023      	strb	r3, [r4, #0]
 8000340:	1dfb      	adds	r3, r7, #7
 8000342:	22fc      	movs	r2, #252	; 0xfc
 8000344:	701a      	strb	r2, [r3, #0]
 8000346:	1dfb      	adds	r3, r7, #7
 8000348:	781b      	ldrb	r3, [r3, #0]
 800034a:	0019      	movs	r1, r3
 800034c:	2081      	movs	r0, #129	; 0x81
 800034e:	f000 f9b5 	bl	80006bc <write8>
 8000352:	2100      	movs	r1, #0
 8000354:	2081      	movs	r0, #129	; 0x81
 8000356:	f000 f9b1 	bl	80006bc <write8>
 800035a:	4b16      	ldr	r3, [pc, #88]	; (80003b4 <init_gesture+0x180>)
 800035c:	781b      	ldrb	r3, [r3, #0]
 800035e:	2b64      	cmp	r3, #100	; 0x64
 8000360:	d902      	bls.n	8000368 <init_gesture+0x134>
 8000362:	4b14      	ldr	r3, [pc, #80]	; (80003b4 <init_gesture+0x180>)
 8000364:	2264      	movs	r2, #100	; 0x64
 8000366:	701a      	strb	r2, [r3, #0]
 8000368:	4b12      	ldr	r3, [pc, #72]	; (80003b4 <init_gesture+0x180>)
 800036a:	781b      	ldrb	r3, [r3, #0]
 800036c:	001a      	movs	r2, r3
 800036e:	2364      	movs	r3, #100	; 0x64
 8000370:	1a9a      	subs	r2, r3, r2
 8000372:	4b11      	ldr	r3, [pc, #68]	; (80003b8 <init_gesture+0x184>)
 8000374:	601a      	str	r2, [r3, #0]
 8000376:	200a      	movs	r0, #10
 8000378:	f002 ff2e 	bl	80031d8 <HAL_Delay>
 800037c:	1dfc      	adds	r4, r7, #7
 800037e:	2080      	movs	r0, #128	; 0x80
 8000380:	f000 f9c2 	bl	8000708 <read8>
 8000384:	0003      	movs	r3, r0
 8000386:	7023      	strb	r3, [r4, #0]
 8000388:	1dfb      	adds	r3, r7, #7
 800038a:	1dfa      	adds	r2, r7, #7
 800038c:	7812      	ldrb	r2, [r2, #0]
 800038e:	2101      	movs	r1, #1
 8000390:	430a      	orrs	r2, r1
 8000392:	701a      	strb	r2, [r3, #0]
 8000394:	1dfb      	adds	r3, r7, #7
 8000396:	781b      	ldrb	r3, [r3, #0]
 8000398:	0019      	movs	r1, r3
 800039a:	2080      	movs	r0, #128	; 0x80
 800039c:	f000 f98e 	bl	80006bc <write8>
 80003a0:	2301      	movs	r3, #1
 80003a2:	0018      	movs	r0, r3
 80003a4:	46bd      	mov	sp, r7
 80003a6:	b003      	add	sp, #12
 80003a8:	bd90      	pop	{r4, r7, pc}
 80003aa:	46c0      	nop			; (mov r8, r8)
 80003ac:	20000085 	.word	0x20000085
 80003b0:	20000084 	.word	0x20000084
 80003b4:	20000002 	.word	0x20000002
 80003b8:	20000098 	.word	0x20000098

080003bc <gestureFIFOAvailable>:
 80003bc:	b590      	push	{r4, r7, lr}
 80003be:	b083      	sub	sp, #12
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	1dfc      	adds	r4, r7, #7
 80003c4:	20af      	movs	r0, #175	; 0xaf
 80003c6:	f000 f99f 	bl	8000708 <read8>
 80003ca:	0003      	movs	r3, r0
 80003cc:	7023      	strb	r3, [r4, #0]
 80003ce:	1dfb      	adds	r3, r7, #7
 80003d0:	781b      	ldrb	r3, [r3, #0]
 80003d2:	2201      	movs	r2, #1
 80003d4:	4013      	ands	r3, r2
 80003d6:	d101      	bne.n	80003dc <gestureFIFOAvailable+0x20>
 80003d8:	2300      	movs	r3, #0
 80003da:	e00d      	b.n	80003f8 <gestureFIFOAvailable+0x3c>
 80003dc:	1dfc      	adds	r4, r7, #7
 80003de:	20ae      	movs	r0, #174	; 0xae
 80003e0:	f000 f992 	bl	8000708 <read8>
 80003e4:	0003      	movs	r3, r0
 80003e6:	7023      	strb	r3, [r4, #0]
 80003e8:	1dfb      	adds	r3, r7, #7
 80003ea:	781b      	ldrb	r3, [r3, #0]
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d101      	bne.n	80003f4 <gestureFIFOAvailable+0x38>
 80003f0:	2300      	movs	r3, #0
 80003f2:	e001      	b.n	80003f8 <gestureFIFOAvailable+0x3c>
 80003f4:	1dfb      	adds	r3, r7, #7
 80003f6:	781b      	ldrb	r3, [r3, #0]
 80003f8:	0018      	movs	r0, r3
 80003fa:	46bd      	mov	sp, r7
 80003fc:	b003      	add	sp, #12
 80003fe:	bd90      	pop	{r4, r7, pc}

08000400 <readGesture>:
 8000400:	b580      	push	{r7, lr}
 8000402:	b082      	sub	sp, #8
 8000404:	af00      	add	r7, sp, #0
 8000406:	1dfb      	adds	r3, r7, #7
 8000408:	4a05      	ldr	r2, [pc, #20]	; (8000420 <readGesture+0x20>)
 800040a:	7812      	ldrb	r2, [r2, #0]
 800040c:	701a      	strb	r2, [r3, #0]
 800040e:	4b04      	ldr	r3, [pc, #16]	; (8000420 <readGesture+0x20>)
 8000410:	22ff      	movs	r2, #255	; 0xff
 8000412:	701a      	strb	r2, [r3, #0]
 8000414:	1dfb      	adds	r3, r7, #7
 8000416:	781b      	ldrb	r3, [r3, #0]
 8000418:	0018      	movs	r0, r3
 800041a:	46bd      	mov	sp, r7
 800041c:	b002      	add	sp, #8
 800041e:	bd80      	pop	{r7, pc}
 8000420:	20000086 	.word	0x20000086

08000424 <handleGesture>:
 8000424:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000426:	b0ab      	sub	sp, #172	; 0xac
 8000428:	af04      	add	r7, sp, #16
 800042a:	2393      	movs	r3, #147	; 0x93
 800042c:	18fb      	adds	r3, r7, r3
 800042e:	2250      	movs	r2, #80	; 0x50
 8000430:	701a      	strb	r2, [r3, #0]
 8000432:	2592      	movs	r5, #146	; 0x92
 8000434:	197c      	adds	r4, r7, r5
 8000436:	f7ff ffc1 	bl	80003bc <gestureFIFOAvailable>
 800043a:	0003      	movs	r3, r0
 800043c:	7023      	strb	r3, [r4, #0]
 800043e:	197b      	adds	r3, r7, r5
 8000440:	781b      	ldrb	r3, [r3, #0]
 8000442:	2b00      	cmp	r3, #0
 8000444:	d101      	bne.n	800044a <handleGesture+0x26>
 8000446:	2300      	movs	r3, #0
 8000448:	e0da      	b.n	8000600 <handleGesture+0x1dc>
 800044a:	4b6f      	ldr	r3, [pc, #444]	; (8000608 <handleGesture+0x1e4>)
 800044c:	8819      	ldrh	r1, [r3, #0]
 800044e:	2392      	movs	r3, #146	; 0x92
 8000450:	18fb      	adds	r3, r7, r3
 8000452:	781b      	ldrb	r3, [r3, #0]
 8000454:	b29b      	uxth	r3, r3
 8000456:	009b      	lsls	r3, r3, #2
 8000458:	b29b      	uxth	r3, r3
 800045a:	486c      	ldr	r0, [pc, #432]	; (800060c <handleGesture+0x1e8>)
 800045c:	220a      	movs	r2, #10
 800045e:	9202      	str	r2, [sp, #8]
 8000460:	9301      	str	r3, [sp, #4]
 8000462:	1d3b      	adds	r3, r7, #4
 8000464:	9300      	str	r3, [sp, #0]
 8000466:	2301      	movs	r3, #1
 8000468:	22fc      	movs	r2, #252	; 0xfc
 800046a:	f003 fbbf 	bl	8003bec <HAL_I2C_Mem_Read>
 800046e:	1e03      	subs	r3, r0, #0
 8000470:	d001      	beq.n	8000476 <handleGesture+0x52>
 8000472:	2300      	movs	r3, #0
 8000474:	e0c4      	b.n	8000600 <handleGesture+0x1dc>
 8000476:	2300      	movs	r3, #0
 8000478:	2294      	movs	r2, #148	; 0x94
 800047a:	18ba      	adds	r2, r7, r2
 800047c:	6013      	str	r3, [r2, #0]
 800047e:	e0b3      	b.n	80005e8 <handleGesture+0x1c4>
 8000480:	2491      	movs	r4, #145	; 0x91
 8000482:	193b      	adds	r3, r7, r4
 8000484:	1d39      	adds	r1, r7, #4
 8000486:	2094      	movs	r0, #148	; 0x94
 8000488:	183a      	adds	r2, r7, r0
 800048a:	6812      	ldr	r2, [r2, #0]
 800048c:	188a      	adds	r2, r1, r2
 800048e:	7812      	ldrb	r2, [r2, #0]
 8000490:	701a      	strb	r2, [r3, #0]
 8000492:	183b      	adds	r3, r7, r0
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	1c5a      	adds	r2, r3, #1
 8000498:	2590      	movs	r5, #144	; 0x90
 800049a:	197b      	adds	r3, r7, r5
 800049c:	1d39      	adds	r1, r7, #4
 800049e:	5c8a      	ldrb	r2, [r1, r2]
 80004a0:	701a      	strb	r2, [r3, #0]
 80004a2:	183b      	adds	r3, r7, r0
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	1c9a      	adds	r2, r3, #2
 80004a8:	268f      	movs	r6, #143	; 0x8f
 80004aa:	19bb      	adds	r3, r7, r6
 80004ac:	1d39      	adds	r1, r7, #4
 80004ae:	5c8a      	ldrb	r2, [r1, r2]
 80004b0:	701a      	strb	r2, [r3, #0]
 80004b2:	183b      	adds	r3, r7, r0
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	1cda      	adds	r2, r3, #3
 80004b8:	208e      	movs	r0, #142	; 0x8e
 80004ba:	183b      	adds	r3, r7, r0
 80004bc:	1d39      	adds	r1, r7, #4
 80004be:	5c8a      	ldrb	r2, [r1, r2]
 80004c0:	701a      	strb	r2, [r3, #0]
 80004c2:	193a      	adds	r2, r7, r4
 80004c4:	2193      	movs	r1, #147	; 0x93
 80004c6:	187b      	adds	r3, r7, r1
 80004c8:	7812      	ldrb	r2, [r2, #0]
 80004ca:	781b      	ldrb	r3, [r3, #0]
 80004cc:	429a      	cmp	r2, r3
 80004ce:	d262      	bcs.n	8000596 <handleGesture+0x172>
 80004d0:	197a      	adds	r2, r7, r5
 80004d2:	187b      	adds	r3, r7, r1
 80004d4:	7812      	ldrb	r2, [r2, #0]
 80004d6:	781b      	ldrb	r3, [r3, #0]
 80004d8:	429a      	cmp	r2, r3
 80004da:	d25c      	bcs.n	8000596 <handleGesture+0x172>
 80004dc:	19ba      	adds	r2, r7, r6
 80004de:	187b      	adds	r3, r7, r1
 80004e0:	7812      	ldrb	r2, [r2, #0]
 80004e2:	781b      	ldrb	r3, [r3, #0]
 80004e4:	429a      	cmp	r2, r3
 80004e6:	d256      	bcs.n	8000596 <handleGesture+0x172>
 80004e8:	183a      	adds	r2, r7, r0
 80004ea:	187b      	adds	r3, r7, r1
 80004ec:	7812      	ldrb	r2, [r2, #0]
 80004ee:	781b      	ldrb	r3, [r3, #0]
 80004f0:	429a      	cmp	r2, r3
 80004f2:	d250      	bcs.n	8000596 <handleGesture+0x172>
 80004f4:	4b46      	ldr	r3, [pc, #280]	; (8000610 <handleGesture+0x1ec>)
 80004f6:	2201      	movs	r2, #1
 80004f8:	701a      	strb	r2, [r3, #0]
 80004fa:	4b46      	ldr	r3, [pc, #280]	; (8000614 <handleGesture+0x1f0>)
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	2b00      	cmp	r3, #0
 8000500:	d103      	bne.n	800050a <handleGesture+0xe6>
 8000502:	4b45      	ldr	r3, [pc, #276]	; (8000618 <handleGesture+0x1f4>)
 8000504:	681b      	ldr	r3, [r3, #0]
 8000506:	2b00      	cmp	r3, #0
 8000508:	d067      	beq.n	80005da <handleGesture+0x1b6>
 800050a:	4b42      	ldr	r3, [pc, #264]	; (8000614 <handleGesture+0x1f0>)
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	4b43      	ldr	r3, [pc, #268]	; (800061c <handleGesture+0x1f8>)
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	1ad3      	subs	r3, r2, r3
 8000514:	2188      	movs	r1, #136	; 0x88
 8000516:	187a      	adds	r2, r7, r1
 8000518:	6013      	str	r3, [r2, #0]
 800051a:	4b3f      	ldr	r3, [pc, #252]	; (8000618 <handleGesture+0x1f4>)
 800051c:	681a      	ldr	r2, [r3, #0]
 800051e:	4b40      	ldr	r3, [pc, #256]	; (8000620 <handleGesture+0x1fc>)
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	1ad3      	subs	r3, r2, r3
 8000524:	2284      	movs	r2, #132	; 0x84
 8000526:	18ba      	adds	r2, r7, r2
 8000528:	6013      	str	r3, [r2, #0]
 800052a:	4b3e      	ldr	r3, [pc, #248]	; (8000624 <handleGesture+0x200>)
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	425b      	negs	r3, r3
 8000530:	187a      	adds	r2, r7, r1
 8000532:	6812      	ldr	r2, [r2, #0]
 8000534:	429a      	cmp	r2, r3
 8000536:	da02      	bge.n	800053e <handleGesture+0x11a>
 8000538:	4b3b      	ldr	r3, [pc, #236]	; (8000628 <handleGesture+0x204>)
 800053a:	2202      	movs	r2, #2
 800053c:	701a      	strb	r2, [r3, #0]
 800053e:	4b39      	ldr	r3, [pc, #228]	; (8000624 <handleGesture+0x200>)
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	2288      	movs	r2, #136	; 0x88
 8000544:	18ba      	adds	r2, r7, r2
 8000546:	6812      	ldr	r2, [r2, #0]
 8000548:	429a      	cmp	r2, r3
 800054a:	dd02      	ble.n	8000552 <handleGesture+0x12e>
 800054c:	4b36      	ldr	r3, [pc, #216]	; (8000628 <handleGesture+0x204>)
 800054e:	2203      	movs	r2, #3
 8000550:	701a      	strb	r2, [r3, #0]
 8000552:	4b34      	ldr	r3, [pc, #208]	; (8000624 <handleGesture+0x200>)
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	425b      	negs	r3, r3
 8000558:	2284      	movs	r2, #132	; 0x84
 800055a:	18ba      	adds	r2, r7, r2
 800055c:	6812      	ldr	r2, [r2, #0]
 800055e:	429a      	cmp	r2, r3
 8000560:	da02      	bge.n	8000568 <handleGesture+0x144>
 8000562:	4b31      	ldr	r3, [pc, #196]	; (8000628 <handleGesture+0x204>)
 8000564:	2201      	movs	r2, #1
 8000566:	701a      	strb	r2, [r3, #0]
 8000568:	4b2e      	ldr	r3, [pc, #184]	; (8000624 <handleGesture+0x200>)
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	2284      	movs	r2, #132	; 0x84
 800056e:	18ba      	adds	r2, r7, r2
 8000570:	6812      	ldr	r2, [r2, #0]
 8000572:	429a      	cmp	r2, r3
 8000574:	dd02      	ble.n	800057c <handleGesture+0x158>
 8000576:	4b2c      	ldr	r3, [pc, #176]	; (8000628 <handleGesture+0x204>)
 8000578:	2200      	movs	r2, #0
 800057a:	701a      	strb	r2, [r3, #0]
 800057c:	4b27      	ldr	r3, [pc, #156]	; (800061c <handleGesture+0x1f8>)
 800057e:	2200      	movs	r2, #0
 8000580:	601a      	str	r2, [r3, #0]
 8000582:	4b27      	ldr	r3, [pc, #156]	; (8000620 <handleGesture+0x1fc>)
 8000584:	2200      	movs	r2, #0
 8000586:	601a      	str	r2, [r3, #0]
 8000588:	4b22      	ldr	r3, [pc, #136]	; (8000614 <handleGesture+0x1f0>)
 800058a:	2200      	movs	r2, #0
 800058c:	601a      	str	r2, [r3, #0]
 800058e:	4b22      	ldr	r3, [pc, #136]	; (8000618 <handleGesture+0x1f4>)
 8000590:	2200      	movs	r2, #0
 8000592:	601a      	str	r2, [r3, #0]
 8000594:	e021      	b.n	80005da <handleGesture+0x1b6>
 8000596:	238e      	movs	r3, #142	; 0x8e
 8000598:	18fb      	adds	r3, r7, r3
 800059a:	781a      	ldrb	r2, [r3, #0]
 800059c:	238f      	movs	r3, #143	; 0x8f
 800059e:	18fb      	adds	r3, r7, r3
 80005a0:	781b      	ldrb	r3, [r3, #0]
 80005a2:	1ad2      	subs	r2, r2, r3
 80005a4:	4b1d      	ldr	r3, [pc, #116]	; (800061c <handleGesture+0x1f8>)
 80005a6:	601a      	str	r2, [r3, #0]
 80005a8:	2391      	movs	r3, #145	; 0x91
 80005aa:	18fb      	adds	r3, r7, r3
 80005ac:	781a      	ldrb	r2, [r3, #0]
 80005ae:	2390      	movs	r3, #144	; 0x90
 80005b0:	18fb      	adds	r3, r7, r3
 80005b2:	781b      	ldrb	r3, [r3, #0]
 80005b4:	1ad2      	subs	r2, r2, r3
 80005b6:	4b1a      	ldr	r3, [pc, #104]	; (8000620 <handleGesture+0x1fc>)
 80005b8:	601a      	str	r2, [r3, #0]
 80005ba:	4b15      	ldr	r3, [pc, #84]	; (8000610 <handleGesture+0x1ec>)
 80005bc:	781b      	ldrb	r3, [r3, #0]
 80005be:	2b00      	cmp	r3, #0
 80005c0:	d00c      	beq.n	80005dc <handleGesture+0x1b8>
 80005c2:	4b13      	ldr	r3, [pc, #76]	; (8000610 <handleGesture+0x1ec>)
 80005c4:	2200      	movs	r2, #0
 80005c6:	701a      	strb	r2, [r3, #0]
 80005c8:	4b14      	ldr	r3, [pc, #80]	; (800061c <handleGesture+0x1f8>)
 80005ca:	681a      	ldr	r2, [r3, #0]
 80005cc:	4b11      	ldr	r3, [pc, #68]	; (8000614 <handleGesture+0x1f0>)
 80005ce:	601a      	str	r2, [r3, #0]
 80005d0:	4b13      	ldr	r3, [pc, #76]	; (8000620 <handleGesture+0x1fc>)
 80005d2:	681a      	ldr	r2, [r3, #0]
 80005d4:	4b10      	ldr	r3, [pc, #64]	; (8000618 <handleGesture+0x1f4>)
 80005d6:	601a      	str	r2, [r3, #0]
 80005d8:	e000      	b.n	80005dc <handleGesture+0x1b8>
 80005da:	46c0      	nop			; (mov r8, r8)
 80005dc:	2294      	movs	r2, #148	; 0x94
 80005de:	18bb      	adds	r3, r7, r2
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	3304      	adds	r3, #4
 80005e4:	18ba      	adds	r2, r7, r2
 80005e6:	6013      	str	r3, [r2, #0]
 80005e8:	2394      	movs	r3, #148	; 0x94
 80005ea:	18fb      	adds	r3, r7, r3
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	1cda      	adds	r2, r3, #3
 80005f0:	2392      	movs	r3, #146	; 0x92
 80005f2:	18fb      	adds	r3, r7, r3
 80005f4:	781b      	ldrb	r3, [r3, #0]
 80005f6:	009b      	lsls	r3, r3, #2
 80005f8:	429a      	cmp	r2, r3
 80005fa:	da00      	bge.n	80005fe <handleGesture+0x1da>
 80005fc:	e740      	b.n	8000480 <handleGesture+0x5c>
 80005fe:	e718      	b.n	8000432 <handleGesture+0xe>
 8000600:	0018      	movs	r0, r3
 8000602:	46bd      	mov	sp, r7
 8000604:	b027      	add	sp, #156	; 0x9c
 8000606:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000608:	20000000 	.word	0x20000000
 800060c:	200000b4 	.word	0x200000b4
 8000610:	20000087 	.word	0x20000087
 8000614:	20000090 	.word	0x20000090
 8000618:	20000094 	.word	0x20000094
 800061c:	20000088 	.word	0x20000088
 8000620:	2000008c 	.word	0x2000008c
 8000624:	20000098 	.word	0x20000098
 8000628:	20000086 	.word	0x20000086

0800062c <gestureAvailable>:
 800062c:	b590      	push	{r4, r7, lr}
 800062e:	b083      	sub	sp, #12
 8000630:	af00      	add	r7, sp, #0
 8000632:	1dfc      	adds	r4, r7, #7
 8000634:	2080      	movs	r0, #128	; 0x80
 8000636:	f000 f867 	bl	8000708 <read8>
 800063a:	0003      	movs	r3, r0
 800063c:	7023      	strb	r3, [r4, #0]
 800063e:	1dfb      	adds	r3, r7, #7
 8000640:	781b      	ldrb	r3, [r3, #0]
 8000642:	2240      	movs	r2, #64	; 0x40
 8000644:	4013      	ands	r3, r2
 8000646:	d003      	beq.n	8000650 <gestureAvailable+0x24>
 8000648:	4b1b      	ldr	r3, [pc, #108]	; (80006b8 <gestureAvailable+0x8c>)
 800064a:	2201      	movs	r2, #1
 800064c:	701a      	strb	r2, [r3, #0]
 800064e:	e019      	b.n	8000684 <gestureAvailable+0x58>
 8000650:	1dfb      	adds	r3, r7, #7
 8000652:	1dfa      	adds	r2, r7, #7
 8000654:	7812      	ldrb	r2, [r2, #0]
 8000656:	2141      	movs	r1, #65	; 0x41
 8000658:	430a      	orrs	r2, r1
 800065a:	701a      	strb	r2, [r3, #0]
 800065c:	1dfb      	adds	r3, r7, #7
 800065e:	781b      	ldrb	r3, [r3, #0]
 8000660:	0019      	movs	r1, r3
 8000662:	2080      	movs	r0, #128	; 0x80
 8000664:	f000 f82a 	bl	80006bc <write8>
 8000668:	1dfc      	adds	r4, r7, #7
 800066a:	2080      	movs	r0, #128	; 0x80
 800066c:	f000 f84c 	bl	8000708 <read8>
 8000670:	0003      	movs	r3, r0
 8000672:	7023      	strb	r3, [r4, #0]
 8000674:	1dfb      	adds	r3, r7, #7
 8000676:	781b      	ldrb	r3, [r3, #0]
 8000678:	2240      	movs	r2, #64	; 0x40
 800067a:	4013      	ands	r3, r2
 800067c:	d002      	beq.n	8000684 <gestureAvailable+0x58>
 800067e:	4b0e      	ldr	r3, [pc, #56]	; (80006b8 <gestureAvailable+0x8c>)
 8000680:	2201      	movs	r2, #1
 8000682:	701a      	strb	r2, [r3, #0]
 8000684:	2380      	movs	r3, #128	; 0x80
 8000686:	021a      	lsls	r2, r3, #8
 8000688:	2390      	movs	r3, #144	; 0x90
 800068a:	05db      	lsls	r3, r3, #23
 800068c:	0011      	movs	r1, r2
 800068e:	0018      	movs	r0, r3
 8000690:	f003 f892 	bl	80037b8 <HAL_GPIO_ReadPin>
 8000694:	1e03      	subs	r3, r0, #0
 8000696:	d001      	beq.n	800069c <gestureAvailable+0x70>
 8000698:	2300      	movs	r3, #0
 800069a:	e008      	b.n	80006ae <gestureAvailable+0x82>
 800069c:	f7ff fe8e 	bl	80003bc <gestureFIFOAvailable>
 80006a0:	1e03      	subs	r3, r0, #0
 80006a2:	d101      	bne.n	80006a8 <gestureAvailable+0x7c>
 80006a4:	2300      	movs	r3, #0
 80006a6:	e002      	b.n	80006ae <gestureAvailable+0x82>
 80006a8:	f7ff febc 	bl	8000424 <handleGesture>
 80006ac:	2301      	movs	r3, #1
 80006ae:	0018      	movs	r0, r3
 80006b0:	46bd      	mov	sp, r7
 80006b2:	b003      	add	sp, #12
 80006b4:	bd90      	pop	{r4, r7, pc}
 80006b6:	46c0      	nop			; (mov r8, r8)
 80006b8:	20000084 	.word	0x20000084

080006bc <write8>:
 80006bc:	b580      	push	{r7, lr}
 80006be:	b086      	sub	sp, #24
 80006c0:	af04      	add	r7, sp, #16
 80006c2:	0002      	movs	r2, r0
 80006c4:	1dfb      	adds	r3, r7, #7
 80006c6:	701a      	strb	r2, [r3, #0]
 80006c8:	1dbb      	adds	r3, r7, #6
 80006ca:	1c0a      	adds	r2, r1, #0
 80006cc:	701a      	strb	r2, [r3, #0]
 80006ce:	4b0c      	ldr	r3, [pc, #48]	; (8000700 <write8+0x44>)
 80006d0:	8819      	ldrh	r1, [r3, #0]
 80006d2:	1dfb      	adds	r3, r7, #7
 80006d4:	781b      	ldrb	r3, [r3, #0]
 80006d6:	b29a      	uxth	r2, r3
 80006d8:	480a      	ldr	r0, [pc, #40]	; (8000704 <write8+0x48>)
 80006da:	230a      	movs	r3, #10
 80006dc:	9302      	str	r3, [sp, #8]
 80006de:	2301      	movs	r3, #1
 80006e0:	9301      	str	r3, [sp, #4]
 80006e2:	1dbb      	adds	r3, r7, #6
 80006e4:	9300      	str	r3, [sp, #0]
 80006e6:	2301      	movs	r3, #1
 80006e8:	f003 f952 	bl	8003990 <HAL_I2C_Mem_Write>
 80006ec:	1e03      	subs	r3, r0, #0
 80006ee:	d001      	beq.n	80006f4 <write8+0x38>
 80006f0:	2300      	movs	r3, #0
 80006f2:	e000      	b.n	80006f6 <write8+0x3a>
 80006f4:	2301      	movs	r3, #1
 80006f6:	0018      	movs	r0, r3
 80006f8:	46bd      	mov	sp, r7
 80006fa:	b002      	add	sp, #8
 80006fc:	bd80      	pop	{r7, pc}
 80006fe:	46c0      	nop			; (mov r8, r8)
 8000700:	20000000 	.word	0x20000000
 8000704:	200000b4 	.word	0x200000b4

08000708 <read8>:
 8000708:	b580      	push	{r7, lr}
 800070a:	b088      	sub	sp, #32
 800070c:	af04      	add	r7, sp, #16
 800070e:	0002      	movs	r2, r0
 8000710:	1dfb      	adds	r3, r7, #7
 8000712:	701a      	strb	r2, [r3, #0]
 8000714:	4b0d      	ldr	r3, [pc, #52]	; (800074c <read8+0x44>)
 8000716:	8819      	ldrh	r1, [r3, #0]
 8000718:	1dfb      	adds	r3, r7, #7
 800071a:	781b      	ldrb	r3, [r3, #0]
 800071c:	b29a      	uxth	r2, r3
 800071e:	480c      	ldr	r0, [pc, #48]	; (8000750 <read8+0x48>)
 8000720:	230a      	movs	r3, #10
 8000722:	9302      	str	r3, [sp, #8]
 8000724:	2301      	movs	r3, #1
 8000726:	9301      	str	r3, [sp, #4]
 8000728:	230f      	movs	r3, #15
 800072a:	18fb      	adds	r3, r7, r3
 800072c:	9300      	str	r3, [sp, #0]
 800072e:	2301      	movs	r3, #1
 8000730:	f003 fa5c 	bl	8003bec <HAL_I2C_Mem_Read>
 8000734:	1e03      	subs	r3, r0, #0
 8000736:	d001      	beq.n	800073c <read8+0x34>
 8000738:	2300      	movs	r3, #0
 800073a:	e002      	b.n	8000742 <read8+0x3a>
 800073c:	230f      	movs	r3, #15
 800073e:	18fb      	adds	r3, r7, r3
 8000740:	781b      	ldrb	r3, [r3, #0]
 8000742:	0018      	movs	r0, r3
 8000744:	46bd      	mov	sp, r7
 8000746:	b004      	add	sp, #16
 8000748:	bd80      	pop	{r7, pc}
 800074a:	46c0      	nop			; (mov r8, r8)
 800074c:	20000000 	.word	0x20000000
 8000750:	200000b4 	.word	0x200000b4

08000754 <lcd_init>:
 8000754:	b580      	push	{r7, lr}
 8000756:	af00      	add	r7, sp, #0
 8000758:	201e      	movs	r0, #30
 800075a:	f002 fd3d 	bl	80031d8 <HAL_Delay>
 800075e:	2390      	movs	r3, #144	; 0x90
 8000760:	05db      	lsls	r3, r3, #23
 8000762:	2200      	movs	r2, #0
 8000764:	2101      	movs	r1, #1
 8000766:	0018      	movs	r0, r3
 8000768:	f003 f843 	bl	80037f2 <HAL_GPIO_WritePin>
 800076c:	2390      	movs	r3, #144	; 0x90
 800076e:	05db      	lsls	r3, r3, #23
 8000770:	2201      	movs	r2, #1
 8000772:	2102      	movs	r1, #2
 8000774:	0018      	movs	r0, r3
 8000776:	f003 f83c 	bl	80037f2 <HAL_GPIO_WritePin>
 800077a:	2390      	movs	r3, #144	; 0x90
 800077c:	05db      	lsls	r3, r3, #23
 800077e:	2200      	movs	r2, #0
 8000780:	2104      	movs	r1, #4
 8000782:	0018      	movs	r0, r3
 8000784:	f003 f835 	bl	80037f2 <HAL_GPIO_WritePin>
 8000788:	2390      	movs	r3, #144	; 0x90
 800078a:	05db      	lsls	r3, r3, #23
 800078c:	2200      	movs	r2, #0
 800078e:	2108      	movs	r1, #8
 8000790:	0018      	movs	r0, r3
 8000792:	f003 f82e 	bl	80037f2 <HAL_GPIO_WritePin>
 8000796:	2390      	movs	r3, #144	; 0x90
 8000798:	05db      	lsls	r3, r3, #23
 800079a:	2200      	movs	r2, #0
 800079c:	2120      	movs	r1, #32
 800079e:	0018      	movs	r0, r3
 80007a0:	f003 f827 	bl	80037f2 <HAL_GPIO_WritePin>
 80007a4:	2390      	movs	r3, #144	; 0x90
 80007a6:	05db      	lsls	r3, r3, #23
 80007a8:	2201      	movs	r2, #1
 80007aa:	2110      	movs	r1, #16
 80007ac:	0018      	movs	r0, r3
 80007ae:	f003 f820 	bl	80037f2 <HAL_GPIO_WritePin>
 80007b2:	2390      	movs	r3, #144	; 0x90
 80007b4:	05db      	lsls	r3, r3, #23
 80007b6:	2200      	movs	r2, #0
 80007b8:	2110      	movs	r1, #16
 80007ba:	0018      	movs	r0, r3
 80007bc:	f003 f819 	bl	80037f2 <HAL_GPIO_WritePin>
 80007c0:	2032      	movs	r0, #50	; 0x32
 80007c2:	f002 fd09 	bl	80031d8 <HAL_Delay>
 80007c6:	2128      	movs	r1, #40	; 0x28
 80007c8:	2000      	movs	r0, #0
 80007ca:	f000 f822 	bl	8000812 <lcd_write>
 80007ce:	2001      	movs	r0, #1
 80007d0:	f002 fd02 	bl	80031d8 <HAL_Delay>
 80007d4:	210c      	movs	r1, #12
 80007d6:	2000      	movs	r0, #0
 80007d8:	f000 f81b 	bl	8000812 <lcd_write>
 80007dc:	2001      	movs	r0, #1
 80007de:	f002 fcfb 	bl	80031d8 <HAL_Delay>
 80007e2:	2106      	movs	r1, #6
 80007e4:	2000      	movs	r0, #0
 80007e6:	f000 f814 	bl	8000812 <lcd_write>
 80007ea:	2001      	movs	r0, #1
 80007ec:	f002 fcf4 	bl	80031d8 <HAL_Delay>
 80007f0:	2101      	movs	r1, #1
 80007f2:	2000      	movs	r0, #0
 80007f4:	f000 f80d 	bl	8000812 <lcd_write>
 80007f8:	2001      	movs	r0, #1
 80007fa:	f002 fced 	bl	80031d8 <HAL_Delay>
 80007fe:	2180      	movs	r1, #128	; 0x80
 8000800:	2000      	movs	r0, #0
 8000802:	f000 f806 	bl	8000812 <lcd_write>
 8000806:	2001      	movs	r0, #1
 8000808:	f002 fce6 	bl	80031d8 <HAL_Delay>
 800080c:	46c0      	nop			; (mov r8, r8)
 800080e:	46bd      	mov	sp, r7
 8000810:	bd80      	pop	{r7, pc}

08000812 <lcd_write>:
 8000812:	b580      	push	{r7, lr}
 8000814:	b082      	sub	sp, #8
 8000816:	af00      	add	r7, sp, #0
 8000818:	0002      	movs	r2, r0
 800081a:	1dfb      	adds	r3, r7, #7
 800081c:	701a      	strb	r2, [r3, #0]
 800081e:	1dbb      	adds	r3, r7, #6
 8000820:	1c0a      	adds	r2, r1, #0
 8000822:	701a      	strb	r2, [r3, #0]
 8000824:	2002      	movs	r0, #2
 8000826:	f002 fcd7 	bl	80031d8 <HAL_Delay>
 800082a:	1dfb      	adds	r3, r7, #7
 800082c:	781b      	ldrb	r3, [r3, #0]
 800082e:	2b00      	cmp	r3, #0
 8000830:	d007      	beq.n	8000842 <lcd_write+0x30>
 8000832:	2390      	movs	r3, #144	; 0x90
 8000834:	05db      	lsls	r3, r3, #23
 8000836:	2201      	movs	r2, #1
 8000838:	2120      	movs	r1, #32
 800083a:	0018      	movs	r0, r3
 800083c:	f002 ffd9 	bl	80037f2 <HAL_GPIO_WritePin>
 8000840:	e006      	b.n	8000850 <lcd_write+0x3e>
 8000842:	2390      	movs	r3, #144	; 0x90
 8000844:	05db      	lsls	r3, r3, #23
 8000846:	2200      	movs	r2, #0
 8000848:	2120      	movs	r1, #32
 800084a:	0018      	movs	r0, r3
 800084c:	f002 ffd1 	bl	80037f2 <HAL_GPIO_WritePin>
 8000850:	1dbb      	adds	r3, r7, #6
 8000852:	781b      	ldrb	r3, [r3, #0]
 8000854:	b25b      	sxtb	r3, r3
 8000856:	2b00      	cmp	r3, #0
 8000858:	da07      	bge.n	800086a <lcd_write+0x58>
 800085a:	2390      	movs	r3, #144	; 0x90
 800085c:	05db      	lsls	r3, r3, #23
 800085e:	2201      	movs	r2, #1
 8000860:	2108      	movs	r1, #8
 8000862:	0018      	movs	r0, r3
 8000864:	f002 ffc5 	bl	80037f2 <HAL_GPIO_WritePin>
 8000868:	e006      	b.n	8000878 <lcd_write+0x66>
 800086a:	2390      	movs	r3, #144	; 0x90
 800086c:	05db      	lsls	r3, r3, #23
 800086e:	2200      	movs	r2, #0
 8000870:	2108      	movs	r1, #8
 8000872:	0018      	movs	r0, r3
 8000874:	f002 ffbd 	bl	80037f2 <HAL_GPIO_WritePin>
 8000878:	1dbb      	adds	r3, r7, #6
 800087a:	781b      	ldrb	r3, [r3, #0]
 800087c:	2240      	movs	r2, #64	; 0x40
 800087e:	4013      	ands	r3, r2
 8000880:	d007      	beq.n	8000892 <lcd_write+0x80>
 8000882:	2390      	movs	r3, #144	; 0x90
 8000884:	05db      	lsls	r3, r3, #23
 8000886:	2201      	movs	r2, #1
 8000888:	2104      	movs	r1, #4
 800088a:	0018      	movs	r0, r3
 800088c:	f002 ffb1 	bl	80037f2 <HAL_GPIO_WritePin>
 8000890:	e006      	b.n	80008a0 <lcd_write+0x8e>
 8000892:	2390      	movs	r3, #144	; 0x90
 8000894:	05db      	lsls	r3, r3, #23
 8000896:	2200      	movs	r2, #0
 8000898:	2104      	movs	r1, #4
 800089a:	0018      	movs	r0, r3
 800089c:	f002 ffa9 	bl	80037f2 <HAL_GPIO_WritePin>
 80008a0:	1dbb      	adds	r3, r7, #6
 80008a2:	781b      	ldrb	r3, [r3, #0]
 80008a4:	2220      	movs	r2, #32
 80008a6:	4013      	ands	r3, r2
 80008a8:	d007      	beq.n	80008ba <lcd_write+0xa8>
 80008aa:	2390      	movs	r3, #144	; 0x90
 80008ac:	05db      	lsls	r3, r3, #23
 80008ae:	2201      	movs	r2, #1
 80008b0:	2102      	movs	r1, #2
 80008b2:	0018      	movs	r0, r3
 80008b4:	f002 ff9d 	bl	80037f2 <HAL_GPIO_WritePin>
 80008b8:	e006      	b.n	80008c8 <lcd_write+0xb6>
 80008ba:	2390      	movs	r3, #144	; 0x90
 80008bc:	05db      	lsls	r3, r3, #23
 80008be:	2200      	movs	r2, #0
 80008c0:	2102      	movs	r1, #2
 80008c2:	0018      	movs	r0, r3
 80008c4:	f002 ff95 	bl	80037f2 <HAL_GPIO_WritePin>
 80008c8:	1dbb      	adds	r3, r7, #6
 80008ca:	781b      	ldrb	r3, [r3, #0]
 80008cc:	2210      	movs	r2, #16
 80008ce:	4013      	ands	r3, r2
 80008d0:	d007      	beq.n	80008e2 <lcd_write+0xd0>
 80008d2:	2390      	movs	r3, #144	; 0x90
 80008d4:	05db      	lsls	r3, r3, #23
 80008d6:	2201      	movs	r2, #1
 80008d8:	2101      	movs	r1, #1
 80008da:	0018      	movs	r0, r3
 80008dc:	f002 ff89 	bl	80037f2 <HAL_GPIO_WritePin>
 80008e0:	e006      	b.n	80008f0 <lcd_write+0xde>
 80008e2:	2390      	movs	r3, #144	; 0x90
 80008e4:	05db      	lsls	r3, r3, #23
 80008e6:	2200      	movs	r2, #0
 80008e8:	2101      	movs	r1, #1
 80008ea:	0018      	movs	r0, r3
 80008ec:	f002 ff81 	bl	80037f2 <HAL_GPIO_WritePin>
 80008f0:	2390      	movs	r3, #144	; 0x90
 80008f2:	05db      	lsls	r3, r3, #23
 80008f4:	2201      	movs	r2, #1
 80008f6:	2110      	movs	r1, #16
 80008f8:	0018      	movs	r0, r3
 80008fa:	f002 ff7a 	bl	80037f2 <HAL_GPIO_WritePin>
 80008fe:	2390      	movs	r3, #144	; 0x90
 8000900:	05db      	lsls	r3, r3, #23
 8000902:	2200      	movs	r2, #0
 8000904:	2110      	movs	r1, #16
 8000906:	0018      	movs	r0, r3
 8000908:	f002 ff73 	bl	80037f2 <HAL_GPIO_WritePin>
 800090c:	1dbb      	adds	r3, r7, #6
 800090e:	781b      	ldrb	r3, [r3, #0]
 8000910:	2208      	movs	r2, #8
 8000912:	4013      	ands	r3, r2
 8000914:	d007      	beq.n	8000926 <lcd_write+0x114>
 8000916:	2390      	movs	r3, #144	; 0x90
 8000918:	05db      	lsls	r3, r3, #23
 800091a:	2201      	movs	r2, #1
 800091c:	2108      	movs	r1, #8
 800091e:	0018      	movs	r0, r3
 8000920:	f002 ff67 	bl	80037f2 <HAL_GPIO_WritePin>
 8000924:	e006      	b.n	8000934 <lcd_write+0x122>
 8000926:	2390      	movs	r3, #144	; 0x90
 8000928:	05db      	lsls	r3, r3, #23
 800092a:	2200      	movs	r2, #0
 800092c:	2108      	movs	r1, #8
 800092e:	0018      	movs	r0, r3
 8000930:	f002 ff5f 	bl	80037f2 <HAL_GPIO_WritePin>
 8000934:	1dbb      	adds	r3, r7, #6
 8000936:	781b      	ldrb	r3, [r3, #0]
 8000938:	2204      	movs	r2, #4
 800093a:	4013      	ands	r3, r2
 800093c:	d007      	beq.n	800094e <lcd_write+0x13c>
 800093e:	2390      	movs	r3, #144	; 0x90
 8000940:	05db      	lsls	r3, r3, #23
 8000942:	2201      	movs	r2, #1
 8000944:	2104      	movs	r1, #4
 8000946:	0018      	movs	r0, r3
 8000948:	f002 ff53 	bl	80037f2 <HAL_GPIO_WritePin>
 800094c:	e006      	b.n	800095c <lcd_write+0x14a>
 800094e:	2390      	movs	r3, #144	; 0x90
 8000950:	05db      	lsls	r3, r3, #23
 8000952:	2200      	movs	r2, #0
 8000954:	2104      	movs	r1, #4
 8000956:	0018      	movs	r0, r3
 8000958:	f002 ff4b 	bl	80037f2 <HAL_GPIO_WritePin>
 800095c:	1dbb      	adds	r3, r7, #6
 800095e:	781b      	ldrb	r3, [r3, #0]
 8000960:	2202      	movs	r2, #2
 8000962:	4013      	ands	r3, r2
 8000964:	d007      	beq.n	8000976 <lcd_write+0x164>
 8000966:	2390      	movs	r3, #144	; 0x90
 8000968:	05db      	lsls	r3, r3, #23
 800096a:	2201      	movs	r2, #1
 800096c:	2102      	movs	r1, #2
 800096e:	0018      	movs	r0, r3
 8000970:	f002 ff3f 	bl	80037f2 <HAL_GPIO_WritePin>
 8000974:	e006      	b.n	8000984 <lcd_write+0x172>
 8000976:	2390      	movs	r3, #144	; 0x90
 8000978:	05db      	lsls	r3, r3, #23
 800097a:	2200      	movs	r2, #0
 800097c:	2102      	movs	r1, #2
 800097e:	0018      	movs	r0, r3
 8000980:	f002 ff37 	bl	80037f2 <HAL_GPIO_WritePin>
 8000984:	1dbb      	adds	r3, r7, #6
 8000986:	781b      	ldrb	r3, [r3, #0]
 8000988:	2201      	movs	r2, #1
 800098a:	4013      	ands	r3, r2
 800098c:	d007      	beq.n	800099e <lcd_write+0x18c>
 800098e:	2390      	movs	r3, #144	; 0x90
 8000990:	05db      	lsls	r3, r3, #23
 8000992:	2201      	movs	r2, #1
 8000994:	2101      	movs	r1, #1
 8000996:	0018      	movs	r0, r3
 8000998:	f002 ff2b 	bl	80037f2 <HAL_GPIO_WritePin>
 800099c:	e006      	b.n	80009ac <lcd_write+0x19a>
 800099e:	2390      	movs	r3, #144	; 0x90
 80009a0:	05db      	lsls	r3, r3, #23
 80009a2:	2200      	movs	r2, #0
 80009a4:	2101      	movs	r1, #1
 80009a6:	0018      	movs	r0, r3
 80009a8:	f002 ff23 	bl	80037f2 <HAL_GPIO_WritePin>
 80009ac:	2390      	movs	r3, #144	; 0x90
 80009ae:	05db      	lsls	r3, r3, #23
 80009b0:	2201      	movs	r2, #1
 80009b2:	2110      	movs	r1, #16
 80009b4:	0018      	movs	r0, r3
 80009b6:	f002 ff1c 	bl	80037f2 <HAL_GPIO_WritePin>
 80009ba:	2390      	movs	r3, #144	; 0x90
 80009bc:	05db      	lsls	r3, r3, #23
 80009be:	2200      	movs	r2, #0
 80009c0:	2110      	movs	r1, #16
 80009c2:	0018      	movs	r0, r3
 80009c4:	f002 ff15 	bl	80037f2 <HAL_GPIO_WritePin>
 80009c8:	46c0      	nop			; (mov r8, r8)
 80009ca:	46bd      	mov	sp, r7
 80009cc:	b002      	add	sp, #8
 80009ce:	bd80      	pop	{r7, pc}

080009d0 <lcd_puts>:
 80009d0:	b580      	push	{r7, lr}
 80009d2:	b082      	sub	sp, #8
 80009d4:	af00      	add	r7, sp, #0
 80009d6:	603a      	str	r2, [r7, #0]
 80009d8:	1dfb      	adds	r3, r7, #7
 80009da:	1c02      	adds	r2, r0, #0
 80009dc:	701a      	strb	r2, [r3, #0]
 80009de:	1dbb      	adds	r3, r7, #6
 80009e0:	1c0a      	adds	r2, r1, #0
 80009e2:	701a      	strb	r2, [r3, #0]
 80009e4:	1dfb      	adds	r3, r7, #7
 80009e6:	781b      	ldrb	r3, [r3, #0]
 80009e8:	2b03      	cmp	r3, #3
 80009ea:	d023      	beq.n	8000a34 <lcd_puts+0x64>
 80009ec:	dc37      	bgt.n	8000a5e <lcd_puts+0x8e>
 80009ee:	2b02      	cmp	r3, #2
 80009f0:	d017      	beq.n	8000a22 <lcd_puts+0x52>
 80009f2:	dc34      	bgt.n	8000a5e <lcd_puts+0x8e>
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	d002      	beq.n	80009fe <lcd_puts+0x2e>
 80009f8:	2b01      	cmp	r3, #1
 80009fa:	d009      	beq.n	8000a10 <lcd_puts+0x40>
 80009fc:	e023      	b.n	8000a46 <lcd_puts+0x76>
 80009fe:	1dbb      	adds	r3, r7, #6
 8000a00:	781b      	ldrb	r3, [r3, #0]
 8000a02:	3b80      	subs	r3, #128	; 0x80
 8000a04:	b2db      	uxtb	r3, r3
 8000a06:	0019      	movs	r1, r3
 8000a08:	2000      	movs	r0, #0
 8000a0a:	f7ff ff02 	bl	8000812 <lcd_write>
 8000a0e:	e01a      	b.n	8000a46 <lcd_puts+0x76>
 8000a10:	1dbb      	adds	r3, r7, #6
 8000a12:	781b      	ldrb	r3, [r3, #0]
 8000a14:	3b40      	subs	r3, #64	; 0x40
 8000a16:	b2db      	uxtb	r3, r3
 8000a18:	0019      	movs	r1, r3
 8000a1a:	2000      	movs	r0, #0
 8000a1c:	f7ff fef9 	bl	8000812 <lcd_write>
 8000a20:	e011      	b.n	8000a46 <lcd_puts+0x76>
 8000a22:	1dbb      	adds	r3, r7, #6
 8000a24:	781b      	ldrb	r3, [r3, #0]
 8000a26:	3b6c      	subs	r3, #108	; 0x6c
 8000a28:	b2db      	uxtb	r3, r3
 8000a2a:	0019      	movs	r1, r3
 8000a2c:	2000      	movs	r0, #0
 8000a2e:	f7ff fef0 	bl	8000812 <lcd_write>
 8000a32:	e008      	b.n	8000a46 <lcd_puts+0x76>
 8000a34:	1dbb      	adds	r3, r7, #6
 8000a36:	781b      	ldrb	r3, [r3, #0]
 8000a38:	3b2c      	subs	r3, #44	; 0x2c
 8000a3a:	b2db      	uxtb	r3, r3
 8000a3c:	0019      	movs	r1, r3
 8000a3e:	2000      	movs	r0, #0
 8000a40:	f7ff fee7 	bl	8000812 <lcd_write>
 8000a44:	46c0      	nop			; (mov r8, r8)
 8000a46:	e00a      	b.n	8000a5e <lcd_puts+0x8e>
 8000a48:	683b      	ldr	r3, [r7, #0]
 8000a4a:	781b      	ldrb	r3, [r3, #0]
 8000a4c:	b25b      	sxtb	r3, r3
 8000a4e:	b2db      	uxtb	r3, r3
 8000a50:	0019      	movs	r1, r3
 8000a52:	2001      	movs	r0, #1
 8000a54:	f7ff fedd 	bl	8000812 <lcd_write>
 8000a58:	683b      	ldr	r3, [r7, #0]
 8000a5a:	3301      	adds	r3, #1
 8000a5c:	603b      	str	r3, [r7, #0]
 8000a5e:	683b      	ldr	r3, [r7, #0]
 8000a60:	781b      	ldrb	r3, [r3, #0]
 8000a62:	b25b      	sxtb	r3, r3
 8000a64:	2b00      	cmp	r3, #0
 8000a66:	d1ef      	bne.n	8000a48 <lcd_puts+0x78>
 8000a68:	46c0      	nop			; (mov r8, r8)
 8000a6a:	46c0      	nop			; (mov r8, r8)
 8000a6c:	46bd      	mov	sp, r7
 8000a6e:	b002      	add	sp, #8
 8000a70:	bd80      	pop	{r7, pc}
	...

08000a74 <clr_data>:
 8000a74:	b580      	push	{r7, lr}
 8000a76:	b082      	sub	sp, #8
 8000a78:	af00      	add	r7, sp, #0
 8000a7a:	0002      	movs	r2, r0
 8000a7c:	1dfb      	adds	r3, r7, #7
 8000a7e:	701a      	strb	r2, [r3, #0]
 8000a80:	1dfb      	adds	r3, r7, #7
 8000a82:	781b      	ldrb	r3, [r3, #0]
 8000a84:	2b0a      	cmp	r3, #10
 8000a86:	d900      	bls.n	8000a8a <clr_data+0x16>
 8000a88:	e0c8      	b.n	8000c1c <clr_data+0x1a8>
 8000a8a:	009a      	lsls	r2, r3, #2
 8000a8c:	4b65      	ldr	r3, [pc, #404]	; (8000c24 <clr_data+0x1b0>)
 8000a8e:	18d3      	adds	r3, r2, r3
 8000a90:	681b      	ldr	r3, [r3, #0]
 8000a92:	469f      	mov	pc, r3
 8000a94:	4b64      	ldr	r3, [pc, #400]	; (8000c28 <clr_data+0x1b4>)
 8000a96:	001a      	movs	r2, r3
 8000a98:	2107      	movs	r1, #7
 8000a9a:	2001      	movs	r0, #1
 8000a9c:	f7ff ff98 	bl	80009d0 <lcd_puts>
 8000aa0:	4b61      	ldr	r3, [pc, #388]	; (8000c28 <clr_data+0x1b4>)
 8000aa2:	001a      	movs	r2, r3
 8000aa4:	2108      	movs	r1, #8
 8000aa6:	2001      	movs	r0, #1
 8000aa8:	f7ff ff92 	bl	80009d0 <lcd_puts>
 8000aac:	4b5e      	ldr	r3, [pc, #376]	; (8000c28 <clr_data+0x1b4>)
 8000aae:	001a      	movs	r2, r3
 8000ab0:	2109      	movs	r1, #9
 8000ab2:	2001      	movs	r0, #1
 8000ab4:	f7ff ff8c 	bl	80009d0 <lcd_puts>
 8000ab8:	e0b0      	b.n	8000c1c <clr_data+0x1a8>
 8000aba:	4b5b      	ldr	r3, [pc, #364]	; (8000c28 <clr_data+0x1b4>)
 8000abc:	001a      	movs	r2, r3
 8000abe:	2107      	movs	r1, #7
 8000ac0:	2002      	movs	r0, #2
 8000ac2:	f7ff ff85 	bl	80009d0 <lcd_puts>
 8000ac6:	e0a9      	b.n	8000c1c <clr_data+0x1a8>
 8000ac8:	4b57      	ldr	r3, [pc, #348]	; (8000c28 <clr_data+0x1b4>)
 8000aca:	001a      	movs	r2, r3
 8000acc:	2107      	movs	r1, #7
 8000ace:	2003      	movs	r0, #3
 8000ad0:	f7ff ff7e 	bl	80009d0 <lcd_puts>
 8000ad4:	4b54      	ldr	r3, [pc, #336]	; (8000c28 <clr_data+0x1b4>)
 8000ad6:	001a      	movs	r2, r3
 8000ad8:	2108      	movs	r1, #8
 8000ada:	2003      	movs	r0, #3
 8000adc:	f7ff ff78 	bl	80009d0 <lcd_puts>
 8000ae0:	4b51      	ldr	r3, [pc, #324]	; (8000c28 <clr_data+0x1b4>)
 8000ae2:	001a      	movs	r2, r3
 8000ae4:	2109      	movs	r1, #9
 8000ae6:	2003      	movs	r0, #3
 8000ae8:	f7ff ff72 	bl	80009d0 <lcd_puts>
 8000aec:	e096      	b.n	8000c1c <clr_data+0x1a8>
 8000aee:	4b4e      	ldr	r3, [pc, #312]	; (8000c28 <clr_data+0x1b4>)
 8000af0:	001a      	movs	r2, r3
 8000af2:	2111      	movs	r1, #17
 8000af4:	2001      	movs	r0, #1
 8000af6:	f7ff ff6b 	bl	80009d0 <lcd_puts>
 8000afa:	4b4b      	ldr	r3, [pc, #300]	; (8000c28 <clr_data+0x1b4>)
 8000afc:	001a      	movs	r2, r3
 8000afe:	2112      	movs	r1, #18
 8000b00:	2001      	movs	r0, #1
 8000b02:	f7ff ff65 	bl	80009d0 <lcd_puts>
 8000b06:	4b48      	ldr	r3, [pc, #288]	; (8000c28 <clr_data+0x1b4>)
 8000b08:	001a      	movs	r2, r3
 8000b0a:	2113      	movs	r1, #19
 8000b0c:	2001      	movs	r0, #1
 8000b0e:	f7ff ff5f 	bl	80009d0 <lcd_puts>
 8000b12:	e083      	b.n	8000c1c <clr_data+0x1a8>
 8000b14:	4b44      	ldr	r3, [pc, #272]	; (8000c28 <clr_data+0x1b4>)
 8000b16:	001a      	movs	r2, r3
 8000b18:	2111      	movs	r1, #17
 8000b1a:	2002      	movs	r0, #2
 8000b1c:	f7ff ff58 	bl	80009d0 <lcd_puts>
 8000b20:	4b41      	ldr	r3, [pc, #260]	; (8000c28 <clr_data+0x1b4>)
 8000b22:	001a      	movs	r2, r3
 8000b24:	2112      	movs	r1, #18
 8000b26:	2002      	movs	r0, #2
 8000b28:	f7ff ff52 	bl	80009d0 <lcd_puts>
 8000b2c:	4b3e      	ldr	r3, [pc, #248]	; (8000c28 <clr_data+0x1b4>)
 8000b2e:	001a      	movs	r2, r3
 8000b30:	2113      	movs	r1, #19
 8000b32:	2002      	movs	r0, #2
 8000b34:	f7ff ff4c 	bl	80009d0 <lcd_puts>
 8000b38:	e070      	b.n	8000c1c <clr_data+0x1a8>
 8000b3a:	4b3c      	ldr	r3, [pc, #240]	; (8000c2c <clr_data+0x1b8>)
 8000b3c:	001a      	movs	r2, r3
 8000b3e:	2111      	movs	r1, #17
 8000b40:	2003      	movs	r0, #3
 8000b42:	f7ff ff45 	bl	80009d0 <lcd_puts>
 8000b46:	4b39      	ldr	r3, [pc, #228]	; (8000c2c <clr_data+0x1b8>)
 8000b48:	001a      	movs	r2, r3
 8000b4a:	2112      	movs	r1, #18
 8000b4c:	2003      	movs	r0, #3
 8000b4e:	f7ff ff3f 	bl	80009d0 <lcd_puts>
 8000b52:	4b36      	ldr	r3, [pc, #216]	; (8000c2c <clr_data+0x1b8>)
 8000b54:	001a      	movs	r2, r3
 8000b56:	2113      	movs	r1, #19
 8000b58:	2003      	movs	r0, #3
 8000b5a:	f7ff ff39 	bl	80009d0 <lcd_puts>
 8000b5e:	e05d      	b.n	8000c1c <clr_data+0x1a8>
 8000b60:	4b32      	ldr	r3, [pc, #200]	; (8000c2c <clr_data+0x1b8>)
 8000b62:	001a      	movs	r2, r3
 8000b64:	210a      	movs	r1, #10
 8000b66:	2000      	movs	r0, #0
 8000b68:	f7ff ff32 	bl	80009d0 <lcd_puts>
 8000b6c:	4b2f      	ldr	r3, [pc, #188]	; (8000c2c <clr_data+0x1b8>)
 8000b6e:	001a      	movs	r2, r3
 8000b70:	210b      	movs	r1, #11
 8000b72:	2000      	movs	r0, #0
 8000b74:	f7ff ff2c 	bl	80009d0 <lcd_puts>
 8000b78:	4b2c      	ldr	r3, [pc, #176]	; (8000c2c <clr_data+0x1b8>)
 8000b7a:	001a      	movs	r2, r3
 8000b7c:	210c      	movs	r1, #12
 8000b7e:	2000      	movs	r0, #0
 8000b80:	f7ff ff26 	bl	80009d0 <lcd_puts>
 8000b84:	4b29      	ldr	r3, [pc, #164]	; (8000c2c <clr_data+0x1b8>)
 8000b86:	001a      	movs	r2, r3
 8000b88:	210d      	movs	r1, #13
 8000b8a:	2000      	movs	r0, #0
 8000b8c:	f7ff ff20 	bl	80009d0 <lcd_puts>
 8000b90:	4b26      	ldr	r3, [pc, #152]	; (8000c2c <clr_data+0x1b8>)
 8000b92:	001a      	movs	r2, r3
 8000b94:	210e      	movs	r1, #14
 8000b96:	2000      	movs	r0, #0
 8000b98:	f7ff ff1a 	bl	80009d0 <lcd_puts>
 8000b9c:	4b23      	ldr	r3, [pc, #140]	; (8000c2c <clr_data+0x1b8>)
 8000b9e:	001a      	movs	r2, r3
 8000ba0:	210f      	movs	r1, #15
 8000ba2:	2000      	movs	r0, #0
 8000ba4:	f7ff ff14 	bl	80009d0 <lcd_puts>
 8000ba8:	e038      	b.n	8000c1c <clr_data+0x1a8>
 8000baa:	4b20      	ldr	r3, [pc, #128]	; (8000c2c <clr_data+0x1b8>)
 8000bac:	001a      	movs	r2, r3
 8000bae:	210a      	movs	r1, #10
 8000bb0:	2001      	movs	r0, #1
 8000bb2:	f7ff ff0d 	bl	80009d0 <lcd_puts>
 8000bb6:	4b1d      	ldr	r3, [pc, #116]	; (8000c2c <clr_data+0x1b8>)
 8000bb8:	001a      	movs	r2, r3
 8000bba:	210a      	movs	r1, #10
 8000bbc:	2001      	movs	r0, #1
 8000bbe:	f7ff ff07 	bl	80009d0 <lcd_puts>
 8000bc2:	4b1a      	ldr	r3, [pc, #104]	; (8000c2c <clr_data+0x1b8>)
 8000bc4:	001a      	movs	r2, r3
 8000bc6:	210a      	movs	r1, #10
 8000bc8:	2001      	movs	r0, #1
 8000bca:	f7ff ff01 	bl	80009d0 <lcd_puts>
 8000bce:	e025      	b.n	8000c1c <clr_data+0x1a8>
 8000bd0:	4b16      	ldr	r3, [pc, #88]	; (8000c2c <clr_data+0x1b8>)
 8000bd2:	001a      	movs	r2, r3
 8000bd4:	210a      	movs	r1, #10
 8000bd6:	2002      	movs	r0, #2
 8000bd8:	f7ff fefa 	bl	80009d0 <lcd_puts>
 8000bdc:	4b13      	ldr	r3, [pc, #76]	; (8000c2c <clr_data+0x1b8>)
 8000bde:	001a      	movs	r2, r3
 8000be0:	210a      	movs	r1, #10
 8000be2:	2002      	movs	r0, #2
 8000be4:	f7ff fef4 	bl	80009d0 <lcd_puts>
 8000be8:	4b10      	ldr	r3, [pc, #64]	; (8000c2c <clr_data+0x1b8>)
 8000bea:	001a      	movs	r2, r3
 8000bec:	210a      	movs	r1, #10
 8000bee:	2002      	movs	r0, #2
 8000bf0:	f7ff feee 	bl	80009d0 <lcd_puts>
 8000bf4:	e012      	b.n	8000c1c <clr_data+0x1a8>
 8000bf6:	4b0d      	ldr	r3, [pc, #52]	; (8000c2c <clr_data+0x1b8>)
 8000bf8:	001a      	movs	r2, r3
 8000bfa:	210a      	movs	r1, #10
 8000bfc:	2003      	movs	r0, #3
 8000bfe:	f7ff fee7 	bl	80009d0 <lcd_puts>
 8000c02:	4b0a      	ldr	r3, [pc, #40]	; (8000c2c <clr_data+0x1b8>)
 8000c04:	001a      	movs	r2, r3
 8000c06:	210a      	movs	r1, #10
 8000c08:	2003      	movs	r0, #3
 8000c0a:	f7ff fee1 	bl	80009d0 <lcd_puts>
 8000c0e:	4b07      	ldr	r3, [pc, #28]	; (8000c2c <clr_data+0x1b8>)
 8000c10:	001a      	movs	r2, r3
 8000c12:	210a      	movs	r1, #10
 8000c14:	2003      	movs	r0, #3
 8000c16:	f7ff fedb 	bl	80009d0 <lcd_puts>
 8000c1a:	46c0      	nop			; (mov r8, r8)
 8000c1c:	46c0      	nop			; (mov r8, r8)
 8000c1e:	46bd      	mov	sp, r7
 8000c20:	b002      	add	sp, #8
 8000c22:	bd80      	pop	{r7, pc}
 8000c24:	08007444 	.word	0x08007444
 8000c28:	080072d4 	.word	0x080072d4
 8000c2c:	080072d8 	.word	0x080072d8

08000c30 <clr_select>:
 8000c30:	b580      	push	{r7, lr}
 8000c32:	af00      	add	r7, sp, #0
 8000c34:	4b13      	ldr	r3, [pc, #76]	; (8000c84 <clr_select+0x54>)
 8000c36:	001a      	movs	r2, r3
 8000c38:	2100      	movs	r1, #0
 8000c3a:	2001      	movs	r0, #1
 8000c3c:	f7ff fec8 	bl	80009d0 <lcd_puts>
 8000c40:	4b10      	ldr	r3, [pc, #64]	; (8000c84 <clr_select+0x54>)
 8000c42:	001a      	movs	r2, r3
 8000c44:	2100      	movs	r1, #0
 8000c46:	2002      	movs	r0, #2
 8000c48:	f7ff fec2 	bl	80009d0 <lcd_puts>
 8000c4c:	4b0d      	ldr	r3, [pc, #52]	; (8000c84 <clr_select+0x54>)
 8000c4e:	001a      	movs	r2, r3
 8000c50:	2100      	movs	r1, #0
 8000c52:	2003      	movs	r0, #3
 8000c54:	f7ff febc 	bl	80009d0 <lcd_puts>
 8000c58:	4b0a      	ldr	r3, [pc, #40]	; (8000c84 <clr_select+0x54>)
 8000c5a:	001a      	movs	r2, r3
 8000c5c:	210a      	movs	r1, #10
 8000c5e:	2001      	movs	r0, #1
 8000c60:	f7ff feb6 	bl	80009d0 <lcd_puts>
 8000c64:	4b07      	ldr	r3, [pc, #28]	; (8000c84 <clr_select+0x54>)
 8000c66:	001a      	movs	r2, r3
 8000c68:	210a      	movs	r1, #10
 8000c6a:	2002      	movs	r0, #2
 8000c6c:	f7ff feb0 	bl	80009d0 <lcd_puts>
 8000c70:	4b04      	ldr	r3, [pc, #16]	; (8000c84 <clr_select+0x54>)
 8000c72:	001a      	movs	r2, r3
 8000c74:	210a      	movs	r1, #10
 8000c76:	2003      	movs	r0, #3
 8000c78:	f7ff feaa 	bl	80009d0 <lcd_puts>
 8000c7c:	46c0      	nop			; (mov r8, r8)
 8000c7e:	46bd      	mov	sp, r7
 8000c80:	bd80      	pop	{r7, pc}
 8000c82:	46c0      	nop			; (mov r8, r8)
 8000c84:	080072d8 	.word	0x080072d8

08000c88 <lcd_clear>:
 8000c88:	b580      	push	{r7, lr}
 8000c8a:	af00      	add	r7, sp, #0
 8000c8c:	2101      	movs	r1, #1
 8000c8e:	2000      	movs	r0, #0
 8000c90:	f7ff fdbf 	bl	8000812 <lcd_write>
 8000c94:	46c0      	nop			; (mov r8, r8)
 8000c96:	46bd      	mov	sp, r7
 8000c98:	bd80      	pop	{r7, pc}
	...

08000c9c <clock_page>:
 8000c9c:	b580      	push	{r7, lr}
 8000c9e:	af00      	add	r7, sp, #0
 8000ca0:	f7ff fff2 	bl	8000c88 <lcd_clear>
 8000ca4:	4b0d      	ldr	r3, [pc, #52]	; (8000cdc <clock_page+0x40>)
 8000ca6:	001a      	movs	r2, r3
 8000ca8:	2101      	movs	r1, #1
 8000caa:	2000      	movs	r0, #0
 8000cac:	f7ff fe90 	bl	80009d0 <lcd_puts>
 8000cb0:	4b0b      	ldr	r3, [pc, #44]	; (8000ce0 <clock_page+0x44>)
 8000cb2:	001a      	movs	r2, r3
 8000cb4:	2103      	movs	r1, #3
 8000cb6:	2001      	movs	r0, #1
 8000cb8:	f7ff fe8a 	bl	80009d0 <lcd_puts>
 8000cbc:	4b09      	ldr	r3, [pc, #36]	; (8000ce4 <clock_page+0x48>)
 8000cbe:	001a      	movs	r2, r3
 8000cc0:	2103      	movs	r1, #3
 8000cc2:	2002      	movs	r0, #2
 8000cc4:	f7ff fe84 	bl	80009d0 <lcd_puts>
 8000cc8:	4b07      	ldr	r3, [pc, #28]	; (8000ce8 <clock_page+0x4c>)
 8000cca:	001a      	movs	r2, r3
 8000ccc:	2103      	movs	r1, #3
 8000cce:	2003      	movs	r0, #3
 8000cd0:	f7ff fe7e 	bl	80009d0 <lcd_puts>
 8000cd4:	46c0      	nop			; (mov r8, r8)
 8000cd6:	46bd      	mov	sp, r7
 8000cd8:	bd80      	pop	{r7, pc}
 8000cda:	46c0      	nop			; (mov r8, r8)
 8000cdc:	08007338 	.word	0x08007338
 8000ce0:	0800734c 	.word	0x0800734c
 8000ce4:	08007354 	.word	0x08007354
 8000ce8:	0800735c 	.word	0x0800735c

08000cec <Total_Time_Print>:
 8000cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cee:	b087      	sub	sp, #28
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	617b      	str	r3, [r7, #20]
 8000cf8:	697b      	ldr	r3, [r7, #20]
 8000cfa:	22e1      	movs	r2, #225	; 0xe1
 8000cfc:	0111      	lsls	r1, r2, #4
 8000cfe:	0018      	movs	r0, r3
 8000d00:	f7ff fa0c 	bl	800011c <__udivsi3>
 8000d04:	0003      	movs	r3, r0
 8000d06:	001a      	movs	r2, r3
 8000d08:	2413      	movs	r4, #19
 8000d0a:	193b      	adds	r3, r7, r4
 8000d0c:	701a      	strb	r2, [r3, #0]
 8000d0e:	697b      	ldr	r3, [r7, #20]
 8000d10:	22e1      	movs	r2, #225	; 0xe1
 8000d12:	0111      	lsls	r1, r2, #4
 8000d14:	0018      	movs	r0, r3
 8000d16:	f7ff fa87 	bl	8000228 <__aeabi_uidivmod>
 8000d1a:	000b      	movs	r3, r1
 8000d1c:	617b      	str	r3, [r7, #20]
 8000d1e:	697b      	ldr	r3, [r7, #20]
 8000d20:	213c      	movs	r1, #60	; 0x3c
 8000d22:	0018      	movs	r0, r3
 8000d24:	f7ff f9fa 	bl	800011c <__udivsi3>
 8000d28:	0003      	movs	r3, r0
 8000d2a:	001a      	movs	r2, r3
 8000d2c:	2512      	movs	r5, #18
 8000d2e:	197b      	adds	r3, r7, r5
 8000d30:	701a      	strb	r2, [r3, #0]
 8000d32:	697b      	ldr	r3, [r7, #20]
 8000d34:	213c      	movs	r1, #60	; 0x3c
 8000d36:	0018      	movs	r0, r3
 8000d38:	f7ff fa76 	bl	8000228 <__aeabi_uidivmod>
 8000d3c:	000b      	movs	r3, r1
 8000d3e:	617b      	str	r3, [r7, #20]
 8000d40:	2611      	movs	r6, #17
 8000d42:	19bb      	adds	r3, r7, r6
 8000d44:	697a      	ldr	r2, [r7, #20]
 8000d46:	701a      	strb	r2, [r3, #0]
 8000d48:	193b      	adds	r3, r7, r4
 8000d4a:	781a      	ldrb	r2, [r3, #0]
 8000d4c:	4914      	ldr	r1, [pc, #80]	; (8000da0 <Total_Time_Print+0xb4>)
 8000d4e:	240c      	movs	r4, #12
 8000d50:	193b      	adds	r3, r7, r4
 8000d52:	0018      	movs	r0, r3
 8000d54:	f005 fe0c 	bl	8006970 <siprintf>
 8000d58:	193b      	adds	r3, r7, r4
 8000d5a:	001a      	movs	r2, r3
 8000d5c:	2100      	movs	r1, #0
 8000d5e:	2001      	movs	r0, #1
 8000d60:	f7ff fe36 	bl	80009d0 <lcd_puts>
 8000d64:	197b      	adds	r3, r7, r5
 8000d66:	781a      	ldrb	r2, [r3, #0]
 8000d68:	490d      	ldr	r1, [pc, #52]	; (8000da0 <Total_Time_Print+0xb4>)
 8000d6a:	193b      	adds	r3, r7, r4
 8000d6c:	0018      	movs	r0, r3
 8000d6e:	f005 fdff 	bl	8006970 <siprintf>
 8000d72:	193b      	adds	r3, r7, r4
 8000d74:	001a      	movs	r2, r3
 8000d76:	2100      	movs	r1, #0
 8000d78:	2002      	movs	r0, #2
 8000d7a:	f7ff fe29 	bl	80009d0 <lcd_puts>
 8000d7e:	19bb      	adds	r3, r7, r6
 8000d80:	781a      	ldrb	r2, [r3, #0]
 8000d82:	4907      	ldr	r1, [pc, #28]	; (8000da0 <Total_Time_Print+0xb4>)
 8000d84:	193b      	adds	r3, r7, r4
 8000d86:	0018      	movs	r0, r3
 8000d88:	f005 fdf2 	bl	8006970 <siprintf>
 8000d8c:	193b      	adds	r3, r7, r4
 8000d8e:	001a      	movs	r2, r3
 8000d90:	2100      	movs	r1, #0
 8000d92:	2003      	movs	r0, #3
 8000d94:	f7ff fe1c 	bl	80009d0 <lcd_puts>
 8000d98:	46c0      	nop			; (mov r8, r8)
 8000d9a:	46bd      	mov	sp, r7
 8000d9c:	b007      	add	sp, #28
 8000d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000da0:	080072fc 	.word	0x080072fc

08000da4 <home_page>:
 8000da4:	b580      	push	{r7, lr}
 8000da6:	af00      	add	r7, sp, #0
 8000da8:	f7ff ff6e 	bl	8000c88 <lcd_clear>
 8000dac:	4b0a      	ldr	r3, [pc, #40]	; (8000dd8 <home_page+0x34>)
 8000dae:	001a      	movs	r2, r3
 8000db0:	2103      	movs	r1, #3
 8000db2:	2000      	movs	r0, #0
 8000db4:	f7ff fe0c 	bl	80009d0 <lcd_puts>
 8000db8:	4b08      	ldr	r3, [pc, #32]	; (8000ddc <home_page+0x38>)
 8000dba:	001a      	movs	r2, r3
 8000dbc:	2103      	movs	r1, #3
 8000dbe:	2002      	movs	r0, #2
 8000dc0:	f7ff fe06 	bl	80009d0 <lcd_puts>
 8000dc4:	4b06      	ldr	r3, [pc, #24]	; (8000de0 <home_page+0x3c>)
 8000dc6:	001a      	movs	r2, r3
 8000dc8:	2105      	movs	r1, #5
 8000dca:	2003      	movs	r0, #3
 8000dcc:	f7ff fe00 	bl	80009d0 <lcd_puts>
 8000dd0:	46c0      	nop			; (mov r8, r8)
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	bd80      	pop	{r7, pc}
 8000dd6:	46c0      	nop			; (mov r8, r8)
 8000dd8:	08007364 	.word	0x08007364
 8000ddc:	08007374 	.word	0x08007374
 8000de0:	08007384 	.word	0x08007384

08000de4 <HAL_UART_RxCpltCallback>:
//   HAL_UART_Receive_DMA(&huart1, trans, 2);
//   int_flag = 1;
// }

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000de4:	b580      	push	{r7, lr}
 8000de6:	b082      	sub	sp, #8
 8000de8:	af00      	add	r7, sp, #0
 8000dea:	6078      	str	r0, [r7, #4]
	//	printf(Rx_data);
	HAL_UART_Receive_IT(&huart1, trans, 2);
 8000dec:	4906      	ldr	r1, [pc, #24]	; (8000e08 <HAL_UART_RxCpltCallback+0x24>)
 8000dee:	4b07      	ldr	r3, [pc, #28]	; (8000e0c <HAL_UART_RxCpltCallback+0x28>)
 8000df0:	2202      	movs	r2, #2
 8000df2:	0018      	movs	r0, r3
 8000df4:	f004 fc66 	bl	80056c4 <HAL_UART_Receive_IT>

	//  HAL_UART_Transmit(&huart1,trans,10,HAL_MAX_DELAY);
	//  memset(Rx_data,0,10);

	int_flag = 1;
 8000df8:	4b05      	ldr	r3, [pc, #20]	; (8000e10 <HAL_UART_RxCpltCallback+0x2c>)
 8000dfa:	2201      	movs	r2, #1
 8000dfc:	701a      	strb	r2, [r3, #0]
}
 8000dfe:	46c0      	nop			; (mov r8, r8)
 8000e00:	46bd      	mov	sp, r7
 8000e02:	b002      	add	sp, #8
 8000e04:	bd80      	pop	{r7, pc}
 8000e06:	46c0      	nop			; (mov r8, r8)
 8000e08:	20000224 	.word	0x20000224
 8000e0c:	20000198 	.word	0x20000198
 8000e10:	20000220 	.word	0x20000220

08000e14 <HAL_TIM_PeriodElapsedCallback>:
// 		tt_cnt++;
// 	}
// }

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000e14:	b580      	push	{r7, lr}
 8000e16:	b082      	sub	sp, #8
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	6078      	str	r0, [r7, #4]

	if (htim == &htim6)
 8000e1c:	687a      	ldr	r2, [r7, #4]
 8000e1e:	4b10      	ldr	r3, [pc, #64]	; (8000e60 <HAL_TIM_PeriodElapsedCallback+0x4c>)
 8000e20:	429a      	cmp	r2, r3
 8000e22:	d104      	bne.n	8000e2e <HAL_TIM_PeriodElapsedCallback+0x1a>
	{
		//    HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
		tt_cnt++;
 8000e24:	4b0f      	ldr	r3, [pc, #60]	; (8000e64 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	1c5a      	adds	r2, r3, #1
 8000e2a:	4b0e      	ldr	r3, [pc, #56]	; (8000e64 <HAL_TIM_PeriodElapsedCallback+0x50>)
 8000e2c:	601a      	str	r2, [r3, #0]

	/* NOTE : This function should not be modified, when the callback is needed,
			  the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
	 */

	if (htim == &htim14)
 8000e2e:	687a      	ldr	r2, [r7, #4]
 8000e30:	4b0d      	ldr	r3, [pc, #52]	; (8000e68 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8000e32:	429a      	cmp	r2, r3
 8000e34:	d10f      	bne.n	8000e56 <HAL_TIM_PeriodElapsedCallback+0x42>
	{
		if (HAL_GPIO_ReadPin(S_PRV_GPIO_Port, S_PRV_Pin) == GPIO_PIN_RESET)
 8000e36:	2380      	movs	r3, #128	; 0x80
 8000e38:	011b      	lsls	r3, r3, #4
 8000e3a:	4a0c      	ldr	r2, [pc, #48]	; (8000e6c <HAL_TIM_PeriodElapsedCallback+0x58>)
 8000e3c:	0019      	movs	r1, r3
 8000e3e:	0010      	movs	r0, r2
 8000e40:	f002 fcba 	bl	80037b8 <HAL_GPIO_ReadPin>
 8000e44:	1e03      	subs	r3, r0, #0
 8000e46:	d106      	bne.n	8000e56 <HAL_TIM_PeriodElapsedCallback+0x42>
		{

			but_state = true;
 8000e48:	4b09      	ldr	r3, [pc, #36]	; (8000e70 <HAL_TIM_PeriodElapsedCallback+0x5c>)
 8000e4a:	2201      	movs	r2, #1
 8000e4c:	701a      	strb	r2, [r3, #0]
			HAL_TIM_Base_Stop_IT(&htim14);
 8000e4e:	4b06      	ldr	r3, [pc, #24]	; (8000e68 <HAL_TIM_PeriodElapsedCallback+0x54>)
 8000e50:	0018      	movs	r0, r3
 8000e52:	f004 f959 	bl	8005108 <HAL_TIM_Base_Stop_IT>
		}
	}
}
 8000e56:	46c0      	nop			; (mov r8, r8)
 8000e58:	46bd      	mov	sp, r7
 8000e5a:	b002      	add	sp, #8
 8000e5c:	bd80      	pop	{r7, pc}
 8000e5e:	46c0      	nop			; (mov r8, r8)
 8000e60:	20000108 	.word	0x20000108
 8000e64:	200000a4 	.word	0x200000a4
 8000e68:	20000150 	.word	0x20000150
 8000e6c:	48000400 	.word	0x48000400
 8000e70:	20000226 	.word	0x20000226

08000e74 <update_key_press>:
	lcd_puts(3, 2, buffer); // x = 2, y = 3
}

uint8_t chk_cmd = 0;
uint8_t update_key_press()
{
 8000e74:	b580      	push	{r7, lr}
 8000e76:	af00      	add	r7, sp, #0
	if (key_pressed.prv)
 8000e78:	4b4c      	ldr	r3, [pc, #304]	; (8000fac <update_key_press+0x138>)
 8000e7a:	781b      	ldrb	r3, [r3, #0]
 8000e7c:	07db      	lsls	r3, r3, #31
 8000e7e:	0fdb      	lsrs	r3, r3, #31
 8000e80:	b2db      	uxtb	r3, r3
 8000e82:	2b00      	cmp	r3, #0
 8000e84:	d00e      	beq.n	8000ea4 <update_key_press+0x30>
	{
		current_pos.key_number = _prv;
 8000e86:	4b4a      	ldr	r3, [pc, #296]	; (8000fb0 <update_key_press+0x13c>)
 8000e88:	785a      	ldrb	r2, [r3, #1]
 8000e8a:	2107      	movs	r1, #7
 8000e8c:	438a      	bics	r2, r1
 8000e8e:	705a      	strb	r2, [r3, #1]
		key_pressed.prv = 0;
 8000e90:	4a46      	ldr	r2, [pc, #280]	; (8000fac <update_key_press+0x138>)
 8000e92:	7813      	ldrb	r3, [r2, #0]
 8000e94:	2101      	movs	r1, #1
 8000e96:	438b      	bics	r3, r1
 8000e98:	7013      	strb	r3, [r2, #0]
		chk_cmd = 1;
 8000e9a:	4b46      	ldr	r3, [pc, #280]	; (8000fb4 <update_key_press+0x140>)
 8000e9c:	2201      	movs	r2, #1
 8000e9e:	701a      	strb	r2, [r3, #0]
		return _prv;
 8000ea0:	2300      	movs	r3, #0
 8000ea2:	e080      	b.n	8000fa6 <update_key_press+0x132>
	}
	else if (key_pressed.nxt)
 8000ea4:	4b41      	ldr	r3, [pc, #260]	; (8000fac <update_key_press+0x138>)
 8000ea6:	781b      	ldrb	r3, [r3, #0]
 8000ea8:	079b      	lsls	r3, r3, #30
 8000eaa:	0fdb      	lsrs	r3, r3, #31
 8000eac:	b2db      	uxtb	r3, r3
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	d011      	beq.n	8000ed6 <update_key_press+0x62>
	{
		key_pressed.nxt = 0;
 8000eb2:	4a3e      	ldr	r2, [pc, #248]	; (8000fac <update_key_press+0x138>)
 8000eb4:	7813      	ldrb	r3, [r2, #0]
 8000eb6:	2102      	movs	r1, #2
 8000eb8:	438b      	bics	r3, r1
 8000eba:	7013      	strb	r3, [r2, #0]
		chk_cmd = 1;
 8000ebc:	4b3d      	ldr	r3, [pc, #244]	; (8000fb4 <update_key_press+0x140>)
 8000ebe:	2201      	movs	r2, #1
 8000ec0:	701a      	strb	r2, [r3, #0]
		current_pos.key_number = _nxt;
 8000ec2:	4b3b      	ldr	r3, [pc, #236]	; (8000fb0 <update_key_press+0x13c>)
 8000ec4:	785a      	ldrb	r2, [r3, #1]
 8000ec6:	2107      	movs	r1, #7
 8000ec8:	438a      	bics	r2, r1
 8000eca:	1c11      	adds	r1, r2, #0
 8000ecc:	2201      	movs	r2, #1
 8000ece:	430a      	orrs	r2, r1
 8000ed0:	705a      	strb	r2, [r3, #1]

		return _nxt;
 8000ed2:	2301      	movs	r3, #1
 8000ed4:	e067      	b.n	8000fa6 <update_key_press+0x132>
	}
	else if (key_pressed.depth)
 8000ed6:	4b35      	ldr	r3, [pc, #212]	; (8000fac <update_key_press+0x138>)
 8000ed8:	781b      	ldrb	r3, [r3, #0]
 8000eda:	075b      	lsls	r3, r3, #29
 8000edc:	0fdb      	lsrs	r3, r3, #31
 8000ede:	b2db      	uxtb	r3, r3
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d027      	beq.n	8000f34 <update_key_press+0xc0>
		// 		else
		// 			lcd_puts(3, 17, (int8_t *)"OFF");

		// 		return _depth;

		key_pressed.depth = 0;
 8000ee4:	4a31      	ldr	r2, [pc, #196]	; (8000fac <update_key_press+0x138>)
 8000ee6:	7813      	ldrb	r3, [r2, #0]
 8000ee8:	2104      	movs	r1, #4
 8000eea:	438b      	bics	r3, r1
 8000eec:	7013      	strb	r3, [r2, #0]
		current_pos.key_number = _depth;
 8000eee:	4b30      	ldr	r3, [pc, #192]	; (8000fb0 <update_key_press+0x13c>)
 8000ef0:	785a      	ldrb	r2, [r3, #1]
 8000ef2:	2107      	movs	r1, #7
 8000ef4:	438a      	bics	r2, r1
 8000ef6:	1c11      	adds	r1, r2, #0
 8000ef8:	2202      	movs	r2, #2
 8000efa:	430a      	orrs	r2, r1
 8000efc:	705a      	strb	r2, [r3, #1]
		// data_reg.endo = !data_reg.endo;
		clr_data(endo);
 8000efe:	2005      	movs	r0, #5
 8000f00:	f7ff fdb8 	bl	8000a74 <clr_data>
		clr_select();
 8000f04:	f7ff fe94 	bl	8000c30 <clr_select>
		//		lcd_puts(3, 10, (int8_t *)">");

		if (data_reg.endo)
 8000f08:	4b2b      	ldr	r3, [pc, #172]	; (8000fb8 <update_key_press+0x144>)
 8000f0a:	781b      	ldrb	r3, [r3, #0]
 8000f0c:	2240      	movs	r2, #64	; 0x40
 8000f0e:	4013      	ands	r3, r2
 8000f10:	b2db      	uxtb	r3, r3
 8000f12:	2b00      	cmp	r3, #0
 8000f14:	d006      	beq.n	8000f24 <update_key_press+0xb0>
			lcd_puts(2, 17, (int8_t *)"ON");
 8000f16:	4b29      	ldr	r3, [pc, #164]	; (8000fbc <update_key_press+0x148>)
 8000f18:	001a      	movs	r2, r3
 8000f1a:	2111      	movs	r1, #17
 8000f1c:	2002      	movs	r0, #2
 8000f1e:	f7ff fd57 	bl	80009d0 <lcd_puts>
 8000f22:	e005      	b.n	8000f30 <update_key_press+0xbc>
		else
			lcd_puts(2, 17, (int8_t *)"OFF");
 8000f24:	4b26      	ldr	r3, [pc, #152]	; (8000fc0 <update_key_press+0x14c>)
 8000f26:	001a      	movs	r2, r3
 8000f28:	2111      	movs	r1, #17
 8000f2a:	2002      	movs	r0, #2
 8000f2c:	f7ff fd50 	bl	80009d0 <lcd_puts>

		return _depth;
 8000f30:	2302      	movs	r3, #2
 8000f32:	e038      	b.n	8000fa6 <update_key_press+0x132>
	}
	else if (key_pressed.pos)
 8000f34:	4b1d      	ldr	r3, [pc, #116]	; (8000fac <update_key_press+0x138>)
 8000f36:	781b      	ldrb	r3, [r3, #0]
 8000f38:	071b      	lsls	r3, r3, #28
 8000f3a:	0fdb      	lsrs	r3, r3, #31
 8000f3c:	b2db      	uxtb	r3, r3
 8000f3e:	2b00      	cmp	r3, #0
 8000f40:	d014      	beq.n	8000f6c <update_key_press+0xf8>
	{
		key_pressed.pos = 0;
 8000f42:	4a1a      	ldr	r2, [pc, #104]	; (8000fac <update_key_press+0x138>)
 8000f44:	7813      	ldrb	r3, [r2, #0]
 8000f46:	2108      	movs	r1, #8
 8000f48:	438b      	bics	r3, r1
 8000f4a:	7013      	strb	r3, [r2, #0]
		current_pos.key_number = _pos;
 8000f4c:	4b18      	ldr	r3, [pc, #96]	; (8000fb0 <update_key_press+0x13c>)
 8000f4e:	785a      	ldrb	r2, [r3, #1]
 8000f50:	2107      	movs	r1, #7
 8000f52:	438a      	bics	r2, r1
 8000f54:	1c11      	adds	r1, r2, #0
 8000f56:	2204      	movs	r2, #4
 8000f58:	430a      	orrs	r2, r1
 8000f5a:	705a      	strb	r2, [r3, #1]
		last_ps = _pos;
 8000f5c:	4b19      	ldr	r3, [pc, #100]	; (8000fc4 <update_key_press+0x150>)
 8000f5e:	2204      	movs	r2, #4
 8000f60:	701a      	strb	r2, [r3, #0]
		chk_cmd = 0;
 8000f62:	4b14      	ldr	r3, [pc, #80]	; (8000fb4 <update_key_press+0x140>)
 8000f64:	2200      	movs	r2, #0
 8000f66:	701a      	strb	r2, [r3, #0]
		return _pos;
 8000f68:	2304      	movs	r3, #4
 8000f6a:	e01c      	b.n	8000fa6 <update_key_press+0x132>
	}
	else if (key_pressed.neg)
 8000f6c:	4b0f      	ldr	r3, [pc, #60]	; (8000fac <update_key_press+0x138>)
 8000f6e:	781b      	ldrb	r3, [r3, #0]
 8000f70:	06db      	lsls	r3, r3, #27
 8000f72:	0fdb      	lsrs	r3, r3, #31
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	2b00      	cmp	r3, #0
 8000f78:	d014      	beq.n	8000fa4 <update_key_press+0x130>
	{
		key_pressed.neg = 0;
 8000f7a:	4a0c      	ldr	r2, [pc, #48]	; (8000fac <update_key_press+0x138>)
 8000f7c:	7813      	ldrb	r3, [r2, #0]
 8000f7e:	2110      	movs	r1, #16
 8000f80:	438b      	bics	r3, r1
 8000f82:	7013      	strb	r3, [r2, #0]
		current_pos.key_number = _neg;
 8000f84:	4b0a      	ldr	r3, [pc, #40]	; (8000fb0 <update_key_press+0x13c>)
 8000f86:	785a      	ldrb	r2, [r3, #1]
 8000f88:	2107      	movs	r1, #7
 8000f8a:	438a      	bics	r2, r1
 8000f8c:	1c11      	adds	r1, r2, #0
 8000f8e:	2203      	movs	r2, #3
 8000f90:	430a      	orrs	r2, r1
 8000f92:	705a      	strb	r2, [r3, #1]
		last_ps = _neg;
 8000f94:	4b0b      	ldr	r3, [pc, #44]	; (8000fc4 <update_key_press+0x150>)
 8000f96:	2203      	movs	r2, #3
 8000f98:	701a      	strb	r2, [r3, #0]
		chk_cmd = 0;
 8000f9a:	4b06      	ldr	r3, [pc, #24]	; (8000fb4 <update_key_press+0x140>)
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	701a      	strb	r2, [r3, #0]
		return _neg;
 8000fa0:	2303      	movs	r3, #3
 8000fa2:	e000      	b.n	8000fa6 <update_key_press+0x132>
	}

	return 0;
 8000fa4:	2300      	movs	r3, #0
}
 8000fa6:	0018      	movs	r0, r3
 8000fa8:	46bd      	mov	sp, r7
 8000faa:	bd80      	pop	{r7, pc}
 8000fac:	200000ac 	.word	0x200000ac
 8000fb0:	20000004 	.word	0x20000004
 8000fb4:	20000227 	.word	0x20000227
 8000fb8:	20000008 	.word	0x20000008
 8000fbc:	08007398 	.word	0x08007398
 8000fc0:	0800739c 	.word	0x0800739c
 8000fc4:	200000a8 	.word	0x200000a8

08000fc8 <set_data_positive>:
//	current_pos.position_cursor =  sensor;
//	data_reg.sensor = !data_reg.sensor;
//
// }
void set_data_positive()
{
 8000fc8:	b580      	push	{r7, lr}
 8000fca:	af00      	add	r7, sp, #0
	if (pg2_fc == 0)
 8000fcc:	4b56      	ldr	r3, [pc, #344]	; (8001128 <set_data_positive+0x160>)
 8000fce:	781b      	ldrb	r3, [r3, #0]
 8000fd0:	2b00      	cmp	r3, #0
 8000fd2:	d16a      	bne.n	80010aa <set_data_positive+0xe2>
	{
		switch (current_pos.position_cursor)
 8000fd4:	4b55      	ldr	r3, [pc, #340]	; (800112c <set_data_positive+0x164>)
 8000fd6:	781b      	ldrb	r3, [r3, #0]
 8000fd8:	b25b      	sxtb	r3, r3
 8000fda:	2b07      	cmp	r3, #7
 8000fdc:	d900      	bls.n	8000fe0 <set_data_positive+0x18>
 8000fde:	e0a0      	b.n	8001122 <set_data_positive+0x15a>
 8000fe0:	009a      	lsls	r2, r3, #2
 8000fe2:	4b53      	ldr	r3, [pc, #332]	; (8001130 <set_data_positive+0x168>)
 8000fe4:	18d3      	adds	r3, r2, r3
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	469f      	mov	pc, r3
		{
		case intensity:
			if (!data_reg.depth)
 8000fea:	4b52      	ldr	r3, [pc, #328]	; (8001134 <set_data_positive+0x16c>)
 8000fec:	781b      	ldrb	r3, [r3, #0]
 8000fee:	227f      	movs	r2, #127	; 0x7f
 8000ff0:	4393      	bics	r3, r2
 8000ff2:	b2db      	uxtb	r3, r3
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d125      	bne.n	8001044 <set_data_positive+0x7c>
			{
				data_reg.intensity++;
 8000ff8:	4b4e      	ldr	r3, [pc, #312]	; (8001134 <set_data_positive+0x16c>)
 8000ffa:	781b      	ldrb	r3, [r3, #0]
 8000ffc:	071b      	lsls	r3, r3, #28
 8000ffe:	0f1b      	lsrs	r3, r3, #28
 8001000:	b2db      	uxtb	r3, r3
 8001002:	3301      	adds	r3, #1
 8001004:	1c1a      	adds	r2, r3, #0
 8001006:	230f      	movs	r3, #15
 8001008:	4013      	ands	r3, r2
 800100a:	b2da      	uxtb	r2, r3
 800100c:	4b49      	ldr	r3, [pc, #292]	; (8001134 <set_data_positive+0x16c>)
 800100e:	210f      	movs	r1, #15
 8001010:	400a      	ands	r2, r1
 8001012:	0010      	movs	r0, r2
 8001014:	781a      	ldrb	r2, [r3, #0]
 8001016:	210f      	movs	r1, #15
 8001018:	438a      	bics	r2, r1
 800101a:	1c11      	adds	r1, r2, #0
 800101c:	1c02      	adds	r2, r0, #0
 800101e:	430a      	orrs	r2, r1
 8001020:	701a      	strb	r2, [r3, #0]
				if (data_reg.intensity >= 10)
 8001022:	4b44      	ldr	r3, [pc, #272]	; (8001134 <set_data_positive+0x16c>)
 8001024:	781b      	ldrb	r3, [r3, #0]
 8001026:	071b      	lsls	r3, r3, #28
 8001028:	0f1b      	lsrs	r3, r3, #28
 800102a:	b2db      	uxtb	r3, r3
 800102c:	2b09      	cmp	r3, #9
 800102e:	d800      	bhi.n	8001032 <set_data_positive+0x6a>
 8001030:	e074      	b.n	800111c <set_data_positive+0x154>
				{
					data_reg.intensity = 10;
 8001032:	4b40      	ldr	r3, [pc, #256]	; (8001134 <set_data_positive+0x16c>)
 8001034:	781a      	ldrb	r2, [r3, #0]
 8001036:	210f      	movs	r1, #15
 8001038:	438a      	bics	r2, r1
 800103a:	1c11      	adds	r1, r2, #0
 800103c:	220a      	movs	r2, #10
 800103e:	430a      	orrs	r2, r1
 8001040:	701a      	strb	r2, [r3, #0]
			{
				//				data_reg.intensity = 10;
				depth_press = 1;
			}

			break;
 8001042:	e06b      	b.n	800111c <set_data_positive+0x154>
				depth_press = 1;
 8001044:	4b3c      	ldr	r3, [pc, #240]	; (8001138 <set_data_positive+0x170>)
 8001046:	2201      	movs	r2, #1
 8001048:	701a      	strb	r2, [r3, #0]
			break;
 800104a:	e067      	b.n	800111c <set_data_positive+0x154>
		case color:
			// if (!data_reg.depth)
			// {
			data_reg.color++;
 800104c:	4b39      	ldr	r3, [pc, #228]	; (8001134 <set_data_positive+0x16c>)
 800104e:	785b      	ldrb	r3, [r3, #1]
 8001050:	b25b      	sxtb	r3, r3
 8001052:	b2db      	uxtb	r3, r3
 8001054:	3301      	adds	r3, #1
 8001056:	b2db      	uxtb	r3, r3
 8001058:	b25a      	sxtb	r2, r3
 800105a:	4b36      	ldr	r3, [pc, #216]	; (8001134 <set_data_positive+0x16c>)
 800105c:	705a      	strb	r2, [r3, #1]
			if (data_reg.color > 1)
 800105e:	4b35      	ldr	r3, [pc, #212]	; (8001134 <set_data_positive+0x16c>)
 8001060:	785b      	ldrb	r3, [r3, #1]
 8001062:	b25b      	sxtb	r3, r3
 8001064:	2b01      	cmp	r3, #1
 8001066:	dd5b      	ble.n	8001120 <set_data_positive+0x158>
			{
				data_reg.color = 1;
 8001068:	4b32      	ldr	r3, [pc, #200]	; (8001134 <set_data_positive+0x16c>)
 800106a:	2201      	movs	r2, #1
 800106c:	705a      	strb	r2, [r3, #1]
			}
			// }

			break;
 800106e:	e057      	b.n	8001120 <set_data_positive+0x158>
		case sensor:
			data_reg.sensor = on;
 8001070:	4b30      	ldr	r3, [pc, #192]	; (8001134 <set_data_positive+0x16c>)
 8001072:	781a      	ldrb	r2, [r3, #0]
 8001074:	2110      	movs	r1, #16
 8001076:	430a      	orrs	r2, r1
 8001078:	701a      	strb	r2, [r3, #0]
			break;
 800107a:	e052      	b.n	8001122 <set_data_positive+0x15a>
		case lamp:
			data_reg.lamp = on;
 800107c:	4b2d      	ldr	r3, [pc, #180]	; (8001134 <set_data_positive+0x16c>)
 800107e:	781a      	ldrb	r2, [r3, #0]
 8001080:	2120      	movs	r1, #32
 8001082:	430a      	orrs	r2, r1
 8001084:	701a      	strb	r2, [r3, #0]
			break;
 8001086:	e04c      	b.n	8001122 <set_data_positive+0x15a>
		case endo:
			data_reg.endo = on;
 8001088:	4b2a      	ldr	r3, [pc, #168]	; (8001134 <set_data_positive+0x16c>)
 800108a:	781a      	ldrb	r2, [r3, #0]
 800108c:	2140      	movs	r1, #64	; 0x40
 800108e:	430a      	orrs	r2, r1
 8001090:	701a      	strb	r2, [r3, #0]
			break;
 8001092:	e046      	b.n	8001122 <set_data_positive+0x15a>
		case depth:
			data_reg.depth = on;
 8001094:	4b27      	ldr	r3, [pc, #156]	; (8001134 <set_data_positive+0x16c>)
 8001096:	781a      	ldrb	r2, [r3, #0]
 8001098:	2180      	movs	r1, #128	; 0x80
 800109a:	4249      	negs	r1, r1
 800109c:	430a      	orrs	r2, r1
 800109e:	701a      	strb	r2, [r3, #0]
			//			last_inten = data_reg.intensity;
			break;
 80010a0:	e03f      	b.n	8001122 <set_data_positive+0x15a>
		case 7:
			pg2_fc = on;
 80010a2:	4b21      	ldr	r3, [pc, #132]	; (8001128 <set_data_positive+0x160>)
 80010a4:	2201      	movs	r2, #1
 80010a6:	701a      	strb	r2, [r3, #0]
			break;
 80010a8:	e03b      	b.n	8001122 <set_data_positive+0x15a>
		}
	}

	else
	{
		switch (current_pos.position_cursor)
 80010aa:	4b20      	ldr	r3, [pc, #128]	; (800112c <set_data_positive+0x164>)
 80010ac:	781b      	ldrb	r3, [r3, #0]
 80010ae:	b25b      	sxtb	r3, r3
 80010b0:	2b07      	cmp	r3, #7
 80010b2:	d008      	beq.n	80010c6 <set_data_positive+0xfe>
 80010b4:	dc35      	bgt.n	8001122 <set_data_positive+0x15a>
 80010b6:	2b03      	cmp	r3, #3
 80010b8:	d026      	beq.n	8001108 <set_data_positive+0x140>
 80010ba:	dc32      	bgt.n	8001122 <set_data_positive+0x15a>
 80010bc:	2b01      	cmp	r3, #1
 80010be:	d00f      	beq.n	80010e0 <set_data_positive+0x118>
 80010c0:	2b02      	cmp	r3, #2
 80010c2:	d017      	beq.n	80010f4 <set_data_positive+0x12c>
			pg3_md = off;
			pg3_wd = on;
			break;
		}
	}
}
 80010c4:	e02d      	b.n	8001122 <set_data_positive+0x15a>
			pg2_fc = on;
 80010c6:	4b18      	ldr	r3, [pc, #96]	; (8001128 <set_data_positive+0x160>)
 80010c8:	2201      	movs	r2, #1
 80010ca:	701a      	strb	r2, [r3, #0]
			pg3_sm = off;
 80010cc:	4b1b      	ldr	r3, [pc, #108]	; (800113c <set_data_positive+0x174>)
 80010ce:	2200      	movs	r2, #0
 80010d0:	701a      	strb	r2, [r3, #0]
			pg3_md = off;
 80010d2:	4b1b      	ldr	r3, [pc, #108]	; (8001140 <set_data_positive+0x178>)
 80010d4:	2200      	movs	r2, #0
 80010d6:	701a      	strb	r2, [r3, #0]
			pg3_wd = off;
 80010d8:	4b1a      	ldr	r3, [pc, #104]	; (8001144 <set_data_positive+0x17c>)
 80010da:	2200      	movs	r2, #0
 80010dc:	701a      	strb	r2, [r3, #0]
			break;
 80010de:	e020      	b.n	8001122 <set_data_positive+0x15a>
			pg3_sm = on;
 80010e0:	4b16      	ldr	r3, [pc, #88]	; (800113c <set_data_positive+0x174>)
 80010e2:	2201      	movs	r2, #1
 80010e4:	701a      	strb	r2, [r3, #0]
			pg3_md = off;
 80010e6:	4b16      	ldr	r3, [pc, #88]	; (8001140 <set_data_positive+0x178>)
 80010e8:	2200      	movs	r2, #0
 80010ea:	701a      	strb	r2, [r3, #0]
			pg3_wd = off;
 80010ec:	4b15      	ldr	r3, [pc, #84]	; (8001144 <set_data_positive+0x17c>)
 80010ee:	2200      	movs	r2, #0
 80010f0:	701a      	strb	r2, [r3, #0]
			break;
 80010f2:	e016      	b.n	8001122 <set_data_positive+0x15a>
			pg3_sm = off;
 80010f4:	4b11      	ldr	r3, [pc, #68]	; (800113c <set_data_positive+0x174>)
 80010f6:	2200      	movs	r2, #0
 80010f8:	701a      	strb	r2, [r3, #0]
			pg3_md = on;
 80010fa:	4b11      	ldr	r3, [pc, #68]	; (8001140 <set_data_positive+0x178>)
 80010fc:	2201      	movs	r2, #1
 80010fe:	701a      	strb	r2, [r3, #0]
			pg3_wd = off;
 8001100:	4b10      	ldr	r3, [pc, #64]	; (8001144 <set_data_positive+0x17c>)
 8001102:	2200      	movs	r2, #0
 8001104:	701a      	strb	r2, [r3, #0]
			break;
 8001106:	e00c      	b.n	8001122 <set_data_positive+0x15a>
			pg3_sm = off;
 8001108:	4b0c      	ldr	r3, [pc, #48]	; (800113c <set_data_positive+0x174>)
 800110a:	2200      	movs	r2, #0
 800110c:	701a      	strb	r2, [r3, #0]
			pg3_md = off;
 800110e:	4b0c      	ldr	r3, [pc, #48]	; (8001140 <set_data_positive+0x178>)
 8001110:	2200      	movs	r2, #0
 8001112:	701a      	strb	r2, [r3, #0]
			pg3_wd = on;
 8001114:	4b0b      	ldr	r3, [pc, #44]	; (8001144 <set_data_positive+0x17c>)
 8001116:	2201      	movs	r2, #1
 8001118:	701a      	strb	r2, [r3, #0]
			break;
 800111a:	e002      	b.n	8001122 <set_data_positive+0x15a>
			break;
 800111c:	46c0      	nop			; (mov r8, r8)
 800111e:	e000      	b.n	8001122 <set_data_positive+0x15a>
			break;
 8001120:	46c0      	nop			; (mov r8, r8)
}
 8001122:	46c0      	nop			; (mov r8, r8)
 8001124:	46bd      	mov	sp, r7
 8001126:	bd80      	pop	{r7, pc}
 8001128:	2000009f 	.word	0x2000009f
 800112c:	20000004 	.word	0x20000004
 8001130:	08007470 	.word	0x08007470
 8001134:	20000008 	.word	0x20000008
 8001138:	2000009c 	.word	0x2000009c
 800113c:	200000a0 	.word	0x200000a0
 8001140:	200000a1 	.word	0x200000a1
 8001144:	200000a2 	.word	0x200000a2

08001148 <set_data_negative>:

void set_data_negative()
{
 8001148:	b580      	push	{r7, lr}
 800114a:	af00      	add	r7, sp, #0
	if (pg2_fc == 0)
 800114c:	4b51      	ldr	r3, [pc, #324]	; (8001294 <set_data_negative+0x14c>)
 800114e:	781b      	ldrb	r3, [r3, #0]
 8001150:	2b00      	cmp	r3, #0
 8001152:	d000      	beq.n	8001156 <set_data_negative+0xe>
 8001154:	e079      	b.n	800124a <set_data_negative+0x102>
	{

		switch (current_pos.position_cursor)
 8001156:	4b50      	ldr	r3, [pc, #320]	; (8001298 <set_data_negative+0x150>)
 8001158:	781b      	ldrb	r3, [r3, #0]
 800115a:	b25b      	sxtb	r3, r3
 800115c:	2b07      	cmp	r3, #7
 800115e:	d900      	bls.n	8001162 <set_data_negative+0x1a>
 8001160:	e094      	b.n	800128c <set_data_negative+0x144>
 8001162:	009a      	lsls	r2, r3, #2
 8001164:	4b4d      	ldr	r3, [pc, #308]	; (800129c <set_data_negative+0x154>)
 8001166:	18d3      	adds	r3, r2, r3
 8001168:	681b      	ldr	r3, [r3, #0]
 800116a:	469f      	mov	pc, r3
		{
		case intensity:
			if (!data_reg.depth)
 800116c:	4b4c      	ldr	r3, [pc, #304]	; (80012a0 <set_data_negative+0x158>)
 800116e:	781b      	ldrb	r3, [r3, #0]
 8001170:	227f      	movs	r2, #127	; 0x7f
 8001172:	4393      	bics	r3, r2
 8001174:	b2db      	uxtb	r3, r3
 8001176:	2b00      	cmp	r3, #0
 8001178:	d125      	bne.n	80011c6 <set_data_negative+0x7e>
			{
				data_reg.intensity--;
 800117a:	4b49      	ldr	r3, [pc, #292]	; (80012a0 <set_data_negative+0x158>)
 800117c:	781b      	ldrb	r3, [r3, #0]
 800117e:	071b      	lsls	r3, r3, #28
 8001180:	0f1b      	lsrs	r3, r3, #28
 8001182:	b2db      	uxtb	r3, r3
 8001184:	330f      	adds	r3, #15
 8001186:	1c1a      	adds	r2, r3, #0
 8001188:	230f      	movs	r3, #15
 800118a:	4013      	ands	r3, r2
 800118c:	b2da      	uxtb	r2, r3
 800118e:	4b44      	ldr	r3, [pc, #272]	; (80012a0 <set_data_negative+0x158>)
 8001190:	210f      	movs	r1, #15
 8001192:	400a      	ands	r2, r1
 8001194:	0010      	movs	r0, r2
 8001196:	781a      	ldrb	r2, [r3, #0]
 8001198:	210f      	movs	r1, #15
 800119a:	438a      	bics	r2, r1
 800119c:	1c11      	adds	r1, r2, #0
 800119e:	1c02      	adds	r2, r0, #0
 80011a0:	430a      	orrs	r2, r1
 80011a2:	701a      	strb	r2, [r3, #0]
				if (data_reg.intensity <= 1)
 80011a4:	4b3e      	ldr	r3, [pc, #248]	; (80012a0 <set_data_negative+0x158>)
 80011a6:	781b      	ldrb	r3, [r3, #0]
 80011a8:	071b      	lsls	r3, r3, #28
 80011aa:	0f1b      	lsrs	r3, r3, #28
 80011ac:	b2db      	uxtb	r3, r3
 80011ae:	2b01      	cmp	r3, #1
 80011b0:	d900      	bls.n	80011b4 <set_data_negative+0x6c>
 80011b2:	e068      	b.n	8001286 <set_data_negative+0x13e>
				{
					data_reg.intensity = 1;
 80011b4:	4b3a      	ldr	r3, [pc, #232]	; (80012a0 <set_data_negative+0x158>)
 80011b6:	781a      	ldrb	r2, [r3, #0]
 80011b8:	210f      	movs	r1, #15
 80011ba:	438a      	bics	r2, r1
 80011bc:	1c11      	adds	r1, r2, #0
 80011be:	2201      	movs	r2, #1
 80011c0:	430a      	orrs	r2, r1
 80011c2:	701a      	strb	r2, [r3, #0]
			}
			else
			{
				depth_press = 1;
			}
			break;
 80011c4:	e05f      	b.n	8001286 <set_data_negative+0x13e>
				depth_press = 1;
 80011c6:	4b37      	ldr	r3, [pc, #220]	; (80012a4 <set_data_negative+0x15c>)
 80011c8:	2201      	movs	r2, #1
 80011ca:	701a      	strb	r2, [r3, #0]
			break;
 80011cc:	e05b      	b.n	8001286 <set_data_negative+0x13e>
		case color:
			// if (!data_reg.depth)
			// {
			data_reg.color--;
 80011ce:	4b34      	ldr	r3, [pc, #208]	; (80012a0 <set_data_negative+0x158>)
 80011d0:	785b      	ldrb	r3, [r3, #1]
 80011d2:	b25b      	sxtb	r3, r3
 80011d4:	b2db      	uxtb	r3, r3
 80011d6:	3b01      	subs	r3, #1
 80011d8:	b2db      	uxtb	r3, r3
 80011da:	b25a      	sxtb	r2, r3
 80011dc:	4b30      	ldr	r3, [pc, #192]	; (80012a0 <set_data_negative+0x158>)
 80011de:	705a      	strb	r2, [r3, #1]
			if (data_reg.color < -1)
 80011e0:	4b2f      	ldr	r3, [pc, #188]	; (80012a0 <set_data_negative+0x158>)
 80011e2:	785b      	ldrb	r3, [r3, #1]
 80011e4:	b25b      	sxtb	r3, r3
 80011e6:	3301      	adds	r3, #1
 80011e8:	da4f      	bge.n	800128a <set_data_negative+0x142>
			{
				data_reg.color = -1;
 80011ea:	4b2d      	ldr	r3, [pc, #180]	; (80012a0 <set_data_negative+0x158>)
 80011ec:	22ff      	movs	r2, #255	; 0xff
 80011ee:	705a      	strb	r2, [r3, #1]
			}
			// }
			break;
 80011f0:	e04b      	b.n	800128a <set_data_negative+0x142>
		case sensor:
			data_reg.sensor = off;
 80011f2:	4b2b      	ldr	r3, [pc, #172]	; (80012a0 <set_data_negative+0x158>)
 80011f4:	781a      	ldrb	r2, [r3, #0]
 80011f6:	2110      	movs	r1, #16
 80011f8:	438a      	bics	r2, r1
 80011fa:	701a      	strb	r2, [r3, #0]
			break;
 80011fc:	e046      	b.n	800128c <set_data_negative+0x144>
		case lamp:
			data_reg.lamp = off;
 80011fe:	4b28      	ldr	r3, [pc, #160]	; (80012a0 <set_data_negative+0x158>)
 8001200:	781a      	ldrb	r2, [r3, #0]
 8001202:	2120      	movs	r1, #32
 8001204:	438a      	bics	r2, r1
 8001206:	701a      	strb	r2, [r3, #0]
			break;
 8001208:	e040      	b.n	800128c <set_data_negative+0x144>
		case endo:
			data_reg.endo = off;
 800120a:	4b25      	ldr	r3, [pc, #148]	; (80012a0 <set_data_negative+0x158>)
 800120c:	781a      	ldrb	r2, [r3, #0]
 800120e:	2140      	movs	r1, #64	; 0x40
 8001210:	438a      	bics	r2, r1
 8001212:	701a      	strb	r2, [r3, #0]
			data_reg.intensity = data_reg.intensity;
 8001214:	4b22      	ldr	r3, [pc, #136]	; (80012a0 <set_data_negative+0x158>)
 8001216:	781b      	ldrb	r3, [r3, #0]
 8001218:	071b      	lsls	r3, r3, #28
 800121a:	0f1b      	lsrs	r3, r3, #28
 800121c:	b2da      	uxtb	r2, r3
 800121e:	4b20      	ldr	r3, [pc, #128]	; (80012a0 <set_data_negative+0x158>)
 8001220:	210f      	movs	r1, #15
 8001222:	400a      	ands	r2, r1
 8001224:	0010      	movs	r0, r2
 8001226:	781a      	ldrb	r2, [r3, #0]
 8001228:	210f      	movs	r1, #15
 800122a:	438a      	bics	r2, r1
 800122c:	1c11      	adds	r1, r2, #0
 800122e:	1c02      	adds	r2, r0, #0
 8001230:	430a      	orrs	r2, r1
 8001232:	701a      	strb	r2, [r3, #0]
			break;
 8001234:	e02a      	b.n	800128c <set_data_negative+0x144>
		case depth:
			data_reg.depth = off;
 8001236:	4b1a      	ldr	r3, [pc, #104]	; (80012a0 <set_data_negative+0x158>)
 8001238:	781a      	ldrb	r2, [r3, #0]
 800123a:	217f      	movs	r1, #127	; 0x7f
 800123c:	400a      	ands	r2, r1
 800123e:	701a      	strb	r2, [r3, #0]
			break;
 8001240:	e024      	b.n	800128c <set_data_negative+0x144>
		case 7:
			pg2_fc = off;
 8001242:	4b14      	ldr	r3, [pc, #80]	; (8001294 <set_data_negative+0x14c>)
 8001244:	2200      	movs	r2, #0
 8001246:	701a      	strb	r2, [r3, #0]
			break;
 8001248:	e020      	b.n	800128c <set_data_negative+0x144>
		}
	}

	else
	{
		switch (current_pos.position_cursor)
 800124a:	4b13      	ldr	r3, [pc, #76]	; (8001298 <set_data_negative+0x150>)
 800124c:	781b      	ldrb	r3, [r3, #0]
 800124e:	b25b      	sxtb	r3, r3
 8001250:	2b07      	cmp	r3, #7
 8001252:	d008      	beq.n	8001266 <set_data_negative+0x11e>
 8001254:	dc1a      	bgt.n	800128c <set_data_negative+0x144>
 8001256:	2b03      	cmp	r3, #3
 8001258:	d011      	beq.n	800127e <set_data_negative+0x136>
 800125a:	dc17      	bgt.n	800128c <set_data_negative+0x144>
 800125c:	2b01      	cmp	r3, #1
 800125e:	d006      	beq.n	800126e <set_data_negative+0x126>
 8001260:	2b02      	cmp	r3, #2
 8001262:	d008      	beq.n	8001276 <set_data_negative+0x12e>
		case 3:
			pg3_wd = off;
			break;
		}
	}
}
 8001264:	e012      	b.n	800128c <set_data_negative+0x144>
			pg2_fc = off;
 8001266:	4b0b      	ldr	r3, [pc, #44]	; (8001294 <set_data_negative+0x14c>)
 8001268:	2200      	movs	r2, #0
 800126a:	701a      	strb	r2, [r3, #0]
			break;
 800126c:	e00e      	b.n	800128c <set_data_negative+0x144>
			pg3_sm = off;
 800126e:	4b0e      	ldr	r3, [pc, #56]	; (80012a8 <set_data_negative+0x160>)
 8001270:	2200      	movs	r2, #0
 8001272:	701a      	strb	r2, [r3, #0]
			break;
 8001274:	e00a      	b.n	800128c <set_data_negative+0x144>
			pg3_md = off;
 8001276:	4b0d      	ldr	r3, [pc, #52]	; (80012ac <set_data_negative+0x164>)
 8001278:	2200      	movs	r2, #0
 800127a:	701a      	strb	r2, [r3, #0]
			break;
 800127c:	e006      	b.n	800128c <set_data_negative+0x144>
			pg3_wd = off;
 800127e:	4b0c      	ldr	r3, [pc, #48]	; (80012b0 <set_data_negative+0x168>)
 8001280:	2200      	movs	r2, #0
 8001282:	701a      	strb	r2, [r3, #0]
			break;
 8001284:	e002      	b.n	800128c <set_data_negative+0x144>
			break;
 8001286:	46c0      	nop			; (mov r8, r8)
 8001288:	e000      	b.n	800128c <set_data_negative+0x144>
			break;
 800128a:	46c0      	nop			; (mov r8, r8)
}
 800128c:	46c0      	nop			; (mov r8, r8)
 800128e:	46bd      	mov	sp, r7
 8001290:	bd80      	pop	{r7, pc}
 8001292:	46c0      	nop			; (mov r8, r8)
 8001294:	2000009f 	.word	0x2000009f
 8001298:	20000004 	.word	0x20000004
 800129c:	08007490 	.word	0x08007490
 80012a0:	20000008 	.word	0x20000008
 80012a4:	2000009c 	.word	0x2000009c
 80012a8:	200000a0 	.word	0x200000a0
 80012ac:	200000a1 	.word	0x200000a1
 80012b0:	200000a2 	.word	0x200000a2

080012b4 <update_new_data>:

void update_new_data()
{
 80012b4:	b580      	push	{r7, lr}
 80012b6:	af00      	add	r7, sp, #0
	switch (current_pos.key_number)
 80012b8:	4b58      	ldr	r3, [pc, #352]	; (800141c <update_new_data+0x168>)
 80012ba:	785b      	ldrb	r3, [r3, #1]
 80012bc:	075b      	lsls	r3, r3, #29
 80012be:	0f5b      	lsrs	r3, r3, #29
 80012c0:	b2db      	uxtb	r3, r3
 80012c2:	2b05      	cmp	r3, #5
 80012c4:	d900      	bls.n	80012c8 <update_new_data+0x14>
 80012c6:	e0a6      	b.n	8001416 <update_new_data+0x162>
 80012c8:	009a      	lsls	r2, r3, #2
 80012ca:	4b55      	ldr	r3, [pc, #340]	; (8001420 <update_new_data+0x16c>)
 80012cc:	18d3      	adds	r3, r2, r3
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	469f      	mov	pc, r3
	{
	case _prv:
		current_pos.position_cursor--;
 80012d2:	4b52      	ldr	r3, [pc, #328]	; (800141c <update_new_data+0x168>)
 80012d4:	781b      	ldrb	r3, [r3, #0]
 80012d6:	b25b      	sxtb	r3, r3
 80012d8:	b2db      	uxtb	r3, r3
 80012da:	3b01      	subs	r3, #1
 80012dc:	b2db      	uxtb	r3, r3
 80012de:	b25a      	sxtb	r2, r3
 80012e0:	4b4e      	ldr	r3, [pc, #312]	; (800141c <update_new_data+0x168>)
 80012e2:	701a      	strb	r2, [r3, #0]
		if (!data_reg.sensor)
 80012e4:	4b4f      	ldr	r3, [pc, #316]	; (8001424 <update_new_data+0x170>)
 80012e6:	781b      	ldrb	r3, [r3, #0]
 80012e8:	2210      	movs	r2, #16
 80012ea:	4013      	ands	r3, r2
 80012ec:	b2db      	uxtb	r3, r3
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	d107      	bne.n	8001302 <update_new_data+0x4e>
		{

			if (current_pos.position_cursor == 3)
 80012f2:	4b4a      	ldr	r3, [pc, #296]	; (800141c <update_new_data+0x168>)
 80012f4:	781b      	ldrb	r3, [r3, #0]
 80012f6:	b25b      	sxtb	r3, r3
 80012f8:	2b03      	cmp	r3, #3
 80012fa:	d102      	bne.n	8001302 <update_new_data+0x4e>
			{
				current_pos.position_cursor = 2;
 80012fc:	4b47      	ldr	r3, [pc, #284]	; (800141c <update_new_data+0x168>)
 80012fe:	2202      	movs	r2, #2
 8001300:	701a      	strb	r2, [r3, #0]
		// 	{
		// 		current_pos.position_cursor = 7;
		// 	}
		// }

		if (current_pos.position_cursor <= 0)
 8001302:	4b46      	ldr	r3, [pc, #280]	; (800141c <update_new_data+0x168>)
 8001304:	781b      	ldrb	r3, [r3, #0]
 8001306:	b25b      	sxtb	r3, r3
 8001308:	2b00      	cmp	r3, #0
 800130a:	dd00      	ble.n	800130e <update_new_data+0x5a>
 800130c:	e080      	b.n	8001410 <update_new_data+0x15c>
		{
			//			lcd_clear();
			current_pos.position_cursor = 7;
 800130e:	4b43      	ldr	r3, [pc, #268]	; (800141c <update_new_data+0x168>)
 8001310:	2207      	movs	r2, #7
 8001312:	701a      	strb	r2, [r3, #0]
		}
		break;
 8001314:	e07c      	b.n	8001410 <update_new_data+0x15c>
	case _nxt:
		current_pos.position_cursor++;
 8001316:	4b41      	ldr	r3, [pc, #260]	; (800141c <update_new_data+0x168>)
 8001318:	781b      	ldrb	r3, [r3, #0]
 800131a:	b25b      	sxtb	r3, r3
 800131c:	b2db      	uxtb	r3, r3
 800131e:	3301      	adds	r3, #1
 8001320:	b2db      	uxtb	r3, r3
 8001322:	b25a      	sxtb	r2, r3
 8001324:	4b3d      	ldr	r3, [pc, #244]	; (800141c <update_new_data+0x168>)
 8001326:	701a      	strb	r2, [r3, #0]

		if (!data_reg.sensor)
 8001328:	4b3e      	ldr	r3, [pc, #248]	; (8001424 <update_new_data+0x170>)
 800132a:	781b      	ldrb	r3, [r3, #0]
 800132c:	2210      	movs	r2, #16
 800132e:	4013      	ands	r3, r2
 8001330:	b2db      	uxtb	r3, r3
 8001332:	2b00      	cmp	r3, #0
 8001334:	d10b      	bne.n	800134e <update_new_data+0x9a>
		{

			if (current_pos.position_cursor == 3 && (pg2_fc == 0))
 8001336:	4b39      	ldr	r3, [pc, #228]	; (800141c <update_new_data+0x168>)
 8001338:	781b      	ldrb	r3, [r3, #0]
 800133a:	b25b      	sxtb	r3, r3
 800133c:	2b03      	cmp	r3, #3
 800133e:	d106      	bne.n	800134e <update_new_data+0x9a>
 8001340:	4b39      	ldr	r3, [pc, #228]	; (8001428 <update_new_data+0x174>)
 8001342:	781b      	ldrb	r3, [r3, #0]
 8001344:	2b00      	cmp	r3, #0
 8001346:	d102      	bne.n	800134e <update_new_data+0x9a>
			{
				current_pos.position_cursor = 4;
 8001348:	4b34      	ldr	r3, [pc, #208]	; (800141c <update_new_data+0x168>)
 800134a:	2204      	movs	r2, #4
 800134c:	701a      	strb	r2, [r3, #0]
		//			{
		//				current_pos.position_cursor = 7;
		//			}
		//		}

		if (current_pos.position_cursor > 7)
 800134e:	4b33      	ldr	r3, [pc, #204]	; (800141c <update_new_data+0x168>)
 8001350:	781b      	ldrb	r3, [r3, #0]
 8001352:	b25b      	sxtb	r3, r3
 8001354:	2b07      	cmp	r3, #7
 8001356:	dd5d      	ble.n	8001414 <update_new_data+0x160>
		{

			current_pos.position_cursor = 1;
 8001358:	4b30      	ldr	r3, [pc, #192]	; (800141c <update_new_data+0x168>)
 800135a:	2201      	movs	r2, #1
 800135c:	701a      	strb	r2, [r3, #0]
		}
		break;
 800135e:	e059      	b.n	8001414 <update_new_data+0x160>
		// 			data_reg.intensity = 10;
		// 			depth_press = 1;
		// //			data_reg.depth = on;
		// 		}

		data_reg.endo = !data_reg.endo;
 8001360:	4b30      	ldr	r3, [pc, #192]	; (8001424 <update_new_data+0x170>)
 8001362:	781b      	ldrb	r3, [r3, #0]
 8001364:	2240      	movs	r2, #64	; 0x40
 8001366:	4013      	ands	r3, r2
 8001368:	b2db      	uxtb	r3, r3
 800136a:	425a      	negs	r2, r3
 800136c:	4153      	adcs	r3, r2
 800136e:	b2da      	uxtb	r2, r3
 8001370:	4b2c      	ldr	r3, [pc, #176]	; (8001424 <update_new_data+0x170>)
 8001372:	2101      	movs	r1, #1
 8001374:	400a      	ands	r2, r1
 8001376:	0190      	lsls	r0, r2, #6
 8001378:	781a      	ldrb	r2, [r3, #0]
 800137a:	2140      	movs	r1, #64	; 0x40
 800137c:	438a      	bics	r2, r1
 800137e:	1c11      	adds	r1, r2, #0
 8001380:	1c02      	adds	r2, r0, #0
 8001382:	430a      	orrs	r2, r1
 8001384:	701a      	strb	r2, [r3, #0]
		current_pos.position_cursor = endo;
 8001386:	4b25      	ldr	r3, [pc, #148]	; (800141c <update_new_data+0x168>)
 8001388:	2205      	movs	r2, #5
 800138a:	701a      	strb	r2, [r3, #0]
		if (data_reg.endo)
 800138c:	4b25      	ldr	r3, [pc, #148]	; (8001424 <update_new_data+0x170>)
 800138e:	781b      	ldrb	r3, [r3, #0]
 8001390:	2240      	movs	r2, #64	; 0x40
 8001392:	4013      	ands	r3, r2
 8001394:	b2db      	uxtb	r3, r3
 8001396:	2b00      	cmp	r3, #0
 8001398:	d005      	beq.n	80013a6 <update_new_data+0xf2>
		{

			// last_inten = data_reg.intensity;
			data_reg.endo = 1;
 800139a:	4b22      	ldr	r3, [pc, #136]	; (8001424 <update_new_data+0x170>)
 800139c:	781a      	ldrb	r2, [r3, #0]
 800139e:	2140      	movs	r1, #64	; 0x40
 80013a0:	430a      	orrs	r2, r1
 80013a2:	701a      	strb	r2, [r3, #0]
			// current_pos.position_cursor = endo;
			data_reg.endo = 0;
			// depth_press = 1;
			//			data_reg.depth = off;
		}
		break;
 80013a4:	e037      	b.n	8001416 <update_new_data+0x162>
			data_reg.endo = 0;
 80013a6:	4b1f      	ldr	r3, [pc, #124]	; (8001424 <update_new_data+0x170>)
 80013a8:	781a      	ldrb	r2, [r3, #0]
 80013aa:	2140      	movs	r1, #64	; 0x40
 80013ac:	438a      	bics	r2, r1
 80013ae:	701a      	strb	r2, [r3, #0]
		break;
 80013b0:	e031      	b.n	8001416 <update_new_data+0x162>
	case _pos:
		set_data_positive();
 80013b2:	f7ff fe09 	bl	8000fc8 <set_data_positive>
		break;
 80013b6:	e02e      	b.n	8001416 <update_new_data+0x162>
	case _neg:
		set_data_negative();
 80013b8:	f7ff fec6 	bl	8001148 <set_data_negative>
		break;
 80013bc:	e02b      	b.n	8001416 <update_new_data+0x162>
	case _lmp:
		data_reg.lamp = !data_reg.lamp;
 80013be:	4b19      	ldr	r3, [pc, #100]	; (8001424 <update_new_data+0x170>)
 80013c0:	781b      	ldrb	r3, [r3, #0]
 80013c2:	2220      	movs	r2, #32
 80013c4:	4013      	ands	r3, r2
 80013c6:	b2db      	uxtb	r3, r3
 80013c8:	425a      	negs	r2, r3
 80013ca:	4153      	adcs	r3, r2
 80013cc:	b2da      	uxtb	r2, r3
 80013ce:	4b15      	ldr	r3, [pc, #84]	; (8001424 <update_new_data+0x170>)
 80013d0:	2101      	movs	r1, #1
 80013d2:	400a      	ands	r2, r1
 80013d4:	0150      	lsls	r0, r2, #5
 80013d6:	781a      	ldrb	r2, [r3, #0]
 80013d8:	2120      	movs	r1, #32
 80013da:	438a      	bics	r2, r1
 80013dc:	1c11      	adds	r1, r2, #0
 80013de:	1c02      	adds	r2, r0, #0
 80013e0:	430a      	orrs	r2, r1
 80013e2:	701a      	strb	r2, [r3, #0]
		current_pos.position_cursor = lamp;
 80013e4:	4b0d      	ldr	r3, [pc, #52]	; (800141c <update_new_data+0x168>)
 80013e6:	2204      	movs	r2, #4
 80013e8:	701a      	strb	r2, [r3, #0]
		if (data_reg.lamp)
 80013ea:	4b0e      	ldr	r3, [pc, #56]	; (8001424 <update_new_data+0x170>)
 80013ec:	781b      	ldrb	r3, [r3, #0]
 80013ee:	2220      	movs	r2, #32
 80013f0:	4013      	ands	r3, r2
 80013f2:	b2db      	uxtb	r3, r3
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	d005      	beq.n	8001404 <update_new_data+0x150>
		{

			data_reg.lamp = 1;
 80013f8:	4b0a      	ldr	r3, [pc, #40]	; (8001424 <update_new_data+0x170>)
 80013fa:	781a      	ldrb	r2, [r3, #0]
 80013fc:	2120      	movs	r1, #32
 80013fe:	430a      	orrs	r2, r1
 8001400:	701a      	strb	r2, [r3, #0]
		else
		{

			data_reg.lamp = 0;
		}
		break;
 8001402:	e008      	b.n	8001416 <update_new_data+0x162>
			data_reg.lamp = 0;
 8001404:	4b07      	ldr	r3, [pc, #28]	; (8001424 <update_new_data+0x170>)
 8001406:	781a      	ldrb	r2, [r3, #0]
 8001408:	2120      	movs	r1, #32
 800140a:	438a      	bics	r2, r1
 800140c:	701a      	strb	r2, [r3, #0]
		break;
 800140e:	e002      	b.n	8001416 <update_new_data+0x162>
		break;
 8001410:	46c0      	nop			; (mov r8, r8)
 8001412:	e000      	b.n	8001416 <update_new_data+0x162>
		break;
 8001414:	46c0      	nop			; (mov r8, r8)
	}
}
 8001416:	46c0      	nop			; (mov r8, r8)
 8001418:	46bd      	mov	sp, r7
 800141a:	bd80      	pop	{r7, pc}
 800141c:	20000004 	.word	0x20000004
 8001420:	080074b0 	.word	0x080074b0
 8001424:	20000008 	.word	0x20000008
 8001428:	2000009f 	.word	0x2000009f

0800142c <page_2_print>:

void page_2_print()
{
 800142c:	b580      	push	{r7, lr}
 800142e:	af00      	add	r7, sp, #0
	lcd_puts(0, 0, (int8_t *)">");
 8001430:	4b07      	ldr	r3, [pc, #28]	; (8001450 <page_2_print+0x24>)
 8001432:	001a      	movs	r2, r3
 8001434:	2100      	movs	r1, #0
 8001436:	2000      	movs	r0, #0
 8001438:	f7ff faca 	bl	80009d0 <lcd_puts>
	lcd_puts(0, 1, (int8_t *)"FOCUS  :");
 800143c:	4b05      	ldr	r3, [pc, #20]	; (8001454 <page_2_print+0x28>)
 800143e:	001a      	movs	r2, r3
 8001440:	2101      	movs	r1, #1
 8001442:	2000      	movs	r0, #0
 8001444:	f7ff fac4 	bl	80009d0 <lcd_puts>
}
 8001448:	46c0      	nop			; (mov r8, r8)
 800144a:	46bd      	mov	sp, r7
 800144c:	bd80      	pop	{r7, pc}
 800144e:	46c0      	nop			; (mov r8, r8)
 8001450:	080073a0 	.word	0x080073a0
 8001454:	080073a4 	.word	0x080073a4

08001458 <page_3_print>:

void page_3_print()
{
 8001458:	b580      	push	{r7, lr}
 800145a:	af00      	add	r7, sp, #0
	// {
	// 	lcd_puts(3, 10, (int8_t *)"OFF");
	// 	lcd_puts(1, 10, (int8_t *)"OFF");
	// 	lcd_puts(2, 10, (int8_t *)"OFF");
	// }
}
 800145c:	46c0      	nop			; (mov r8, r8)
 800145e:	46bd      	mov	sp, r7
 8001460:	bd80      	pop	{r7, pc}
	...

08001464 <update_screen_data_2>:

void update_screen_data_2()
{
 8001464:	b580      	push	{r7, lr}
 8001466:	af00      	add	r7, sp, #0
	focus_upd = 1;
 8001468:	4b08      	ldr	r3, [pc, #32]	; (800148c <update_screen_data_2+0x28>)
 800146a:	2201      	movs	r2, #1
 800146c:	701a      	strb	r2, [r3, #0]
	lcd_puts(0, 0, (int8_t *)">");
 800146e:	4b08      	ldr	r3, [pc, #32]	; (8001490 <update_screen_data_2+0x2c>)
 8001470:	001a      	movs	r2, r3
 8001472:	2100      	movs	r1, #0
 8001474:	2000      	movs	r0, #0
 8001476:	f7ff faab 	bl	80009d0 <lcd_puts>
	lcd_puts(0, 10, (int8_t *)"Disable");
 800147a:	4b06      	ldr	r3, [pc, #24]	; (8001494 <update_screen_data_2+0x30>)
 800147c:	001a      	movs	r2, r3
 800147e:	210a      	movs	r1, #10
 8001480:	2000      	movs	r0, #0
 8001482:	f7ff faa5 	bl	80009d0 <lcd_puts>
	// send_cmd(!pg3_sm, 8);

	// lcd_puts(3, 10, (int8_t *)"OFF");
	// send_cmd(!pg3_wd, 10);
	// send_cmd(1, 11);
}
 8001486:	46c0      	nop			; (mov r8, r8)
 8001488:	46bd      	mov	sp, r7
 800148a:	bd80      	pop	{r7, pc}
 800148c:	2000009d 	.word	0x2000009d
 8001490:	080073a0 	.word	0x080073a0
 8001494:	080073b0 	.word	0x080073b0

08001498 <update_screen_data_3>:

void update_screen_data_3()
{
 8001498:	b580      	push	{r7, lr}
 800149a:	af00      	add	r7, sp, #0

	// if (current_pos.key_number == _pos || current_pos.key_number == _neg)

	lcd_puts(0, 0, (int8_t *)">");
 800149c:	4be8      	ldr	r3, [pc, #928]	; (8001840 <update_screen_data_3+0x3a8>)
 800149e:	001a      	movs	r2, r3
 80014a0:	2100      	movs	r1, #0
 80014a2:	2000      	movs	r0, #0
 80014a4:	f7ff fa94 	bl	80009d0 <lcd_puts>
	lcd_puts(0, 1, (int8_t *)"FOCUS  :");
 80014a8:	4be6      	ldr	r3, [pc, #920]	; (8001844 <update_screen_data_3+0x3ac>)
 80014aa:	001a      	movs	r2, r3
 80014ac:	2101      	movs	r1, #1
 80014ae:	2000      	movs	r0, #0
 80014b0:	f7ff fa8e 	bl	80009d0 <lcd_puts>
	lcd_puts(1, 1, (int8_t *)"SMALL  : ");
 80014b4:	4be4      	ldr	r3, [pc, #912]	; (8001848 <update_screen_data_3+0x3b0>)
 80014b6:	001a      	movs	r2, r3
 80014b8:	2101      	movs	r1, #1
 80014ba:	2001      	movs	r0, #1
 80014bc:	f7ff fa88 	bl	80009d0 <lcd_puts>
	lcd_puts(2, 1, (int8_t *)"Medium : ");
 80014c0:	4be2      	ldr	r3, [pc, #904]	; (800184c <update_screen_data_3+0x3b4>)
 80014c2:	001a      	movs	r2, r3
 80014c4:	2101      	movs	r1, #1
 80014c6:	2002      	movs	r0, #2
 80014c8:	f7ff fa82 	bl	80009d0 <lcd_puts>
	lcd_puts(3, 1, (int8_t *)"Wide   : ");
 80014cc:	4be0      	ldr	r3, [pc, #896]	; (8001850 <update_screen_data_3+0x3b8>)
 80014ce:	001a      	movs	r2, r3
 80014d0:	2101      	movs	r1, #1
 80014d2:	2003      	movs	r0, #3
 80014d4:	f7ff fa7c 	bl	80009d0 <lcd_puts>

	switch (current_pos.position_cursor)
 80014d8:	4bde      	ldr	r3, [pc, #888]	; (8001854 <update_screen_data_3+0x3bc>)
 80014da:	781b      	ldrb	r3, [r3, #0]
 80014dc:	b25b      	sxtb	r3, r3
 80014de:	2b07      	cmp	r3, #7
 80014e0:	d00d      	beq.n	80014fe <update_screen_data_3+0x66>
 80014e2:	dd00      	ble.n	80014e6 <update_screen_data_3+0x4e>
 80014e4:	e1ee      	b.n	80018c4 <update_screen_data_3+0x42c>
 80014e6:	2b03      	cmp	r3, #3
 80014e8:	d100      	bne.n	80014ec <update_screen_data_3+0x54>
 80014ea:	e166      	b.n	80017ba <update_screen_data_3+0x322>
 80014ec:	dd00      	ble.n	80014f0 <update_screen_data_3+0x58>
 80014ee:	e1e9      	b.n	80018c4 <update_screen_data_3+0x42c>
 80014f0:	2b01      	cmp	r3, #1
 80014f2:	d100      	bne.n	80014f6 <update_screen_data_3+0x5e>
 80014f4:	e0a0      	b.n	8001638 <update_screen_data_3+0x1a0>
 80014f6:	2b02      	cmp	r3, #2
 80014f8:	d100      	bne.n	80014fc <update_screen_data_3+0x64>
 80014fa:	e102      	b.n	8001702 <update_screen_data_3+0x26a>
		// 	send_cmd(pg3_wd, 10);
		// }
		break;
	}
	// }
}
 80014fc:	e1e2      	b.n	80018c4 <update_screen_data_3+0x42c>
		if (pg2_fc == 1)
 80014fe:	4bd6      	ldr	r3, [pc, #856]	; (8001858 <update_screen_data_3+0x3c0>)
 8001500:	781b      	ldrb	r3, [r3, #0]
 8001502:	2b01      	cmp	r3, #1
 8001504:	d145      	bne.n	8001592 <update_screen_data_3+0xfa>
			lcd_puts(0, 15, (int8_t *)"  ");
 8001506:	4bd5      	ldr	r3, [pc, #852]	; (800185c <update_screen_data_3+0x3c4>)
 8001508:	001a      	movs	r2, r3
 800150a:	210f      	movs	r1, #15
 800150c:	2000      	movs	r0, #0
 800150e:	f7ff fa5f 	bl	80009d0 <lcd_puts>
			lcd_puts(0, 10, (int8_t *)"Enable");
 8001512:	4bd3      	ldr	r3, [pc, #844]	; (8001860 <update_screen_data_3+0x3c8>)
 8001514:	001a      	movs	r2, r3
 8001516:	210a      	movs	r1, #10
 8001518:	2000      	movs	r0, #0
 800151a:	f7ff fa59 	bl	80009d0 <lcd_puts>
			lcd_puts(1, 10, (int8_t *)"OFF");
 800151e:	4bd1      	ldr	r3, [pc, #836]	; (8001864 <update_screen_data_3+0x3cc>)
 8001520:	001a      	movs	r2, r3
 8001522:	210a      	movs	r1, #10
 8001524:	2001      	movs	r0, #1
 8001526:	f7ff fa53 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"OFF");
 800152a:	4bce      	ldr	r3, [pc, #824]	; (8001864 <update_screen_data_3+0x3cc>)
 800152c:	001a      	movs	r2, r3
 800152e:	210a      	movs	r1, #10
 8001530:	2002      	movs	r0, #2
 8001532:	f7ff fa4d 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"OFF");
 8001536:	4bcb      	ldr	r3, [pc, #812]	; (8001864 <update_screen_data_3+0x3cc>)
 8001538:	001a      	movs	r2, r3
 800153a:	210a      	movs	r1, #10
 800153c:	2003      	movs	r0, #3
 800153e:	f7ff fa47 	bl	80009d0 <lcd_puts>
			if (focus_upd)
 8001542:	4bc9      	ldr	r3, [pc, #804]	; (8001868 <update_screen_data_3+0x3d0>)
 8001544:	781b      	ldrb	r3, [r3, #0]
 8001546:	2b00      	cmp	r3, #0
 8001548:	d01a      	beq.n	8001580 <update_screen_data_3+0xe8>
				lcd_puts(3, 10, (int8_t *)"OFF");
 800154a:	4bc6      	ldr	r3, [pc, #792]	; (8001864 <update_screen_data_3+0x3cc>)
 800154c:	001a      	movs	r2, r3
 800154e:	210a      	movs	r1, #10
 8001550:	2003      	movs	r0, #3
 8001552:	f7ff fa3d 	bl	80009d0 <lcd_puts>
				lcd_puts(1, 10, (int8_t *)"OFF");
 8001556:	4bc3      	ldr	r3, [pc, #780]	; (8001864 <update_screen_data_3+0x3cc>)
 8001558:	001a      	movs	r2, r3
 800155a:	210a      	movs	r1, #10
 800155c:	2001      	movs	r0, #1
 800155e:	f7ff fa37 	bl	80009d0 <lcd_puts>
				lcd_puts(2, 10, (int8_t *)"OFF");
 8001562:	4bc0      	ldr	r3, [pc, #768]	; (8001864 <update_screen_data_3+0x3cc>)
 8001564:	001a      	movs	r2, r3
 8001566:	210a      	movs	r1, #10
 8001568:	2002      	movs	r0, #2
 800156a:	f7ff fa31 	bl	80009d0 <lcd_puts>
				pg3_sm = 0;
 800156e:	4bbf      	ldr	r3, [pc, #764]	; (800186c <update_screen_data_3+0x3d4>)
 8001570:	2200      	movs	r2, #0
 8001572:	701a      	strb	r2, [r3, #0]
				pg3_md = 0;
 8001574:	4bbe      	ldr	r3, [pc, #760]	; (8001870 <update_screen_data_3+0x3d8>)
 8001576:	2200      	movs	r2, #0
 8001578:	701a      	strb	r2, [r3, #0]
				pg3_wd = 0;
 800157a:	4bbe      	ldr	r3, [pc, #760]	; (8001874 <update_screen_data_3+0x3dc>)
 800157c:	2200      	movs	r2, #0
 800157e:	701a      	strb	r2, [r3, #0]
			last_focus = data_reg.intensity;
 8001580:	4bbd      	ldr	r3, [pc, #756]	; (8001878 <update_screen_data_3+0x3e0>)
 8001582:	781b      	ldrb	r3, [r3, #0]
 8001584:	071b      	lsls	r3, r3, #28
 8001586:	0f1b      	lsrs	r3, r3, #28
 8001588:	b2db      	uxtb	r3, r3
 800158a:	b25a      	sxtb	r2, r3
 800158c:	4bbb      	ldr	r3, [pc, #748]	; (800187c <update_screen_data_3+0x3e4>)
 800158e:	701a      	strb	r2, [r3, #0]
		break;
 8001590:	e198      	b.n	80018c4 <update_screen_data_3+0x42c>
			lcd_puts(0, 0, (int8_t *)">");
 8001592:	4bab      	ldr	r3, [pc, #684]	; (8001840 <update_screen_data_3+0x3a8>)
 8001594:	001a      	movs	r2, r3
 8001596:	2100      	movs	r1, #0
 8001598:	2000      	movs	r0, #0
 800159a:	f7ff fa19 	bl	80009d0 <lcd_puts>
			lcd_puts(1, 0, (int8_t *)" ");
 800159e:	4bb8      	ldr	r3, [pc, #736]	; (8001880 <update_screen_data_3+0x3e8>)
 80015a0:	001a      	movs	r2, r3
 80015a2:	2100      	movs	r1, #0
 80015a4:	2001      	movs	r0, #1
 80015a6:	f7ff fa13 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 0, (int8_t *)" ");
 80015aa:	4bb5      	ldr	r3, [pc, #724]	; (8001880 <update_screen_data_3+0x3e8>)
 80015ac:	001a      	movs	r2, r3
 80015ae:	2100      	movs	r1, #0
 80015b0:	2002      	movs	r0, #2
 80015b2:	f7ff fa0d 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 0, (int8_t *)" ");
 80015b6:	4bb2      	ldr	r3, [pc, #712]	; (8001880 <update_screen_data_3+0x3e8>)
 80015b8:	001a      	movs	r2, r3
 80015ba:	2100      	movs	r1, #0
 80015bc:	2003      	movs	r0, #3
 80015be:	f7ff fa07 	bl	80009d0 <lcd_puts>
			if (focus_upd == 1)
 80015c2:	4ba9      	ldr	r3, [pc, #676]	; (8001868 <update_screen_data_3+0x3d0>)
 80015c4:	781b      	ldrb	r3, [r3, #0]
 80015c6:	2b01      	cmp	r3, #1
 80015c8:	d111      	bne.n	80015ee <update_screen_data_3+0x156>
				lcd_puts(2, 10, (int8_t *)"OFF");
 80015ca:	4ba6      	ldr	r3, [pc, #664]	; (8001864 <update_screen_data_3+0x3cc>)
 80015cc:	001a      	movs	r2, r3
 80015ce:	210a      	movs	r1, #10
 80015d0:	2002      	movs	r0, #2
 80015d2:	f7ff f9fd 	bl	80009d0 <lcd_puts>
				lcd_puts(1, 10, (int8_t *)"OFF");
 80015d6:	4ba3      	ldr	r3, [pc, #652]	; (8001864 <update_screen_data_3+0x3cc>)
 80015d8:	001a      	movs	r2, r3
 80015da:	210a      	movs	r1, #10
 80015dc:	2001      	movs	r0, #1
 80015de:	f7ff f9f7 	bl	80009d0 <lcd_puts>
				lcd_puts(3, 10, (int8_t *)"OFF");
 80015e2:	4ba0      	ldr	r3, [pc, #640]	; (8001864 <update_screen_data_3+0x3cc>)
 80015e4:	001a      	movs	r2, r3
 80015e6:	210a      	movs	r1, #10
 80015e8:	2003      	movs	r0, #3
 80015ea:	f7ff f9f1 	bl	80009d0 <lcd_puts>
			lcd_puts(0, 10, (int8_t *)"Disable");
 80015ee:	4ba5      	ldr	r3, [pc, #660]	; (8001884 <update_screen_data_3+0x3ec>)
 80015f0:	001a      	movs	r2, r3
 80015f2:	210a      	movs	r1, #10
 80015f4:	2000      	movs	r0, #0
 80015f6:	f7ff f9eb 	bl	80009d0 <lcd_puts>
			send_cmd(!pg3_md, 9);
 80015fa:	4b9d      	ldr	r3, [pc, #628]	; (8001870 <update_screen_data_3+0x3d8>)
 80015fc:	781b      	ldrb	r3, [r3, #0]
 80015fe:	425a      	negs	r2, r3
 8001600:	4153      	adcs	r3, r2
 8001602:	b2db      	uxtb	r3, r3
 8001604:	b25b      	sxtb	r3, r3
 8001606:	2109      	movs	r1, #9
 8001608:	0018      	movs	r0, r3
 800160a:	f000 fb0d 	bl	8001c28 <send_cmd>
			send_cmd(!pg3_sm, 8);
 800160e:	4b97      	ldr	r3, [pc, #604]	; (800186c <update_screen_data_3+0x3d4>)
 8001610:	781b      	ldrb	r3, [r3, #0]
 8001612:	425a      	negs	r2, r3
 8001614:	4153      	adcs	r3, r2
 8001616:	b2db      	uxtb	r3, r3
 8001618:	b25b      	sxtb	r3, r3
 800161a:	2108      	movs	r1, #8
 800161c:	0018      	movs	r0, r3
 800161e:	f000 fb03 	bl	8001c28 <send_cmd>
			send_cmd(!pg3_wd, 10);
 8001622:	4b94      	ldr	r3, [pc, #592]	; (8001874 <update_screen_data_3+0x3dc>)
 8001624:	781b      	ldrb	r3, [r3, #0]
 8001626:	425a      	negs	r2, r3
 8001628:	4153      	adcs	r3, r2
 800162a:	b2db      	uxtb	r3, r3
 800162c:	b25b      	sxtb	r3, r3
 800162e:	210a      	movs	r1, #10
 8001630:	0018      	movs	r0, r3
 8001632:	f000 faf9 	bl	8001c28 <send_cmd>
		break;
 8001636:	e145      	b.n	80018c4 <update_screen_data_3+0x42c>
		lcd_puts(0, 0, (int8_t *)" ");
 8001638:	4b91      	ldr	r3, [pc, #580]	; (8001880 <update_screen_data_3+0x3e8>)
 800163a:	001a      	movs	r2, r3
 800163c:	2100      	movs	r1, #0
 800163e:	2000      	movs	r0, #0
 8001640:	f7ff f9c6 	bl	80009d0 <lcd_puts>
		lcd_puts(1, 0, (int8_t *)">");
 8001644:	4b7e      	ldr	r3, [pc, #504]	; (8001840 <update_screen_data_3+0x3a8>)
 8001646:	001a      	movs	r2, r3
 8001648:	2100      	movs	r1, #0
 800164a:	2001      	movs	r0, #1
 800164c:	f7ff f9c0 	bl	80009d0 <lcd_puts>
		lcd_puts(2, 0, (int8_t *)" ");
 8001650:	4b8b      	ldr	r3, [pc, #556]	; (8001880 <update_screen_data_3+0x3e8>)
 8001652:	001a      	movs	r2, r3
 8001654:	2100      	movs	r1, #0
 8001656:	2002      	movs	r0, #2
 8001658:	f7ff f9ba 	bl	80009d0 <lcd_puts>
		lcd_puts(3, 0, (int8_t *)" ");
 800165c:	4b88      	ldr	r3, [pc, #544]	; (8001880 <update_screen_data_3+0x3e8>)
 800165e:	001a      	movs	r2, r3
 8001660:	2100      	movs	r1, #0
 8001662:	2003      	movs	r0, #3
 8001664:	f7ff f9b4 	bl	80009d0 <lcd_puts>
		lcd_puts(0, 10, (int8_t *)"Enable");
 8001668:	4b7d      	ldr	r3, [pc, #500]	; (8001860 <update_screen_data_3+0x3c8>)
 800166a:	001a      	movs	r2, r3
 800166c:	210a      	movs	r1, #10
 800166e:	2000      	movs	r0, #0
 8001670:	f7ff f9ae 	bl	80009d0 <lcd_puts>
		if (pg3_sm)
 8001674:	4b7d      	ldr	r3, [pc, #500]	; (800186c <update_screen_data_3+0x3d4>)
 8001676:	781b      	ldrb	r3, [r3, #0]
 8001678:	2b00      	cmp	r3, #0
 800167a:	d028      	beq.n	80016ce <update_screen_data_3+0x236>
			focus_upd = 0;
 800167c:	4b7a      	ldr	r3, [pc, #488]	; (8001868 <update_screen_data_3+0x3d0>)
 800167e:	2200      	movs	r2, #0
 8001680:	701a      	strb	r2, [r3, #0]
			lcd_puts(1, 10, (int8_t *)"   ");
 8001682:	4b81      	ldr	r3, [pc, #516]	; (8001888 <update_screen_data_3+0x3f0>)
 8001684:	001a      	movs	r2, r3
 8001686:	210a      	movs	r1, #10
 8001688:	2001      	movs	r0, #1
 800168a:	f7ff f9a1 	bl	80009d0 <lcd_puts>
			lcd_puts(1, 17, (int8_t *)"   ");
 800168e:	4b7e      	ldr	r3, [pc, #504]	; (8001888 <update_screen_data_3+0x3f0>)
 8001690:	001a      	movs	r2, r3
 8001692:	2111      	movs	r1, #17
 8001694:	2001      	movs	r0, #1
 8001696:	f7ff f99b 	bl	80009d0 <lcd_puts>
			lcd_puts(1, 10, (int8_t *)"ON");
 800169a:	4b7c      	ldr	r3, [pc, #496]	; (800188c <update_screen_data_3+0x3f4>)
 800169c:	001a      	movs	r2, r3
 800169e:	210a      	movs	r1, #10
 80016a0:	2001      	movs	r0, #1
 80016a2:	f7ff f995 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"OFF");
 80016a6:	4b6f      	ldr	r3, [pc, #444]	; (8001864 <update_screen_data_3+0x3cc>)
 80016a8:	001a      	movs	r2, r3
 80016aa:	210a      	movs	r1, #10
 80016ac:	2002      	movs	r0, #2
 80016ae:	f7ff f98f 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"OFF");
 80016b2:	4b6c      	ldr	r3, [pc, #432]	; (8001864 <update_screen_data_3+0x3cc>)
 80016b4:	001a      	movs	r2, r3
 80016b6:	210a      	movs	r1, #10
 80016b8:	2003      	movs	r0, #3
 80016ba:	f7ff f989 	bl	80009d0 <lcd_puts>
			send_cmd(pg3_sm, 8);
 80016be:	4b6b      	ldr	r3, [pc, #428]	; (800186c <update_screen_data_3+0x3d4>)
 80016c0:	781b      	ldrb	r3, [r3, #0]
 80016c2:	b25b      	sxtb	r3, r3
 80016c4:	2108      	movs	r1, #8
 80016c6:	0018      	movs	r0, r3
 80016c8:	f000 faae 	bl	8001c28 <send_cmd>
		break;
 80016cc:	e0fa      	b.n	80018c4 <update_screen_data_3+0x42c>
			lcd_puts(1, 10, (int8_t *)"OFF");
 80016ce:	4b65      	ldr	r3, [pc, #404]	; (8001864 <update_screen_data_3+0x3cc>)
 80016d0:	001a      	movs	r2, r3
 80016d2:	210a      	movs	r1, #10
 80016d4:	2001      	movs	r0, #1
 80016d6:	f7ff f97b 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"OFF");
 80016da:	4b62      	ldr	r3, [pc, #392]	; (8001864 <update_screen_data_3+0x3cc>)
 80016dc:	001a      	movs	r2, r3
 80016de:	210a      	movs	r1, #10
 80016e0:	2002      	movs	r0, #2
 80016e2:	f7ff f975 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"OFF");
 80016e6:	4b5f      	ldr	r3, [pc, #380]	; (8001864 <update_screen_data_3+0x3cc>)
 80016e8:	001a      	movs	r2, r3
 80016ea:	210a      	movs	r1, #10
 80016ec:	2003      	movs	r0, #3
 80016ee:	f7ff f96f 	bl	80009d0 <lcd_puts>
			send_cmd(pg3_sm, 8);
 80016f2:	4b5e      	ldr	r3, [pc, #376]	; (800186c <update_screen_data_3+0x3d4>)
 80016f4:	781b      	ldrb	r3, [r3, #0]
 80016f6:	b25b      	sxtb	r3, r3
 80016f8:	2108      	movs	r1, #8
 80016fa:	0018      	movs	r0, r3
 80016fc:	f000 fa94 	bl	8001c28 <send_cmd>
		break;
 8001700:	e0e0      	b.n	80018c4 <update_screen_data_3+0x42c>
		lcd_puts(0, 0, (int8_t *)" ");
 8001702:	4b5f      	ldr	r3, [pc, #380]	; (8001880 <update_screen_data_3+0x3e8>)
 8001704:	001a      	movs	r2, r3
 8001706:	2100      	movs	r1, #0
 8001708:	2000      	movs	r0, #0
 800170a:	f7ff f961 	bl	80009d0 <lcd_puts>
		lcd_puts(1, 0, (int8_t *)" ");
 800170e:	4b5c      	ldr	r3, [pc, #368]	; (8001880 <update_screen_data_3+0x3e8>)
 8001710:	001a      	movs	r2, r3
 8001712:	2100      	movs	r1, #0
 8001714:	2001      	movs	r0, #1
 8001716:	f7ff f95b 	bl	80009d0 <lcd_puts>
		lcd_puts(2, 0, (int8_t *)">");
 800171a:	4b49      	ldr	r3, [pc, #292]	; (8001840 <update_screen_data_3+0x3a8>)
 800171c:	001a      	movs	r2, r3
 800171e:	2100      	movs	r1, #0
 8001720:	2002      	movs	r0, #2
 8001722:	f7ff f955 	bl	80009d0 <lcd_puts>
		lcd_puts(3, 0, (int8_t *)" ");
 8001726:	4b56      	ldr	r3, [pc, #344]	; (8001880 <update_screen_data_3+0x3e8>)
 8001728:	001a      	movs	r2, r3
 800172a:	2100      	movs	r1, #0
 800172c:	2003      	movs	r0, #3
 800172e:	f7ff f94f 	bl	80009d0 <lcd_puts>
		lcd_puts(0, 10, (int8_t *)"Enable");
 8001732:	4b4b      	ldr	r3, [pc, #300]	; (8001860 <update_screen_data_3+0x3c8>)
 8001734:	001a      	movs	r2, r3
 8001736:	210a      	movs	r1, #10
 8001738:	2000      	movs	r0, #0
 800173a:	f7ff f949 	bl	80009d0 <lcd_puts>
		if (pg3_md)
 800173e:	4b4c      	ldr	r3, [pc, #304]	; (8001870 <update_screen_data_3+0x3d8>)
 8001740:	781b      	ldrb	r3, [r3, #0]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d01f      	beq.n	8001786 <update_screen_data_3+0x2ee>
			lcd_puts(2, 10, (int8_t *)"   ");
 8001746:	4b50      	ldr	r3, [pc, #320]	; (8001888 <update_screen_data_3+0x3f0>)
 8001748:	001a      	movs	r2, r3
 800174a:	210a      	movs	r1, #10
 800174c:	2002      	movs	r0, #2
 800174e:	f7ff f93f 	bl	80009d0 <lcd_puts>
			lcd_puts(1, 10, (int8_t *)"OFF");
 8001752:	4b44      	ldr	r3, [pc, #272]	; (8001864 <update_screen_data_3+0x3cc>)
 8001754:	001a      	movs	r2, r3
 8001756:	210a      	movs	r1, #10
 8001758:	2001      	movs	r0, #1
 800175a:	f7ff f939 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"ON");
 800175e:	4b4b      	ldr	r3, [pc, #300]	; (800188c <update_screen_data_3+0x3f4>)
 8001760:	001a      	movs	r2, r3
 8001762:	210a      	movs	r1, #10
 8001764:	2002      	movs	r0, #2
 8001766:	f7ff f933 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"OFF");
 800176a:	4b3e      	ldr	r3, [pc, #248]	; (8001864 <update_screen_data_3+0x3cc>)
 800176c:	001a      	movs	r2, r3
 800176e:	210a      	movs	r1, #10
 8001770:	2003      	movs	r0, #3
 8001772:	f7ff f92d 	bl	80009d0 <lcd_puts>
			send_cmd(pg3_md, 9);
 8001776:	4b3e      	ldr	r3, [pc, #248]	; (8001870 <update_screen_data_3+0x3d8>)
 8001778:	781b      	ldrb	r3, [r3, #0]
 800177a:	b25b      	sxtb	r3, r3
 800177c:	2109      	movs	r1, #9
 800177e:	0018      	movs	r0, r3
 8001780:	f000 fa52 	bl	8001c28 <send_cmd>
		break;
 8001784:	e09e      	b.n	80018c4 <update_screen_data_3+0x42c>
			lcd_puts(1, 10, (int8_t *)"OFF");
 8001786:	4b37      	ldr	r3, [pc, #220]	; (8001864 <update_screen_data_3+0x3cc>)
 8001788:	001a      	movs	r2, r3
 800178a:	210a      	movs	r1, #10
 800178c:	2001      	movs	r0, #1
 800178e:	f7ff f91f 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"OFF");
 8001792:	4b34      	ldr	r3, [pc, #208]	; (8001864 <update_screen_data_3+0x3cc>)
 8001794:	001a      	movs	r2, r3
 8001796:	210a      	movs	r1, #10
 8001798:	2002      	movs	r0, #2
 800179a:	f7ff f919 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"OFF");
 800179e:	4b31      	ldr	r3, [pc, #196]	; (8001864 <update_screen_data_3+0x3cc>)
 80017a0:	001a      	movs	r2, r3
 80017a2:	210a      	movs	r1, #10
 80017a4:	2003      	movs	r0, #3
 80017a6:	f7ff f913 	bl	80009d0 <lcd_puts>
			send_cmd(pg3_md, 9);
 80017aa:	4b31      	ldr	r3, [pc, #196]	; (8001870 <update_screen_data_3+0x3d8>)
 80017ac:	781b      	ldrb	r3, [r3, #0]
 80017ae:	b25b      	sxtb	r3, r3
 80017b0:	2109      	movs	r1, #9
 80017b2:	0018      	movs	r0, r3
 80017b4:	f000 fa38 	bl	8001c28 <send_cmd>
		break;
 80017b8:	e084      	b.n	80018c4 <update_screen_data_3+0x42c>
		lcd_puts(0, 0, (int8_t *)" ");
 80017ba:	4b31      	ldr	r3, [pc, #196]	; (8001880 <update_screen_data_3+0x3e8>)
 80017bc:	001a      	movs	r2, r3
 80017be:	2100      	movs	r1, #0
 80017c0:	2000      	movs	r0, #0
 80017c2:	f7ff f905 	bl	80009d0 <lcd_puts>
		lcd_puts(1, 0, (int8_t *)" ");
 80017c6:	4b2e      	ldr	r3, [pc, #184]	; (8001880 <update_screen_data_3+0x3e8>)
 80017c8:	001a      	movs	r2, r3
 80017ca:	2100      	movs	r1, #0
 80017cc:	2001      	movs	r0, #1
 80017ce:	f7ff f8ff 	bl	80009d0 <lcd_puts>
		lcd_puts(2, 0, (int8_t *)" ");
 80017d2:	4b2b      	ldr	r3, [pc, #172]	; (8001880 <update_screen_data_3+0x3e8>)
 80017d4:	001a      	movs	r2, r3
 80017d6:	2100      	movs	r1, #0
 80017d8:	2002      	movs	r0, #2
 80017da:	f7ff f8f9 	bl	80009d0 <lcd_puts>
		lcd_puts(3, 0, (int8_t *)">");
 80017de:	4b18      	ldr	r3, [pc, #96]	; (8001840 <update_screen_data_3+0x3a8>)
 80017e0:	001a      	movs	r2, r3
 80017e2:	2100      	movs	r1, #0
 80017e4:	2003      	movs	r0, #3
 80017e6:	f7ff f8f3 	bl	80009d0 <lcd_puts>
		lcd_puts(0, 10, (int8_t *)"Enable");
 80017ea:	4b1d      	ldr	r3, [pc, #116]	; (8001860 <update_screen_data_3+0x3c8>)
 80017ec:	001a      	movs	r2, r3
 80017ee:	210a      	movs	r1, #10
 80017f0:	2000      	movs	r0, #0
 80017f2:	f7ff f8ed 	bl	80009d0 <lcd_puts>
		if (pg3_wd)
 80017f6:	4b1f      	ldr	r3, [pc, #124]	; (8001874 <update_screen_data_3+0x3dc>)
 80017f8:	781b      	ldrb	r3, [r3, #0]
 80017fa:	2b00      	cmp	r3, #0
 80017fc:	d048      	beq.n	8001890 <update_screen_data_3+0x3f8>
			lcd_puts(3, 10, (int8_t *)"   ");
 80017fe:	4b22      	ldr	r3, [pc, #136]	; (8001888 <update_screen_data_3+0x3f0>)
 8001800:	001a      	movs	r2, r3
 8001802:	210a      	movs	r1, #10
 8001804:	2003      	movs	r0, #3
 8001806:	f7ff f8e3 	bl	80009d0 <lcd_puts>
			lcd_puts(1, 10, (int8_t *)"OFF");
 800180a:	4b16      	ldr	r3, [pc, #88]	; (8001864 <update_screen_data_3+0x3cc>)
 800180c:	001a      	movs	r2, r3
 800180e:	210a      	movs	r1, #10
 8001810:	2001      	movs	r0, #1
 8001812:	f7ff f8dd 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"OFF");
 8001816:	4b13      	ldr	r3, [pc, #76]	; (8001864 <update_screen_data_3+0x3cc>)
 8001818:	001a      	movs	r2, r3
 800181a:	210a      	movs	r1, #10
 800181c:	2002      	movs	r0, #2
 800181e:	f7ff f8d7 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"ON");
 8001822:	4b1a      	ldr	r3, [pc, #104]	; (800188c <update_screen_data_3+0x3f4>)
 8001824:	001a      	movs	r2, r3
 8001826:	210a      	movs	r1, #10
 8001828:	2003      	movs	r0, #3
 800182a:	f7ff f8d1 	bl	80009d0 <lcd_puts>
			send_cmd(pg3_wd, 10);
 800182e:	4b11      	ldr	r3, [pc, #68]	; (8001874 <update_screen_data_3+0x3dc>)
 8001830:	781b      	ldrb	r3, [r3, #0]
 8001832:	b25b      	sxtb	r3, r3
 8001834:	210a      	movs	r1, #10
 8001836:	0018      	movs	r0, r3
 8001838:	f000 f9f6 	bl	8001c28 <send_cmd>
		break;
 800183c:	e041      	b.n	80018c2 <update_screen_data_3+0x42a>
 800183e:	46c0      	nop			; (mov r8, r8)
 8001840:	080073a0 	.word	0x080073a0
 8001844:	080073a4 	.word	0x080073a4
 8001848:	080073b8 	.word	0x080073b8
 800184c:	080073c4 	.word	0x080073c4
 8001850:	080073d0 	.word	0x080073d0
 8001854:	20000004 	.word	0x20000004
 8001858:	2000009f 	.word	0x2000009f
 800185c:	080073dc 	.word	0x080073dc
 8001860:	080073e0 	.word	0x080073e0
 8001864:	0800739c 	.word	0x0800739c
 8001868:	2000009d 	.word	0x2000009d
 800186c:	200000a0 	.word	0x200000a0
 8001870:	200000a1 	.word	0x200000a1
 8001874:	200000a2 	.word	0x200000a2
 8001878:	20000008 	.word	0x20000008
 800187c:	200000b1 	.word	0x200000b1
 8001880:	080073e8 	.word	0x080073e8
 8001884:	080073b0 	.word	0x080073b0
 8001888:	080073ec 	.word	0x080073ec
 800188c:	08007398 	.word	0x08007398
			lcd_puts(1, 10, (int8_t *)"OFF");
 8001890:	4b0e      	ldr	r3, [pc, #56]	; (80018cc <update_screen_data_3+0x434>)
 8001892:	001a      	movs	r2, r3
 8001894:	210a      	movs	r1, #10
 8001896:	2001      	movs	r0, #1
 8001898:	f7ff f89a 	bl	80009d0 <lcd_puts>
			lcd_puts(2, 10, (int8_t *)"OFF");
 800189c:	4b0b      	ldr	r3, [pc, #44]	; (80018cc <update_screen_data_3+0x434>)
 800189e:	001a      	movs	r2, r3
 80018a0:	210a      	movs	r1, #10
 80018a2:	2002      	movs	r0, #2
 80018a4:	f7ff f894 	bl	80009d0 <lcd_puts>
			lcd_puts(3, 10, (int8_t *)"OFF");
 80018a8:	4b08      	ldr	r3, [pc, #32]	; (80018cc <update_screen_data_3+0x434>)
 80018aa:	001a      	movs	r2, r3
 80018ac:	210a      	movs	r1, #10
 80018ae:	2003      	movs	r0, #3
 80018b0:	f7ff f88e 	bl	80009d0 <lcd_puts>
			send_cmd(pg3_md, 10);
 80018b4:	4b06      	ldr	r3, [pc, #24]	; (80018d0 <update_screen_data_3+0x438>)
 80018b6:	781b      	ldrb	r3, [r3, #0]
 80018b8:	b25b      	sxtb	r3, r3
 80018ba:	210a      	movs	r1, #10
 80018bc:	0018      	movs	r0, r3
 80018be:	f000 f9b3 	bl	8001c28 <send_cmd>
		break;
 80018c2:	46c0      	nop			; (mov r8, r8)
}
 80018c4:	46c0      	nop			; (mov r8, r8)
 80018c6:	46bd      	mov	sp, r7
 80018c8:	bd80      	pop	{r7, pc}
 80018ca:	46c0      	nop			; (mov r8, r8)
 80018cc:	0800739c 	.word	0x0800739c
 80018d0:	200000a1 	.word	0x200000a1

080018d4 <update_screen_data>:

void update_screen_data()
{
 80018d4:	b580      	push	{r7, lr}
 80018d6:	b082      	sub	sp, #8
 80018d8:	af00      	add	r7, sp, #0
	char buffer[3];

	switch (current_pos.position_cursor)
 80018da:	4bc7      	ldr	r3, [pc, #796]	; (8001bf8 <update_screen_data+0x324>)
 80018dc:	781b      	ldrb	r3, [r3, #0]
 80018de:	b25b      	sxtb	r3, r3
 80018e0:	2b06      	cmp	r3, #6
 80018e2:	d900      	bls.n	80018e6 <update_screen_data+0x12>
 80018e4:	e183      	b.n	8001bee <update_screen_data+0x31a>
 80018e6:	009a      	lsls	r2, r3, #2
 80018e8:	4bc4      	ldr	r3, [pc, #784]	; (8001bfc <update_screen_data+0x328>)
 80018ea:	18d3      	adds	r3, r2, r3
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	469f      	mov	pc, r3
	{
	case intensity:
		if (data_reg.depth == 1)
 80018f0:	4bc3      	ldr	r3, [pc, #780]	; (8001c00 <update_screen_data+0x32c>)
 80018f2:	781b      	ldrb	r3, [r3, #0]
 80018f4:	227f      	movs	r2, #127	; 0x7f
 80018f6:	4393      	bics	r3, r2
 80018f8:	b2db      	uxtb	r3, r3
 80018fa:	2b00      	cmp	r3, #0
 80018fc:	d003      	beq.n	8001906 <update_screen_data+0x32>
		{
			//			sprintf(buffer, "%02d", data_reg.intensity);
			//			last_inten = data_reg.intensity;
			//			send_cmd(7,intensity);
			// lcd_puts(1, 7, (int8_t *)"MAX");
			depth_press = 0;
 80018fe:	4bc1      	ldr	r3, [pc, #772]	; (8001c04 <update_screen_data+0x330>)
 8001900:	2200      	movs	r2, #0
 8001902:	701a      	strb	r2, [r3, #0]
 8001904:	e013      	b.n	800192e <update_screen_data+0x5a>
		}
		else
		{
			clr_data(intensity);
 8001906:	2001      	movs	r0, #1
 8001908:	f7ff f8b4 	bl	8000a74 <clr_data>
			sprintf(buffer, "%02d", data_reg.intensity);
 800190c:	4bbc      	ldr	r3, [pc, #752]	; (8001c00 <update_screen_data+0x32c>)
 800190e:	781b      	ldrb	r3, [r3, #0]
 8001910:	071b      	lsls	r3, r3, #28
 8001912:	0f1b      	lsrs	r3, r3, #28
 8001914:	b2db      	uxtb	r3, r3
 8001916:	001a      	movs	r2, r3
 8001918:	49bb      	ldr	r1, [pc, #748]	; (8001c08 <update_screen_data+0x334>)
 800191a:	1d3b      	adds	r3, r7, #4
 800191c:	0018      	movs	r0, r3
 800191e:	f005 f827 	bl	8006970 <siprintf>
			lcd_puts(1, 7, (int8_t *)buffer);
 8001922:	1d3b      	adds	r3, r7, #4
 8001924:	001a      	movs	r2, r3
 8001926:	2107      	movs	r1, #7
 8001928:	2001      	movs	r0, #1
 800192a:	f7ff f851 	bl	80009d0 <lcd_puts>
		}

		clr_select();
 800192e:	f7ff f97f 	bl	8000c30 <clr_select>
		lcd_puts(1, 0, (int8_t *)">");
 8001932:	4bb6      	ldr	r3, [pc, #728]	; (8001c0c <update_screen_data+0x338>)
 8001934:	001a      	movs	r2, r3
 8001936:	2100      	movs	r1, #0
 8001938:	2001      	movs	r0, #1
 800193a:	f7ff f849 	bl	80009d0 <lcd_puts>
		if (!chk_cmd)
 800193e:	4bb4      	ldr	r3, [pc, #720]	; (8001c10 <update_screen_data+0x33c>)
 8001940:	781b      	ldrb	r3, [r3, #0]
 8001942:	2b00      	cmp	r3, #0
 8001944:	d000      	beq.n	8001948 <update_screen_data+0x74>
 8001946:	e151      	b.n	8001bec <update_screen_data+0x318>
		{
			send_cmd(data_reg.intensity, intensity);
 8001948:	4bad      	ldr	r3, [pc, #692]	; (8001c00 <update_screen_data+0x32c>)
 800194a:	781b      	ldrb	r3, [r3, #0]
 800194c:	071b      	lsls	r3, r3, #28
 800194e:	0f1b      	lsrs	r3, r3, #28
 8001950:	b2db      	uxtb	r3, r3
 8001952:	b25b      	sxtb	r3, r3
 8001954:	2101      	movs	r1, #1
 8001956:	0018      	movs	r0, r3
 8001958:	f000 f966 	bl	8001c28 <send_cmd>
		}

		break;
 800195c:	e146      	b.n	8001bec <update_screen_data+0x318>

	case color:
		if (data_reg.color == 1)
 800195e:	4ba8      	ldr	r3, [pc, #672]	; (8001c00 <update_screen_data+0x32c>)
 8001960:	785b      	ldrb	r3, [r3, #1]
 8001962:	b25b      	sxtb	r3, r3
 8001964:	2b01      	cmp	r3, #1
 8001966:	d10e      	bne.n	8001986 <update_screen_data+0xb2>
		{
			lcd_puts(2, 7, (int8_t *)"CW");
 8001968:	4baa      	ldr	r3, [pc, #680]	; (8001c14 <update_screen_data+0x340>)
 800196a:	001a      	movs	r2, r3
 800196c:	2107      	movs	r1, #7
 800196e:	2002      	movs	r0, #2
 8001970:	f7ff f82e 	bl	80009d0 <lcd_puts>
			if (!chk_cmd)
 8001974:	4ba6      	ldr	r3, [pc, #664]	; (8001c10 <update_screen_data+0x33c>)
 8001976:	781b      	ldrb	r3, [r3, #0]
 8001978:	2b00      	cmp	r3, #0
 800197a:	d128      	bne.n	80019ce <update_screen_data+0xfa>
			{
				send_cmd(5, color);
 800197c:	2102      	movs	r1, #2
 800197e:	2005      	movs	r0, #5
 8001980:	f000 f952 	bl	8001c28 <send_cmd>
 8001984:	e023      	b.n	80019ce <update_screen_data+0xfa>
			}
		}
		else if (data_reg.color == -1)
 8001986:	4b9e      	ldr	r3, [pc, #632]	; (8001c00 <update_screen_data+0x32c>)
 8001988:	785b      	ldrb	r3, [r3, #1]
 800198a:	b25b      	sxtb	r3, r3
 800198c:	3301      	adds	r3, #1
 800198e:	d110      	bne.n	80019b2 <update_screen_data+0xde>
		{
			lcd_puts(2, 7, (int8_t *)"WW");
 8001990:	4ba1      	ldr	r3, [pc, #644]	; (8001c18 <update_screen_data+0x344>)
 8001992:	001a      	movs	r2, r3
 8001994:	2107      	movs	r1, #7
 8001996:	2002      	movs	r0, #2
 8001998:	f7ff f81a 	bl	80009d0 <lcd_puts>
			if (!chk_cmd)
 800199c:	4b9c      	ldr	r3, [pc, #624]	; (8001c10 <update_screen_data+0x33c>)
 800199e:	781b      	ldrb	r3, [r3, #0]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d114      	bne.n	80019ce <update_screen_data+0xfa>
			{
				send_cmd(-5, color);
 80019a4:	2305      	movs	r3, #5
 80019a6:	425b      	negs	r3, r3
 80019a8:	2102      	movs	r1, #2
 80019aa:	0018      	movs	r0, r3
 80019ac:	f000 f93c 	bl	8001c28 <send_cmd>
 80019b0:	e00d      	b.n	80019ce <update_screen_data+0xfa>
			}
		}

		else
		{
			lcd_puts(2, 7, (int8_t *)"NW");
 80019b2:	4b9a      	ldr	r3, [pc, #616]	; (8001c1c <update_screen_data+0x348>)
 80019b4:	001a      	movs	r2, r3
 80019b6:	2107      	movs	r1, #7
 80019b8:	2002      	movs	r0, #2
 80019ba:	f7ff f809 	bl	80009d0 <lcd_puts>
			if (!chk_cmd)
 80019be:	4b94      	ldr	r3, [pc, #592]	; (8001c10 <update_screen_data+0x33c>)
 80019c0:	781b      	ldrb	r3, [r3, #0]
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	d103      	bne.n	80019ce <update_screen_data+0xfa>
			{
				send_cmd(0, color);
 80019c6:	2102      	movs	r1, #2
 80019c8:	2000      	movs	r0, #0
 80019ca:	f000 f92d 	bl	8001c28 <send_cmd>
			}
		}

		// sprintf(buffer, "%02d", data_reg.color);
		// lcd_puts(2, 7, (int8_t *)buffer);
		clr_select();
 80019ce:	f7ff f92f 	bl	8000c30 <clr_select>
		lcd_puts(2, 0, (int8_t *)">");
 80019d2:	4b8e      	ldr	r3, [pc, #568]	; (8001c0c <update_screen_data+0x338>)
 80019d4:	001a      	movs	r2, r3
 80019d6:	2100      	movs	r1, #0
 80019d8:	2002      	movs	r0, #2
 80019da:	f7fe fff9 	bl	80009d0 <lcd_puts>
		// send_cmd(data_reg.color, color);
		break;
 80019de:	e106      	b.n	8001bee <update_screen_data+0x31a>

	case sensor:
		clr_data(sensor);
 80019e0:	2003      	movs	r0, #3
 80019e2:	f7ff f847 	bl	8000a74 <clr_data>
		clr_select();
 80019e6:	f7ff f923 	bl	8000c30 <clr_select>
		lcd_puts(3, 0, (int8_t *)">");
 80019ea:	4b88      	ldr	r3, [pc, #544]	; (8001c0c <update_screen_data+0x338>)
 80019ec:	001a      	movs	r2, r3
 80019ee:	2100      	movs	r1, #0
 80019f0:	2003      	movs	r0, #3
 80019f2:	f7fe ffed 	bl	80009d0 <lcd_puts>
		send_cmd(data_reg.sensor, sensor);
 80019f6:	4b82      	ldr	r3, [pc, #520]	; (8001c00 <update_screen_data+0x32c>)
 80019f8:	781b      	ldrb	r3, [r3, #0]
 80019fa:	06db      	lsls	r3, r3, #27
 80019fc:	0fdb      	lsrs	r3, r3, #31
 80019fe:	b2db      	uxtb	r3, r3
 8001a00:	b25b      	sxtb	r3, r3
 8001a02:	2103      	movs	r1, #3
 8001a04:	0018      	movs	r0, r3
 8001a06:	f000 f90f 	bl	8001c28 <send_cmd>

		if (data_reg.sensor)
 8001a0a:	4b7d      	ldr	r3, [pc, #500]	; (8001c00 <update_screen_data+0x32c>)
 8001a0c:	781b      	ldrb	r3, [r3, #0]
 8001a0e:	2210      	movs	r2, #16
 8001a10:	4013      	ands	r3, r2
 8001a12:	b2db      	uxtb	r3, r3
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d006      	beq.n	8001a26 <update_screen_data+0x152>
			lcd_puts(3, 7, (int8_t *)"ON");
 8001a18:	4b81      	ldr	r3, [pc, #516]	; (8001c20 <update_screen_data+0x34c>)
 8001a1a:	001a      	movs	r2, r3
 8001a1c:	2107      	movs	r1, #7
 8001a1e:	2003      	movs	r0, #3
 8001a20:	f7fe ffd6 	bl	80009d0 <lcd_puts>
		else
			lcd_puts(3, 7, (int8_t *)"OFF");

		break;
 8001a24:	e0e3      	b.n	8001bee <update_screen_data+0x31a>
			lcd_puts(3, 7, (int8_t *)"OFF");
 8001a26:	4b7f      	ldr	r3, [pc, #508]	; (8001c24 <update_screen_data+0x350>)
 8001a28:	001a      	movs	r2, r3
 8001a2a:	2107      	movs	r1, #7
 8001a2c:	2003      	movs	r0, #3
 8001a2e:	f7fe ffcf 	bl	80009d0 <lcd_puts>
		break;
 8001a32:	e0dc      	b.n	8001bee <update_screen_data+0x31a>

	case lamp:
		clr_data(lamp);
 8001a34:	2004      	movs	r0, #4
 8001a36:	f7ff f81d 	bl	8000a74 <clr_data>
		clr_select();
 8001a3a:	f7ff f8f9 	bl	8000c30 <clr_select>
		lcd_puts(1, 10, (int8_t *)">");
 8001a3e:	4b73      	ldr	r3, [pc, #460]	; (8001c0c <update_screen_data+0x338>)
 8001a40:	001a      	movs	r2, r3
 8001a42:	210a      	movs	r1, #10
 8001a44:	2001      	movs	r0, #1
 8001a46:	f7fe ffc3 	bl	80009d0 <lcd_puts>
		send_cmd(data_reg.lamp, lamp);
 8001a4a:	4b6d      	ldr	r3, [pc, #436]	; (8001c00 <update_screen_data+0x32c>)
 8001a4c:	781b      	ldrb	r3, [r3, #0]
 8001a4e:	069b      	lsls	r3, r3, #26
 8001a50:	0fdb      	lsrs	r3, r3, #31
 8001a52:	b2db      	uxtb	r3, r3
 8001a54:	b25b      	sxtb	r3, r3
 8001a56:	2104      	movs	r1, #4
 8001a58:	0018      	movs	r0, r3
 8001a5a:	f000 f8e5 	bl	8001c28 <send_cmd>
		if (current_pos.key_number == _pos || current_pos.key_number == _neg || current_pos.key_number == _lmp)
 8001a5e:	4b66      	ldr	r3, [pc, #408]	; (8001bf8 <update_screen_data+0x324>)
 8001a60:	785b      	ldrb	r3, [r3, #1]
 8001a62:	2207      	movs	r2, #7
 8001a64:	4013      	ands	r3, r2
 8001a66:	b2db      	uxtb	r3, r3
 8001a68:	2b04      	cmp	r3, #4
 8001a6a:	d00d      	beq.n	8001a88 <update_screen_data+0x1b4>
 8001a6c:	4b62      	ldr	r3, [pc, #392]	; (8001bf8 <update_screen_data+0x324>)
 8001a6e:	785b      	ldrb	r3, [r3, #1]
 8001a70:	2207      	movs	r2, #7
 8001a72:	4013      	ands	r3, r2
 8001a74:	b2db      	uxtb	r3, r3
 8001a76:	2b03      	cmp	r3, #3
 8001a78:	d006      	beq.n	8001a88 <update_screen_data+0x1b4>
 8001a7a:	4b5f      	ldr	r3, [pc, #380]	; (8001bf8 <update_screen_data+0x324>)
 8001a7c:	785b      	ldrb	r3, [r3, #1]
 8001a7e:	2207      	movs	r2, #7
 8001a80:	4013      	ands	r3, r2
 8001a82:	b2db      	uxtb	r3, r3
 8001a84:	2b05      	cmp	r3, #5
 8001a86:	d109      	bne.n	8001a9c <update_screen_data+0x1c8>
		{
			send_cmd(data_reg.lamp, lamp);
 8001a88:	4b5d      	ldr	r3, [pc, #372]	; (8001c00 <update_screen_data+0x32c>)
 8001a8a:	781b      	ldrb	r3, [r3, #0]
 8001a8c:	069b      	lsls	r3, r3, #26
 8001a8e:	0fdb      	lsrs	r3, r3, #31
 8001a90:	b2db      	uxtb	r3, r3
 8001a92:	b25b      	sxtb	r3, r3
 8001a94:	2104      	movs	r1, #4
 8001a96:	0018      	movs	r0, r3
 8001a98:	f000 f8c6 	bl	8001c28 <send_cmd>
		}
		if (data_reg.lamp)
 8001a9c:	4b58      	ldr	r3, [pc, #352]	; (8001c00 <update_screen_data+0x32c>)
 8001a9e:	781b      	ldrb	r3, [r3, #0]
 8001aa0:	2220      	movs	r2, #32
 8001aa2:	4013      	ands	r3, r2
 8001aa4:	b2db      	uxtb	r3, r3
 8001aa6:	2b00      	cmp	r3, #0
 8001aa8:	d006      	beq.n	8001ab8 <update_screen_data+0x1e4>
			lcd_puts(1, 17, (int8_t *)"ON");
 8001aaa:	4b5d      	ldr	r3, [pc, #372]	; (8001c20 <update_screen_data+0x34c>)
 8001aac:	001a      	movs	r2, r3
 8001aae:	2111      	movs	r1, #17
 8001ab0:	2001      	movs	r0, #1
 8001ab2:	f7fe ff8d 	bl	80009d0 <lcd_puts>
		else
			lcd_puts(1, 17, (int8_t *)"OFF");

		break;
 8001ab6:	e09a      	b.n	8001bee <update_screen_data+0x31a>
			lcd_puts(1, 17, (int8_t *)"OFF");
 8001ab8:	4b5a      	ldr	r3, [pc, #360]	; (8001c24 <update_screen_data+0x350>)
 8001aba:	001a      	movs	r2, r3
 8001abc:	2111      	movs	r1, #17
 8001abe:	2001      	movs	r0, #1
 8001ac0:	f7fe ff86 	bl	80009d0 <lcd_puts>
		break;
 8001ac4:	e093      	b.n	8001bee <update_screen_data+0x31a>

	case endo:
		clr_data(endo);
 8001ac6:	2005      	movs	r0, #5
 8001ac8:	f7fe ffd4 	bl	8000a74 <clr_data>
		clr_select();
 8001acc:	f7ff f8b0 	bl	8000c30 <clr_select>
		lcd_puts(2, 10, (int8_t *)">");
 8001ad0:	4b4e      	ldr	r3, [pc, #312]	; (8001c0c <update_screen_data+0x338>)
 8001ad2:	001a      	movs	r2, r3
 8001ad4:	210a      	movs	r1, #10
 8001ad6:	2002      	movs	r0, #2
 8001ad8:	f7fe ff7a 	bl	80009d0 <lcd_puts>

		// if (current_pos.key_number == _pos || current_pos.key_number == _neg)
		// {
		// 	send_cmd(data_reg.endo, endo);
		// }
		if (!chk_cmd)
 8001adc:	4b4c      	ldr	r3, [pc, #304]	; (8001c10 <update_screen_data+0x33c>)
 8001ade:	781b      	ldrb	r3, [r3, #0]
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d109      	bne.n	8001af8 <update_screen_data+0x224>
		{
			send_cmd(data_reg.endo, endo);
 8001ae4:	4b46      	ldr	r3, [pc, #280]	; (8001c00 <update_screen_data+0x32c>)
 8001ae6:	781b      	ldrb	r3, [r3, #0]
 8001ae8:	065b      	lsls	r3, r3, #25
 8001aea:	0fdb      	lsrs	r3, r3, #31
 8001aec:	b2db      	uxtb	r3, r3
 8001aee:	b25b      	sxtb	r3, r3
 8001af0:	2105      	movs	r1, #5
 8001af2:	0018      	movs	r0, r3
 8001af4:	f000 f898 	bl	8001c28 <send_cmd>
		}
		if (data_reg.endo)
 8001af8:	4b41      	ldr	r3, [pc, #260]	; (8001c00 <update_screen_data+0x32c>)
 8001afa:	781b      	ldrb	r3, [r3, #0]
 8001afc:	2240      	movs	r2, #64	; 0x40
 8001afe:	4013      	ands	r3, r2
 8001b00:	b2db      	uxtb	r3, r3
 8001b02:	2b00      	cmp	r3, #0
 8001b04:	d006      	beq.n	8001b14 <update_screen_data+0x240>
			lcd_puts(2, 17, (int8_t *)"ON");
 8001b06:	4b46      	ldr	r3, [pc, #280]	; (8001c20 <update_screen_data+0x34c>)
 8001b08:	001a      	movs	r2, r3
 8001b0a:	2111      	movs	r1, #17
 8001b0c:	2002      	movs	r0, #2
 8001b0e:	f7fe ff5f 	bl	80009d0 <lcd_puts>
		else
			lcd_puts(2, 17, (int8_t *)"OFF");

		break;
 8001b12:	e06c      	b.n	8001bee <update_screen_data+0x31a>
			lcd_puts(2, 17, (int8_t *)"OFF");
 8001b14:	4b43      	ldr	r3, [pc, #268]	; (8001c24 <update_screen_data+0x350>)
 8001b16:	001a      	movs	r2, r3
 8001b18:	2111      	movs	r1, #17
 8001b1a:	2002      	movs	r0, #2
 8001b1c:	f7fe ff58 	bl	80009d0 <lcd_puts>
		break;
 8001b20:	e065      	b.n	8001bee <update_screen_data+0x31a>

	case depth:
		clr_data(depth);
 8001b22:	2006      	movs	r0, #6
 8001b24:	f7fe ffa6 	bl	8000a74 <clr_data>
		clr_select();
 8001b28:	f7ff f882 	bl	8000c30 <clr_select>
		lcd_puts(3, 10, (int8_t *)">");
 8001b2c:	4b37      	ldr	r3, [pc, #220]	; (8001c0c <update_screen_data+0x338>)
 8001b2e:	001a      	movs	r2, r3
 8001b30:	210a      	movs	r1, #10
 8001b32:	2003      	movs	r0, #3
 8001b34:	f7fe ff4c 	bl	80009d0 <lcd_puts>
		if (current_pos.key_number == _pos || current_pos.key_number == _neg)
 8001b38:	4b2f      	ldr	r3, [pc, #188]	; (8001bf8 <update_screen_data+0x324>)
 8001b3a:	785b      	ldrb	r3, [r3, #1]
 8001b3c:	2207      	movs	r2, #7
 8001b3e:	4013      	ands	r3, r2
 8001b40:	b2db      	uxtb	r3, r3
 8001b42:	2b04      	cmp	r3, #4
 8001b44:	d006      	beq.n	8001b54 <update_screen_data+0x280>
 8001b46:	4b2c      	ldr	r3, [pc, #176]	; (8001bf8 <update_screen_data+0x324>)
 8001b48:	785b      	ldrb	r3, [r3, #1]
 8001b4a:	2207      	movs	r2, #7
 8001b4c:	4013      	ands	r3, r2
 8001b4e:	b2db      	uxtb	r3, r3
 8001b50:	2b03      	cmp	r3, #3
 8001b52:	d10c      	bne.n	8001b6e <update_screen_data+0x29a>
		{
			send_cmd(data_reg.depth, depth);
 8001b54:	4b2a      	ldr	r3, [pc, #168]	; (8001c00 <update_screen_data+0x32c>)
 8001b56:	781b      	ldrb	r3, [r3, #0]
 8001b58:	061b      	lsls	r3, r3, #24
 8001b5a:	0fdb      	lsrs	r3, r3, #31
 8001b5c:	b2db      	uxtb	r3, r3
 8001b5e:	b25b      	sxtb	r3, r3
 8001b60:	2106      	movs	r1, #6
 8001b62:	0018      	movs	r0, r3
 8001b64:	f000 f860 	bl	8001c28 <send_cmd>
			HAL_Delay(200);
 8001b68:	20c8      	movs	r0, #200	; 0xc8
 8001b6a:	f001 fb35 	bl	80031d8 <HAL_Delay>
		}
		if (data_reg.depth)
 8001b6e:	4b24      	ldr	r3, [pc, #144]	; (8001c00 <update_screen_data+0x32c>)
 8001b70:	781b      	ldrb	r3, [r3, #0]
 8001b72:	227f      	movs	r2, #127	; 0x7f
 8001b74:	4393      	bics	r3, r2
 8001b76:	b2db      	uxtb	r3, r3
 8001b78:	2b00      	cmp	r3, #0
 8001b7a:	d006      	beq.n	8001b8a <update_screen_data+0x2b6>
		{
			// lcd_puts(1, 7, (int8_t *)"MAX");
			lcd_puts(3, 17, (int8_t *)"ON");
 8001b7c:	4b28      	ldr	r3, [pc, #160]	; (8001c20 <update_screen_data+0x34c>)
 8001b7e:	001a      	movs	r2, r3
 8001b80:	2111      	movs	r1, #17
 8001b82:	2003      	movs	r0, #3
 8001b84:	f7fe ff24 	bl	80009d0 <lcd_puts>
			// if cw

			// if ww
		}

		break;
 8001b88:	e031      	b.n	8001bee <update_screen_data+0x31a>
			lcd_puts(3, 17, (int8_t *)"OFF");
 8001b8a:	4b26      	ldr	r3, [pc, #152]	; (8001c24 <update_screen_data+0x350>)
 8001b8c:	001a      	movs	r2, r3
 8001b8e:	2111      	movs	r1, #17
 8001b90:	2003      	movs	r0, #3
 8001b92:	f7fe ff1d 	bl	80009d0 <lcd_puts>
			if (data_reg.color == 1)
 8001b96:	4b1a      	ldr	r3, [pc, #104]	; (8001c00 <update_screen_data+0x32c>)
 8001b98:	785b      	ldrb	r3, [r3, #1]
 8001b9a:	b25b      	sxtb	r3, r3
 8001b9c:	2b01      	cmp	r3, #1
 8001b9e:	d104      	bne.n	8001baa <update_screen_data+0x2d6>
				send_cmd(5, color);
 8001ba0:	2102      	movs	r1, #2
 8001ba2:	2005      	movs	r0, #5
 8001ba4:	f000 f840 	bl	8001c28 <send_cmd>
		break;
 8001ba8:	e021      	b.n	8001bee <update_screen_data+0x31a>
			else if (data_reg.color == -1)
 8001baa:	4b15      	ldr	r3, [pc, #84]	; (8001c00 <update_screen_data+0x32c>)
 8001bac:	785b      	ldrb	r3, [r3, #1]
 8001bae:	b25b      	sxtb	r3, r3
 8001bb0:	3301      	adds	r3, #1
 8001bb2:	d106      	bne.n	8001bc2 <update_screen_data+0x2ee>
				send_cmd(-5, color);
 8001bb4:	2305      	movs	r3, #5
 8001bb6:	425b      	negs	r3, r3
 8001bb8:	2102      	movs	r1, #2
 8001bba:	0018      	movs	r0, r3
 8001bbc:	f000 f834 	bl	8001c28 <send_cmd>
		break;
 8001bc0:	e015      	b.n	8001bee <update_screen_data+0x31a>
				clr_data(intensity);
 8001bc2:	2001      	movs	r0, #1
 8001bc4:	f7fe ff56 	bl	8000a74 <clr_data>
				sprintf(buffer, "%02d", data_reg.intensity);
 8001bc8:	4b0d      	ldr	r3, [pc, #52]	; (8001c00 <update_screen_data+0x32c>)
 8001bca:	781b      	ldrb	r3, [r3, #0]
 8001bcc:	071b      	lsls	r3, r3, #28
 8001bce:	0f1b      	lsrs	r3, r3, #28
 8001bd0:	b2db      	uxtb	r3, r3
 8001bd2:	001a      	movs	r2, r3
 8001bd4:	490c      	ldr	r1, [pc, #48]	; (8001c08 <update_screen_data+0x334>)
 8001bd6:	1d3b      	adds	r3, r7, #4
 8001bd8:	0018      	movs	r0, r3
 8001bda:	f004 fec9 	bl	8006970 <siprintf>
				lcd_puts(1, 7, (int8_t *)buffer);
 8001bde:	1d3b      	adds	r3, r7, #4
 8001be0:	001a      	movs	r2, r3
 8001be2:	2107      	movs	r1, #7
 8001be4:	2001      	movs	r0, #1
 8001be6:	f7fe fef3 	bl	80009d0 <lcd_puts>
		break;
 8001bea:	e000      	b.n	8001bee <update_screen_data+0x31a>
		break;
 8001bec:	46c0      	nop			; (mov r8, r8)
	}
}
 8001bee:	46c0      	nop			; (mov r8, r8)
 8001bf0:	46bd      	mov	sp, r7
 8001bf2:	b002      	add	sp, #8
 8001bf4:	bd80      	pop	{r7, pc}
 8001bf6:	46c0      	nop			; (mov r8, r8)
 8001bf8:	20000004 	.word	0x20000004
 8001bfc:	080074c8 	.word	0x080074c8
 8001c00:	20000008 	.word	0x20000008
 8001c04:	2000009c 	.word	0x2000009c
 8001c08:	08007390 	.word	0x08007390
 8001c0c:	080073a0 	.word	0x080073a0
 8001c10:	20000227 	.word	0x20000227
 8001c14:	080073f0 	.word	0x080073f0
 8001c18:	080073f4 	.word	0x080073f4
 8001c1c:	080073f8 	.word	0x080073f8
 8001c20:	08007398 	.word	0x08007398
 8001c24:	0800739c 	.word	0x0800739c

08001c28 <send_cmd>:

void send_cmd(int8_t x, int8_t mode)
{
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b084      	sub	sp, #16
 8001c2c:	af00      	add	r7, sp, #0
 8001c2e:	0002      	movs	r2, r0
 8001c30:	1dfb      	adds	r3, r7, #7
 8001c32:	701a      	strb	r2, [r3, #0]
 8001c34:	1dbb      	adds	r3, r7, #6
 8001c36:	1c0a      	adds	r2, r1, #0
 8001c38:	701a      	strb	r2, [r3, #0]
	uint8_t data[5];
	data[0] = '@';
 8001c3a:	2108      	movs	r1, #8
 8001c3c:	187b      	adds	r3, r7, r1
 8001c3e:	2240      	movs	r2, #64	; 0x40
 8001c40:	701a      	strb	r2, [r3, #0]
	data[4] = '#';
 8001c42:	187b      	adds	r3, r7, r1
 8001c44:	2223      	movs	r2, #35	; 0x23
 8001c46:	711a      	strb	r2, [r3, #4]
	switch (mode)
 8001c48:	1dbb      	adds	r3, r7, #6
 8001c4a:	781b      	ldrb	r3, [r3, #0]
 8001c4c:	b25b      	sxtb	r3, r3
 8001c4e:	2b0b      	cmp	r3, #11
 8001c50:	d900      	bls.n	8001c54 <send_cmd+0x2c>
 8001c52:	e13e      	b.n	8001ed2 <send_cmd+0x2aa>
 8001c54:	009a      	lsls	r2, r3, #2
 8001c56:	4ba1      	ldr	r3, [pc, #644]	; (8001edc <send_cmd+0x2b4>)
 8001c58:	18d3      	adds	r3, r2, r3
 8001c5a:	681b      	ldr	r3, [r3, #0]
 8001c5c:	469f      	mov	pc, r3
	{
	case intensity:
		data[1] = 'I';
 8001c5e:	2108      	movs	r1, #8
 8001c60:	187b      	adds	r3, r7, r1
 8001c62:	2249      	movs	r2, #73	; 0x49
 8001c64:	705a      	strb	r2, [r3, #1]
		data[2] = '0';
 8001c66:	187b      	adds	r3, r7, r1
 8001c68:	2230      	movs	r2, #48	; 0x30
 8001c6a:	709a      	strb	r2, [r3, #2]
		if (x == 10)
 8001c6c:	1dfb      	adds	r3, r7, #7
 8001c6e:	781b      	ldrb	r3, [r3, #0]
 8001c70:	b25b      	sxtb	r3, r3
 8001c72:	2b0a      	cmp	r3, #10
 8001c74:	d109      	bne.n	8001c8a <send_cmd+0x62>
		{
			data[3] = ':'; //@I0:#
 8001c76:	187b      	adds	r3, r7, r1
 8001c78:	223a      	movs	r2, #58	; 0x3a
 8001c7a:	70da      	strb	r2, [r3, #3]
			HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001c7c:	1879      	adds	r1, r7, r1
 8001c7e:	4898      	ldr	r0, [pc, #608]	; (8001ee0 <send_cmd+0x2b8>)
 8001c80:	2364      	movs	r3, #100	; 0x64
 8001c82:	2205      	movs	r2, #5
 8001c84:	f003 fc7e 	bl	8005584 <HAL_UART_Transmit>
		else
		{
			data[3] = 48 + x;
			HAL_UART_Transmit(&huart1, &data[0], 5, 100);
		}
		break;
 8001c88:	e123      	b.n	8001ed2 <send_cmd+0x2aa>
			data[3] = 48 + x;
 8001c8a:	1dfb      	adds	r3, r7, #7
 8001c8c:	781b      	ldrb	r3, [r3, #0]
 8001c8e:	3330      	adds	r3, #48	; 0x30
 8001c90:	b2da      	uxtb	r2, r3
 8001c92:	2108      	movs	r1, #8
 8001c94:	187b      	adds	r3, r7, r1
 8001c96:	70da      	strb	r2, [r3, #3]
			HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001c98:	1879      	adds	r1, r7, r1
 8001c9a:	4891      	ldr	r0, [pc, #580]	; (8001ee0 <send_cmd+0x2b8>)
 8001c9c:	2364      	movs	r3, #100	; 0x64
 8001c9e:	2205      	movs	r2, #5
 8001ca0:	f003 fc70 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001ca4:	e115      	b.n	8001ed2 <send_cmd+0x2aa>
	case color:
		if (x > 0)
 8001ca6:	1dfb      	adds	r3, r7, #7
 8001ca8:	781b      	ldrb	r3, [r3, #0]
 8001caa:	b25b      	sxtb	r3, r3
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	dd0d      	ble.n	8001ccc <send_cmd+0xa4>
		{
			data[1] = 'C'; //@c-0#
 8001cb0:	2108      	movs	r1, #8
 8001cb2:	187b      	adds	r3, r7, r1
 8001cb4:	2243      	movs	r2, #67	; 0x43
 8001cb6:	705a      	strb	r2, [r3, #1]
			data[2] = '+';
 8001cb8:	187b      	adds	r3, r7, r1
 8001cba:	222b      	movs	r2, #43	; 0x2b
 8001cbc:	709a      	strb	r2, [r3, #2]
			data[3] = 48 + x;
 8001cbe:	1dfb      	adds	r3, r7, #7
 8001cc0:	781b      	ldrb	r3, [r3, #0]
 8001cc2:	3330      	adds	r3, #48	; 0x30
 8001cc4:	b2da      	uxtb	r2, r3
 8001cc6:	187b      	adds	r3, r7, r1
 8001cc8:	70da      	strb	r2, [r3, #3]
 8001cca:	e01c      	b.n	8001d06 <send_cmd+0xde>
		}
		else if (x < 0)
 8001ccc:	1dfb      	adds	r3, r7, #7
 8001cce:	781b      	ldrb	r3, [r3, #0]
 8001cd0:	2b7f      	cmp	r3, #127	; 0x7f
 8001cd2:	d90e      	bls.n	8001cf2 <send_cmd+0xca>
		{
			data[1] = 'C';
 8001cd4:	2108      	movs	r1, #8
 8001cd6:	187b      	adds	r3, r7, r1
 8001cd8:	2243      	movs	r2, #67	; 0x43
 8001cda:	705a      	strb	r2, [r3, #1]
			data[2] = '-';
 8001cdc:	187b      	adds	r3, r7, r1
 8001cde:	222d      	movs	r2, #45	; 0x2d
 8001ce0:	709a      	strb	r2, [r3, #2]
			data[3] = (48 + (x) * (-1));
 8001ce2:	1dfb      	adds	r3, r7, #7
 8001ce4:	781b      	ldrb	r3, [r3, #0]
 8001ce6:	2230      	movs	r2, #48	; 0x30
 8001ce8:	1ad3      	subs	r3, r2, r3
 8001cea:	b2da      	uxtb	r2, r3
 8001cec:	187b      	adds	r3, r7, r1
 8001cee:	70da      	strb	r2, [r3, #3]
 8001cf0:	e009      	b.n	8001d06 <send_cmd+0xde>
		}
		else
		{
			data[1] = 'C';
 8001cf2:	2108      	movs	r1, #8
 8001cf4:	187b      	adds	r3, r7, r1
 8001cf6:	2243      	movs	r2, #67	; 0x43
 8001cf8:	705a      	strb	r2, [r3, #1]
			data[2] = '-'; //@c-0#
 8001cfa:	187b      	adds	r3, r7, r1
 8001cfc:	222d      	movs	r2, #45	; 0x2d
 8001cfe:	709a      	strb	r2, [r3, #2]
			data[3] = '0';
 8001d00:	187b      	adds	r3, r7, r1
 8001d02:	2230      	movs	r2, #48	; 0x30
 8001d04:	70da      	strb	r2, [r3, #3]
		}
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001d06:	2308      	movs	r3, #8
 8001d08:	18f9      	adds	r1, r7, r3
 8001d0a:	4875      	ldr	r0, [pc, #468]	; (8001ee0 <send_cmd+0x2b8>)
 8001d0c:	2364      	movs	r3, #100	; 0x64
 8001d0e:	2205      	movs	r2, #5
 8001d10:	f003 fc38 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001d14:	e0dd      	b.n	8001ed2 <send_cmd+0x2aa>
		// data[1] = 'I';data[2] = '0';data[3] = 48+x;
		// HAL_UART_Transmit(&huart1, &data[0], 5, 100);
		break;

	case lamp:
		data[1] = 'L'; //@L_1#
 8001d16:	2108      	movs	r1, #8
 8001d18:	187b      	adds	r3, r7, r1
 8001d1a:	224c      	movs	r2, #76	; 0x4c
 8001d1c:	705a      	strb	r2, [r3, #1]
		data[2] = '_';
 8001d1e:	187b      	adds	r3, r7, r1
 8001d20:	225f      	movs	r2, #95	; 0x5f
 8001d22:	709a      	strb	r2, [r3, #2]
		data[3] = 48 + x;
 8001d24:	1dfb      	adds	r3, r7, #7
 8001d26:	781b      	ldrb	r3, [r3, #0]
 8001d28:	3330      	adds	r3, #48	; 0x30
 8001d2a:	b2da      	uxtb	r2, r3
 8001d2c:	187b      	adds	r3, r7, r1
 8001d2e:	70da      	strb	r2, [r3, #3]
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001d30:	1879      	adds	r1, r7, r1
 8001d32:	486b      	ldr	r0, [pc, #428]	; (8001ee0 <send_cmd+0x2b8>)
 8001d34:	2364      	movs	r3, #100	; 0x64
 8001d36:	2205      	movs	r2, #5
 8001d38:	f003 fc24 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001d3c:	e0c9      	b.n	8001ed2 <send_cmd+0x2aa>
	case endo:
		data[1] = 'E';
 8001d3e:	2108      	movs	r1, #8
 8001d40:	187b      	adds	r3, r7, r1
 8001d42:	2245      	movs	r2, #69	; 0x45
 8001d44:	705a      	strb	r2, [r3, #1]
		data[2] = '_';
 8001d46:	187b      	adds	r3, r7, r1
 8001d48:	225f      	movs	r2, #95	; 0x5f
 8001d4a:	709a      	strb	r2, [r3, #2]
		data[3] = 48 + x;
 8001d4c:	1dfb      	adds	r3, r7, #7
 8001d4e:	781b      	ldrb	r3, [r3, #0]
 8001d50:	3330      	adds	r3, #48	; 0x30
 8001d52:	b2da      	uxtb	r2, r3
 8001d54:	187b      	adds	r3, r7, r1
 8001d56:	70da      	strb	r2, [r3, #3]
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001d58:	1879      	adds	r1, r7, r1
 8001d5a:	4861      	ldr	r0, [pc, #388]	; (8001ee0 <send_cmd+0x2b8>)
 8001d5c:	2364      	movs	r3, #100	; 0x64
 8001d5e:	2205      	movs	r2, #5
 8001d60:	f003 fc10 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001d64:	e0b5      	b.n	8001ed2 <send_cmd+0x2aa>
	case depth:
		data[1] = 'D';
 8001d66:	2108      	movs	r1, #8
 8001d68:	187b      	adds	r3, r7, r1
 8001d6a:	2244      	movs	r2, #68	; 0x44
 8001d6c:	705a      	strb	r2, [r3, #1]
		data[2] = '_';
 8001d6e:	187b      	adds	r3, r7, r1
 8001d70:	225f      	movs	r2, #95	; 0x5f
 8001d72:	709a      	strb	r2, [r3, #2]
		data[3] = 48 + x;
 8001d74:	1dfb      	adds	r3, r7, #7
 8001d76:	781b      	ldrb	r3, [r3, #0]
 8001d78:	3330      	adds	r3, #48	; 0x30
 8001d7a:	b2da      	uxtb	r2, r3
 8001d7c:	187b      	adds	r3, r7, r1
 8001d7e:	70da      	strb	r2, [r3, #3]
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001d80:	1879      	adds	r1, r7, r1
 8001d82:	4857      	ldr	r0, [pc, #348]	; (8001ee0 <send_cmd+0x2b8>)
 8001d84:	2364      	movs	r3, #100	; 0x64
 8001d86:	2205      	movs	r2, #5
 8001d88:	f003 fbfc 	bl	8005584 <HAL_UART_Transmit>

		break;
 8001d8c:	e0a1      	b.n	8001ed2 <send_cmd+0x2aa>
	case 8:

		if (x == 1)
 8001d8e:	1dfb      	adds	r3, r7, #7
 8001d90:	781b      	ldrb	r3, [r3, #0]
 8001d92:	b25b      	sxtb	r3, r3
 8001d94:	2b01      	cmp	r3, #1
 8001d96:	d10a      	bne.n	8001dae <send_cmd+0x186>
		{
			data[1] = 'F';
 8001d98:	2108      	movs	r1, #8
 8001d9a:	187b      	adds	r3, r7, r1
 8001d9c:	2246      	movs	r2, #70	; 0x46
 8001d9e:	705a      	strb	r2, [r3, #1]
			data[2] = '_';
 8001da0:	187b      	adds	r3, r7, r1
 8001da2:	225f      	movs	r2, #95	; 0x5f
 8001da4:	709a      	strb	r2, [r3, #2]
			data[3] = 48 + 1;
 8001da6:	187b      	adds	r3, r7, r1
 8001da8:	2231      	movs	r2, #49	; 0x31
 8001daa:	70da      	strb	r2, [r3, #3]
 8001dac:	e00e      	b.n	8001dcc <send_cmd+0x1a4>
		}
		else if (x == 0)
 8001dae:	1dfb      	adds	r3, r7, #7
 8001db0:	781b      	ldrb	r3, [r3, #0]
 8001db2:	b25b      	sxtb	r3, r3
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d109      	bne.n	8001dcc <send_cmd+0x1a4>
		{
			data[1] = 'R';
 8001db8:	2108      	movs	r1, #8
 8001dba:	187b      	adds	r3, r7, r1
 8001dbc:	2252      	movs	r2, #82	; 0x52
 8001dbe:	705a      	strb	r2, [r3, #1]
			data[2] = 'E';
 8001dc0:	187b      	adds	r3, r7, r1
 8001dc2:	2245      	movs	r2, #69	; 0x45
 8001dc4:	709a      	strb	r2, [r3, #2]
			data[3] = 'S';
 8001dc6:	187b      	adds	r3, r7, r1
 8001dc8:	2253      	movs	r2, #83	; 0x53
 8001dca:	70da      	strb	r2, [r3, #3]
		}

		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001dcc:	2308      	movs	r3, #8
 8001dce:	18f9      	adds	r1, r7, r3
 8001dd0:	4843      	ldr	r0, [pc, #268]	; (8001ee0 <send_cmd+0x2b8>)
 8001dd2:	2364      	movs	r3, #100	; 0x64
 8001dd4:	2205      	movs	r2, #5
 8001dd6:	f003 fbd5 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001dda:	e07a      	b.n	8001ed2 <send_cmd+0x2aa>
	case 9:
		if (x == 1)
 8001ddc:	1dfb      	adds	r3, r7, #7
 8001dde:	781b      	ldrb	r3, [r3, #0]
 8001de0:	b25b      	sxtb	r3, r3
 8001de2:	2b01      	cmp	r3, #1
 8001de4:	d10a      	bne.n	8001dfc <send_cmd+0x1d4>
		{
			data[1] = 'F';
 8001de6:	2108      	movs	r1, #8
 8001de8:	187b      	adds	r3, r7, r1
 8001dea:	2246      	movs	r2, #70	; 0x46
 8001dec:	705a      	strb	r2, [r3, #1]
			data[2] = '_';
 8001dee:	187b      	adds	r3, r7, r1
 8001df0:	225f      	movs	r2, #95	; 0x5f
 8001df2:	709a      	strb	r2, [r3, #2]
			data[3] = 48 + 2;
 8001df4:	187b      	adds	r3, r7, r1
 8001df6:	2232      	movs	r2, #50	; 0x32
 8001df8:	70da      	strb	r2, [r3, #3]
 8001dfa:	e00e      	b.n	8001e1a <send_cmd+0x1f2>
		}
		else if (x == 0)
 8001dfc:	1dfb      	adds	r3, r7, #7
 8001dfe:	781b      	ldrb	r3, [r3, #0]
 8001e00:	b25b      	sxtb	r3, r3
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d109      	bne.n	8001e1a <send_cmd+0x1f2>
		{
			data[1] = 'R';
 8001e06:	2108      	movs	r1, #8
 8001e08:	187b      	adds	r3, r7, r1
 8001e0a:	2252      	movs	r2, #82	; 0x52
 8001e0c:	705a      	strb	r2, [r3, #1]
			data[2] = 'E';
 8001e0e:	187b      	adds	r3, r7, r1
 8001e10:	2245      	movs	r2, #69	; 0x45
 8001e12:	709a      	strb	r2, [r3, #2]
			data[3] = 'S';
 8001e14:	187b      	adds	r3, r7, r1
 8001e16:	2253      	movs	r2, #83	; 0x53
 8001e18:	70da      	strb	r2, [r3, #3]
		}
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001e1a:	2308      	movs	r3, #8
 8001e1c:	18f9      	adds	r1, r7, r3
 8001e1e:	4830      	ldr	r0, [pc, #192]	; (8001ee0 <send_cmd+0x2b8>)
 8001e20:	2364      	movs	r3, #100	; 0x64
 8001e22:	2205      	movs	r2, #5
 8001e24:	f003 fbae 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001e28:	e053      	b.n	8001ed2 <send_cmd+0x2aa>
	case 10:
		if (x == 1)
 8001e2a:	1dfb      	adds	r3, r7, #7
 8001e2c:	781b      	ldrb	r3, [r3, #0]
 8001e2e:	b25b      	sxtb	r3, r3
 8001e30:	2b01      	cmp	r3, #1
 8001e32:	d10a      	bne.n	8001e4a <send_cmd+0x222>
		{
			data[1] = 'F';
 8001e34:	2108      	movs	r1, #8
 8001e36:	187b      	adds	r3, r7, r1
 8001e38:	2246      	movs	r2, #70	; 0x46
 8001e3a:	705a      	strb	r2, [r3, #1]
			data[2] = '_';
 8001e3c:	187b      	adds	r3, r7, r1
 8001e3e:	225f      	movs	r2, #95	; 0x5f
 8001e40:	709a      	strb	r2, [r3, #2]
			data[3] = 48 + 3;
 8001e42:	187b      	adds	r3, r7, r1
 8001e44:	2233      	movs	r2, #51	; 0x33
 8001e46:	70da      	strb	r2, [r3, #3]
 8001e48:	e00e      	b.n	8001e68 <send_cmd+0x240>
		}
		else if (x == 0)
 8001e4a:	1dfb      	adds	r3, r7, #7
 8001e4c:	781b      	ldrb	r3, [r3, #0]
 8001e4e:	b25b      	sxtb	r3, r3
 8001e50:	2b00      	cmp	r3, #0
 8001e52:	d109      	bne.n	8001e68 <send_cmd+0x240>
		{
			data[1] = 'R';
 8001e54:	2108      	movs	r1, #8
 8001e56:	187b      	adds	r3, r7, r1
 8001e58:	2252      	movs	r2, #82	; 0x52
 8001e5a:	705a      	strb	r2, [r3, #1]
			data[2] = 'E';
 8001e5c:	187b      	adds	r3, r7, r1
 8001e5e:	2245      	movs	r2, #69	; 0x45
 8001e60:	709a      	strb	r2, [r3, #2]
			data[3] = 'S';
 8001e62:	187b      	adds	r3, r7, r1
 8001e64:	2253      	movs	r2, #83	; 0x53
 8001e66:	70da      	strb	r2, [r3, #3]
		}
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001e68:	2308      	movs	r3, #8
 8001e6a:	18f9      	adds	r1, r7, r3
 8001e6c:	481c      	ldr	r0, [pc, #112]	; (8001ee0 <send_cmd+0x2b8>)
 8001e6e:	2364      	movs	r3, #100	; 0x64
 8001e70:	2205      	movs	r2, #5
 8001e72:	f003 fb87 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001e76:	e02c      	b.n	8001ed2 <send_cmd+0x2aa>
	case 11:
		if (x == 0)
 8001e78:	1dfb      	adds	r3, r7, #7
 8001e7a:	781b      	ldrb	r3, [r3, #0]
 8001e7c:	b25b      	sxtb	r3, r3
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d10a      	bne.n	8001e98 <send_cmd+0x270>
		{
			data[1] = 'F';
 8001e82:	2108      	movs	r1, #8
 8001e84:	187b      	adds	r3, r7, r1
 8001e86:	2246      	movs	r2, #70	; 0x46
 8001e88:	705a      	strb	r2, [r3, #1]
			data[2] = '_';
 8001e8a:	187b      	adds	r3, r7, r1
 8001e8c:	225f      	movs	r2, #95	; 0x5f
 8001e8e:	709a      	strb	r2, [r3, #2]
			data[3] = 48 + 5;
 8001e90:	187b      	adds	r3, r7, r1
 8001e92:	2235      	movs	r2, #53	; 0x35
 8001e94:	70da      	strb	r2, [r3, #3]
 8001e96:	e013      	b.n	8001ec0 <send_cmd+0x298>
		}
		else if (x == 1)
 8001e98:	1dfb      	adds	r3, r7, #7
 8001e9a:	781b      	ldrb	r3, [r3, #0]
 8001e9c:	b25b      	sxtb	r3, r3
 8001e9e:	2b01      	cmp	r3, #1
 8001ea0:	d10e      	bne.n	8001ec0 <send_cmd+0x298>
		{
			data[1] = 'I';
 8001ea2:	2108      	movs	r1, #8
 8001ea4:	187b      	adds	r3, r7, r1
 8001ea6:	2249      	movs	r2, #73	; 0x49
 8001ea8:	705a      	strb	r2, [r3, #1]
			data[2] = '_';
 8001eaa:	187b      	adds	r3, r7, r1
 8001eac:	225f      	movs	r2, #95	; 0x5f
 8001eae:	709a      	strb	r2, [r3, #2]
			data[3] = 48 + last_focus;
 8001eb0:	4b0c      	ldr	r3, [pc, #48]	; (8001ee4 <send_cmd+0x2bc>)
 8001eb2:	781b      	ldrb	r3, [r3, #0]
 8001eb4:	b25b      	sxtb	r3, r3
 8001eb6:	b2db      	uxtb	r3, r3
 8001eb8:	3330      	adds	r3, #48	; 0x30
 8001eba:	b2da      	uxtb	r2, r3
 8001ebc:	187b      	adds	r3, r7, r1
 8001ebe:	70da      	strb	r2, [r3, #3]
		}
		//		data[1] = 'F';
		//		data[2] = '_';
		//		data[3] = 48 + 4;
		HAL_UART_Transmit(&huart1, &data[0], 5, 100);
 8001ec0:	2308      	movs	r3, #8
 8001ec2:	18f9      	adds	r1, r7, r3
 8001ec4:	4806      	ldr	r0, [pc, #24]	; (8001ee0 <send_cmd+0x2b8>)
 8001ec6:	2364      	movs	r3, #100	; 0x64
 8001ec8:	2205      	movs	r2, #5
 8001eca:	f003 fb5b 	bl	8005584 <HAL_UART_Transmit>
		break;
 8001ece:	e000      	b.n	8001ed2 <send_cmd+0x2aa>
		break;
 8001ed0:	46c0      	nop			; (mov r8, r8)
	}
}
 8001ed2:	46c0      	nop			; (mov r8, r8)
 8001ed4:	46bd      	mov	sp, r7
 8001ed6:	b004      	add	sp, #16
 8001ed8:	bd80      	pop	{r7, pc}
 8001eda:	46c0      	nop			; (mov r8, r8)
 8001edc:	080074e4 	.word	0x080074e4
 8001ee0:	20000198 	.word	0x20000198
 8001ee4:	200000b1 	.word	0x200000b1

08001ee8 <page1_print>:

void page1_print(void)
{
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b082      	sub	sp, #8
 8001eec:	af00      	add	r7, sp, #0
	char buffer[3];
	lcd_puts(0, 0, (int8_t *)"______ COGNATE _____");
 8001eee:	4b5f      	ldr	r3, [pc, #380]	; (800206c <page1_print+0x184>)
 8001ef0:	001a      	movs	r2, r3
 8001ef2:	2100      	movs	r1, #0
 8001ef4:	2000      	movs	r0, #0
 8001ef6:	f7fe fd6b 	bl	80009d0 <lcd_puts>
	lcd_puts(1, 1, (int8_t *)"INTEN");
 8001efa:	4b5d      	ldr	r3, [pc, #372]	; (8002070 <page1_print+0x188>)
 8001efc:	001a      	movs	r2, r3
 8001efe:	2101      	movs	r1, #1
 8001f00:	2001      	movs	r0, #1
 8001f02:	f7fe fd65 	bl	80009d0 <lcd_puts>
	lcd_puts(2, 1, (int8_t *)"COLOR");
 8001f06:	4b5b      	ldr	r3, [pc, #364]	; (8002074 <page1_print+0x18c>)
 8001f08:	001a      	movs	r2, r3
 8001f0a:	2101      	movs	r1, #1
 8001f0c:	2002      	movs	r0, #2
 8001f0e:	f7fe fd5f 	bl	80009d0 <lcd_puts>
	lcd_puts(3, 1, (int8_t *)"SENSR");
 8001f12:	4b59      	ldr	r3, [pc, #356]	; (8002078 <page1_print+0x190>)
 8001f14:	001a      	movs	r2, r3
 8001f16:	2101      	movs	r1, #1
 8001f18:	2003      	movs	r0, #3
 8001f1a:	f7fe fd59 	bl	80009d0 <lcd_puts>
	lcd_puts(1, 11, (int8_t *)"LAMP");
 8001f1e:	4b57      	ldr	r3, [pc, #348]	; (800207c <page1_print+0x194>)
 8001f20:	001a      	movs	r2, r3
 8001f22:	210b      	movs	r1, #11
 8001f24:	2001      	movs	r0, #1
 8001f26:	f7fe fd53 	bl	80009d0 <lcd_puts>
	lcd_puts(2, 11, (int8_t *)"ENDO");
 8001f2a:	4b55      	ldr	r3, [pc, #340]	; (8002080 <page1_print+0x198>)
 8001f2c:	001a      	movs	r2, r3
 8001f2e:	210b      	movs	r1, #11
 8001f30:	2002      	movs	r0, #2
 8001f32:	f7fe fd4d 	bl	80009d0 <lcd_puts>
	lcd_puts(3, 11, (int8_t *)"DEPTH");
 8001f36:	4b53      	ldr	r3, [pc, #332]	; (8002084 <page1_print+0x19c>)
 8001f38:	001a      	movs	r2, r3
 8001f3a:	210b      	movs	r1, #11
 8001f3c:	2003      	movs	r0, #3
 8001f3e:	f7fe fd47 	bl	80009d0 <lcd_puts>

	//	lcd_puts(1, 0, (int8_t *)">");

	sprintf(buffer, "%02d", data_reg.intensity);
 8001f42:	4b51      	ldr	r3, [pc, #324]	; (8002088 <page1_print+0x1a0>)
 8001f44:	781b      	ldrb	r3, [r3, #0]
 8001f46:	071b      	lsls	r3, r3, #28
 8001f48:	0f1b      	lsrs	r3, r3, #28
 8001f4a:	b2db      	uxtb	r3, r3
 8001f4c:	001a      	movs	r2, r3
 8001f4e:	494f      	ldr	r1, [pc, #316]	; (800208c <page1_print+0x1a4>)
 8001f50:	1d3b      	adds	r3, r7, #4
 8001f52:	0018      	movs	r0, r3
 8001f54:	f004 fd0c 	bl	8006970 <siprintf>
	lcd_puts(1, 7, (int8_t *)buffer);
 8001f58:	1d3b      	adds	r3, r7, #4
 8001f5a:	001a      	movs	r2, r3
 8001f5c:	2107      	movs	r1, #7
 8001f5e:	2001      	movs	r0, #1
 8001f60:	f7fe fd36 	bl	80009d0 <lcd_puts>

	//	sprintf(buffer, "%02d", data_reg.color);
	if (data_reg.color == 1)
 8001f64:	4b48      	ldr	r3, [pc, #288]	; (8002088 <page1_print+0x1a0>)
 8001f66:	785b      	ldrb	r3, [r3, #1]
 8001f68:	b25b      	sxtb	r3, r3
 8001f6a:	2b01      	cmp	r3, #1
 8001f6c:	d106      	bne.n	8001f7c <page1_print+0x94>
	{
		lcd_puts(2, 7, (int8_t *)"CW");
 8001f6e:	4b48      	ldr	r3, [pc, #288]	; (8002090 <page1_print+0x1a8>)
 8001f70:	001a      	movs	r2, r3
 8001f72:	2107      	movs	r1, #7
 8001f74:	2002      	movs	r0, #2
 8001f76:	f7fe fd2b 	bl	80009d0 <lcd_puts>
 8001f7a:	e011      	b.n	8001fa0 <page1_print+0xb8>
	}
	else if (data_reg.color == -1)
 8001f7c:	4b42      	ldr	r3, [pc, #264]	; (8002088 <page1_print+0x1a0>)
 8001f7e:	785b      	ldrb	r3, [r3, #1]
 8001f80:	b25b      	sxtb	r3, r3
 8001f82:	3301      	adds	r3, #1
 8001f84:	d106      	bne.n	8001f94 <page1_print+0xac>
	{
		lcd_puts(2, 7, (int8_t *)"WW");
 8001f86:	4b43      	ldr	r3, [pc, #268]	; (8002094 <page1_print+0x1ac>)
 8001f88:	001a      	movs	r2, r3
 8001f8a:	2107      	movs	r1, #7
 8001f8c:	2002      	movs	r0, #2
 8001f8e:	f7fe fd1f 	bl	80009d0 <lcd_puts>
 8001f92:	e005      	b.n	8001fa0 <page1_print+0xb8>
	}

	else
	{
		lcd_puts(2, 7, (int8_t *)"NW");
 8001f94:	4b40      	ldr	r3, [pc, #256]	; (8002098 <page1_print+0x1b0>)
 8001f96:	001a      	movs	r2, r3
 8001f98:	2107      	movs	r1, #7
 8001f9a:	2002      	movs	r0, #2
 8001f9c:	f7fe fd18 	bl	80009d0 <lcd_puts>
	}

	//	lcd_puts(2, 7, (int8_t *)"NW");

	clr_data(sensor);
 8001fa0:	2003      	movs	r0, #3
 8001fa2:	f7fe fd67 	bl	8000a74 <clr_data>

	if (data_reg.sensor)
 8001fa6:	4b38      	ldr	r3, [pc, #224]	; (8002088 <page1_print+0x1a0>)
 8001fa8:	781b      	ldrb	r3, [r3, #0]
 8001faa:	2210      	movs	r2, #16
 8001fac:	4013      	ands	r3, r2
 8001fae:	b2db      	uxtb	r3, r3
 8001fb0:	2b00      	cmp	r3, #0
 8001fb2:	d006      	beq.n	8001fc2 <page1_print+0xda>
		lcd_puts(3, 7, (int8_t *)"ON");
 8001fb4:	4b39      	ldr	r3, [pc, #228]	; (800209c <page1_print+0x1b4>)
 8001fb6:	001a      	movs	r2, r3
 8001fb8:	2107      	movs	r1, #7
 8001fba:	2003      	movs	r0, #3
 8001fbc:	f7fe fd08 	bl	80009d0 <lcd_puts>
 8001fc0:	e005      	b.n	8001fce <page1_print+0xe6>
	else
		lcd_puts(3, 7, (int8_t *)"OFF");
 8001fc2:	4b37      	ldr	r3, [pc, #220]	; (80020a0 <page1_print+0x1b8>)
 8001fc4:	001a      	movs	r2, r3
 8001fc6:	2107      	movs	r1, #7
 8001fc8:	2003      	movs	r0, #3
 8001fca:	f7fe fd01 	bl	80009d0 <lcd_puts>

	clr_data(lamp);
 8001fce:	2004      	movs	r0, #4
 8001fd0:	f7fe fd50 	bl	8000a74 <clr_data>
	if (data_reg.lamp)
 8001fd4:	4b2c      	ldr	r3, [pc, #176]	; (8002088 <page1_print+0x1a0>)
 8001fd6:	781b      	ldrb	r3, [r3, #0]
 8001fd8:	2220      	movs	r2, #32
 8001fda:	4013      	ands	r3, r2
 8001fdc:	b2db      	uxtb	r3, r3
 8001fde:	2b00      	cmp	r3, #0
 8001fe0:	d006      	beq.n	8001ff0 <page1_print+0x108>
		lcd_puts(1, 17, (int8_t *)"ON");
 8001fe2:	4b2e      	ldr	r3, [pc, #184]	; (800209c <page1_print+0x1b4>)
 8001fe4:	001a      	movs	r2, r3
 8001fe6:	2111      	movs	r1, #17
 8001fe8:	2001      	movs	r0, #1
 8001fea:	f7fe fcf1 	bl	80009d0 <lcd_puts>
 8001fee:	e005      	b.n	8001ffc <page1_print+0x114>
	else
		lcd_puts(1, 17, (int8_t *)"OFF");
 8001ff0:	4b2b      	ldr	r3, [pc, #172]	; (80020a0 <page1_print+0x1b8>)
 8001ff2:	001a      	movs	r2, r3
 8001ff4:	2111      	movs	r1, #17
 8001ff6:	2001      	movs	r0, #1
 8001ff8:	f7fe fcea 	bl	80009d0 <lcd_puts>

	clr_data(endo);
 8001ffc:	2005      	movs	r0, #5
 8001ffe:	f7fe fd39 	bl	8000a74 <clr_data>
	if (data_reg.endo)
 8002002:	4b21      	ldr	r3, [pc, #132]	; (8002088 <page1_print+0x1a0>)
 8002004:	781b      	ldrb	r3, [r3, #0]
 8002006:	2240      	movs	r2, #64	; 0x40
 8002008:	4013      	ands	r3, r2
 800200a:	b2db      	uxtb	r3, r3
 800200c:	2b00      	cmp	r3, #0
 800200e:	d006      	beq.n	800201e <page1_print+0x136>
		lcd_puts(2, 17, (int8_t *)"ON");
 8002010:	4b22      	ldr	r3, [pc, #136]	; (800209c <page1_print+0x1b4>)
 8002012:	001a      	movs	r2, r3
 8002014:	2111      	movs	r1, #17
 8002016:	2002      	movs	r0, #2
 8002018:	f7fe fcda 	bl	80009d0 <lcd_puts>
 800201c:	e005      	b.n	800202a <page1_print+0x142>
	else
		lcd_puts(2, 17, (int8_t *)"OFF");
 800201e:	4b20      	ldr	r3, [pc, #128]	; (80020a0 <page1_print+0x1b8>)
 8002020:	001a      	movs	r2, r3
 8002022:	2111      	movs	r1, #17
 8002024:	2002      	movs	r0, #2
 8002026:	f7fe fcd3 	bl	80009d0 <lcd_puts>

	clr_data(depth);
 800202a:	2006      	movs	r0, #6
 800202c:	f7fe fd22 	bl	8000a74 <clr_data>
	if (data_reg.depth)
 8002030:	4b15      	ldr	r3, [pc, #84]	; (8002088 <page1_print+0x1a0>)
 8002032:	781b      	ldrb	r3, [r3, #0]
 8002034:	227f      	movs	r2, #127	; 0x7f
 8002036:	4393      	bics	r3, r2
 8002038:	b2db      	uxtb	r3, r3
 800203a:	2b00      	cmp	r3, #0
 800203c:	d006      	beq.n	800204c <page1_print+0x164>
		lcd_puts(3, 17, (int8_t *)"ON");
 800203e:	4b17      	ldr	r3, [pc, #92]	; (800209c <page1_print+0x1b4>)
 8002040:	001a      	movs	r2, r3
 8002042:	2111      	movs	r1, #17
 8002044:	2003      	movs	r0, #3
 8002046:	f7fe fcc3 	bl	80009d0 <lcd_puts>
 800204a:	e005      	b.n	8002058 <page1_print+0x170>
	else
		lcd_puts(3, 17, (int8_t *)"OFF");
 800204c:	4b14      	ldr	r3, [pc, #80]	; (80020a0 <page1_print+0x1b8>)
 800204e:	001a      	movs	r2, r3
 8002050:	2111      	movs	r1, #17
 8002052:	2003      	movs	r0, #3
 8002054:	f7fe fcbc 	bl	80009d0 <lcd_puts>

	lcd_puts(1, 0, (int8_t *)">");
 8002058:	4b12      	ldr	r3, [pc, #72]	; (80020a4 <page1_print+0x1bc>)
 800205a:	001a      	movs	r2, r3
 800205c:	2100      	movs	r1, #0
 800205e:	2001      	movs	r0, #1
 8002060:	f7fe fcb6 	bl	80009d0 <lcd_puts>
}
 8002064:	46c0      	nop			; (mov r8, r8)
 8002066:	46bd      	mov	sp, r7
 8002068:	b002      	add	sp, #8
 800206a:	bd80      	pop	{r7, pc}
 800206c:	080073fc 	.word	0x080073fc
 8002070:	08007414 	.word	0x08007414
 8002074:	0800741c 	.word	0x0800741c
 8002078:	08007424 	.word	0x08007424
 800207c:	0800742c 	.word	0x0800742c
 8002080:	08007434 	.word	0x08007434
 8002084:	0800743c 	.word	0x0800743c
 8002088:	20000008 	.word	0x20000008
 800208c:	08007390 	.word	0x08007390
 8002090:	080073f0 	.word	0x080073f0
 8002094:	080073f4 	.word	0x080073f4
 8002098:	080073f8 	.word	0x080073f8
 800209c:	08007398 	.word	0x08007398
 80020a0:	0800739c 	.word	0x0800739c
 80020a4:	080073a0 	.word	0x080073a0

080020a8 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80020a8:	b580      	push	{r7, lr}
 80020aa:	b082      	sub	sp, #8
 80020ac:	af00      	add	r7, sp, #0
 80020ae:	0002      	movs	r2, r0
 80020b0:	1dbb      	adds	r3, r7, #6
 80020b2:	801a      	strh	r2, [r3, #0]

	static uint32_t _time;

	if ((HAL_GetTick() - _time) >= 100)
 80020b4:	f001 f886 	bl	80031c4 <HAL_GetTick>
 80020b8:	0002      	movs	r2, r0
 80020ba:	4b08      	ldr	r3, [pc, #32]	; (80020dc <HAL_GPIO_EXTI_Callback+0x34>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	1ad3      	subs	r3, r2, r3
 80020c0:	2b63      	cmp	r3, #99	; 0x63
 80020c2:	d905      	bls.n	80020d0 <HAL_GPIO_EXTI_Callback+0x28>
		// {
		// 	//			interrupt_reg.key_flag = 1;
		// 	//			key_pressed.prv =1;
		// }

		_time = HAL_GetTick();
 80020c4:	f001 f87e 	bl	80031c4 <HAL_GetTick>
 80020c8:	0002      	movs	r2, r0
 80020ca:	4b04      	ldr	r3, [pc, #16]	; (80020dc <HAL_GPIO_EXTI_Callback+0x34>)
 80020cc:	601a      	str	r2, [r3, #0]

	else
	{
		__NOP();
	}
}
 80020ce:	e000      	b.n	80020d2 <HAL_GPIO_EXTI_Callback+0x2a>
		__NOP();
 80020d0:	46c0      	nop			; (mov r8, r8)
}
 80020d2:	46c0      	nop			; (mov r8, r8)
 80020d4:	46bd      	mov	sp, r7
 80020d6:	b002      	add	sp, #8
 80020d8:	bd80      	pop	{r7, pc}
 80020da:	46c0      	nop			; (mov r8, r8)
 80020dc:	20000228 	.word	0x20000228

080020e0 <beep_sound>:

void beep_sound()
{
 80020e0:	b580      	push	{r7, lr}
 80020e2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, 1);
 80020e4:	2390      	movs	r3, #144	; 0x90
 80020e6:	05db      	lsls	r3, r3, #23
 80020e8:	2201      	movs	r2, #1
 80020ea:	2140      	movs	r1, #64	; 0x40
 80020ec:	0018      	movs	r0, r3
 80020ee:	f001 fb80 	bl	80037f2 <HAL_GPIO_WritePin>
	HAL_Delay(35);
 80020f2:	2023      	movs	r0, #35	; 0x23
 80020f4:	f001 f870 	bl	80031d8 <HAL_Delay>
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, 0);
 80020f8:	2390      	movs	r3, #144	; 0x90
 80020fa:	05db      	lsls	r3, r3, #23
 80020fc:	2200      	movs	r2, #0
 80020fe:	2140      	movs	r1, #64	; 0x40
 8002100:	0018      	movs	r0, r3
 8002102:	f001 fb76 	bl	80037f2 <HAL_GPIO_WritePin>
	HAL_Delay(35);
 8002106:	2023      	movs	r0, #35	; 0x23
 8002108:	f001 f866 	bl	80031d8 <HAL_Delay>
	//	beep_sound_flag = 0;
}
 800210c:	46c0      	nop			; (mov r8, r8)
 800210e:	46bd      	mov	sp, r7
 8002110:	bd80      	pop	{r7, pc}
	...

08002114 <main>:
/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void)
{
 8002114:	b590      	push	{r4, r7, lr}
 8002116:	b085      	sub	sp, #20
 8002118:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 800211a:	f000 fff9 	bl	8003110 <HAL_Init>
	/* USER CODE BEGIN Init */

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 800211e:	f000 fc1f 	bl	8002960 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 8002122:	f000 fd3d 	bl	8002ba0 <MX_GPIO_Init>
	MX_TIM6_Init();
 8002126:	f000 fcbf 	bl	8002aa8 <MX_TIM6_Init>
	MX_USART1_UART_Init();
 800212a:	f000 fd09 	bl	8002b40 <MX_USART1_UART_Init>
	MX_TIM14_Init();
 800212e:	f000 fcdf 	bl	8002af0 <MX_TIM14_Init>
	MX_I2C1_Init();
 8002132:	f000 fc79 	bl	8002a28 <MX_I2C1_Init>
	/* USER CODE BEGIN 2 */
	HAL_TIM_Base_Start_IT(&htim6);
 8002136:	4bbe      	ldr	r3, [pc, #760]	; (8002430 <main+0x31c>)
 8002138:	0018      	movs	r0, r3
 800213a:	f002 ff99 	bl	8005070 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim14);
 800213e:	4bbd      	ldr	r3, [pc, #756]	; (8002434 <main+0x320>)
 8002140:	0018      	movs	r0, r3
 8002142:	f002 ff95 	bl	8005070 <HAL_TIM_Base_Start_IT>
	//	HAL_Delay(1000);
	//	home_page();
	//	HAL_Delay(1000);
	//	lcd_clear();

	HAL_Delay(100);
 8002146:	2064      	movs	r0, #100	; 0x64
 8002148:	f001 f846 	bl	80031d8 <HAL_Delay>
	lcd_init();
 800214c:	f7fe fb02 	bl	8000754 <lcd_init>
	HAL_Delay(100);
 8002150:	2064      	movs	r0, #100	; 0x64
 8002152:	f001 f841 	bl	80031d8 <HAL_Delay>
	home_page();
 8002156:	f7fe fe25 	bl	8000da4 <home_page>
	HAL_Delay(100);
 800215a:	2064      	movs	r0, #100	; 0x64
 800215c:	f001 f83c 	bl	80031d8 <HAL_Delay>
	lcd_clear();
 8002160:	f7fe fd92 	bl	8000c88 <lcd_clear>
	page1_print();
 8002164:	f7ff fec0 	bl	8001ee8 <page1_print>
	HAL_Delay(100);
 8002168:	2064      	movs	r0, #100	; 0x64
 800216a:	f001 f835 	bl	80031d8 <HAL_Delay>
	//  	data_reg.sensor = 1;
	init_gesture();
 800216e:	f7fe f861 	bl	8000234 <init_gesture>
	HAL_Delay(100);
 8002172:	2064      	movs	r0, #100	; 0x64
 8002174:	f001 f830 	bl	80031d8 <HAL_Delay>
	uint8_t sns_status = 0;
 8002178:	230d      	movs	r3, #13
 800217a:	18fb      	adds	r3, r7, r3
 800217c:	2200      	movs	r2, #0
 800217e:	701a      	strb	r2, [r3, #0]
	uint8_t page_change_flag = 0;
 8002180:	230f      	movs	r3, #15
 8002182:	18fb      	adds	r3, r7, r3
 8002184:	2200      	movs	r2, #0
 8002186:	701a      	strb	r2, [r3, #0]

	data_reg.sensor = 0;
 8002188:	4bab      	ldr	r3, [pc, #684]	; (8002438 <main+0x324>)
 800218a:	781a      	ldrb	r2, [r3, #0]
 800218c:	2110      	movs	r1, #16
 800218e:	438a      	bics	r2, r1
 8002190:	701a      	strb	r2, [r3, #0]

	uint32_t temp_time = HAL_GetTick();
 8002192:	f001 f817 	bl	80031c4 <HAL_GetTick>
 8002196:	0003      	movs	r3, r0
 8002198:	60bb      	str	r3, [r7, #8]
	HAL_Delay(10);
 800219a:	200a      	movs	r0, #10
 800219c:	f001 f81c 	bl	80031d8 <HAL_Delay>

	pg3_sm = off;
 80021a0:	4ba6      	ldr	r3, [pc, #664]	; (800243c <main+0x328>)
 80021a2:	2200      	movs	r2, #0
 80021a4:	701a      	strb	r2, [r3, #0]
	pg3_md = off;
 80021a6:	4ba6      	ldr	r3, [pc, #664]	; (8002440 <main+0x32c>)
 80021a8:	2200      	movs	r2, #0
 80021aa:	701a      	strb	r2, [r3, #0]
	pg3_wd = off;
 80021ac:	4ba5      	ldr	r3, [pc, #660]	; (8002444 <main+0x330>)
 80021ae:	2200      	movs	r2, #0
 80021b0:	701a      	strb	r2, [r3, #0]

	uint8_t lst_fg = 1;
 80021b2:	1dfb      	adds	r3, r7, #7
 80021b4:	2201      	movs	r2, #1
 80021b6:	701a      	strb	r2, [r3, #0]
	uint8_t lst_btm = 0;
 80021b8:	230e      	movs	r3, #14
 80021ba:	18fb      	adds	r3, r7, r3
 80021bc:	2200      	movs	r2, #0
 80021be:	701a      	strb	r2, [r3, #0]
	// pg2_fc = 0;

	send_cmd(1, intensity); // F1
 80021c0:	2101      	movs	r1, #1
 80021c2:	2001      	movs	r0, #1
 80021c4:	f7ff fd30 	bl	8001c28 <send_cmd>
	send_cmd(1, lamp);		// F2
 80021c8:	2104      	movs	r1, #4
 80021ca:	2001      	movs	r0, #1
 80021cc:	f7ff fd2c 	bl	8001c28 <send_cmd>
	send_cmd(0, endo);		// F3
 80021d0:	2105      	movs	r1, #5
 80021d2:	2000      	movs	r0, #0
 80021d4:	f7ff fd28 	bl	8001c28 <send_cmd>

	HAL_UART_Receive_IT(&huart1, trans, 2);
 80021d8:	499b      	ldr	r1, [pc, #620]	; (8002448 <main+0x334>)
 80021da:	4b9c      	ldr	r3, [pc, #624]	; (800244c <main+0x338>)
 80021dc:	2202      	movs	r2, #2
 80021de:	0018      	movs	r0, r3
 80021e0:	f003 fa70 	bl	80056c4 <HAL_UART_Receive_IT>
		/* USER CODE END WHILE */

		/* USER CODE BEGIN 3 */

		// HAL_UART_Receive (&huart1, &trans[0], 4, HAL_MAX_DELAY);
		if (int_flag == 1)
 80021e4:	4b9a      	ldr	r3, [pc, #616]	; (8002450 <main+0x33c>)
 80021e6:	781b      	ldrb	r3, [r3, #0]
 80021e8:	b2db      	uxtb	r3, r3
 80021ea:	2b01      	cmp	r3, #1
 80021ec:	d000      	beq.n	80021f0 <main+0xdc>
 80021ee:	e154      	b.n	800249a <main+0x386>
		{

			/******************/
			// lamp on/off
			int_flag = 0;
 80021f0:	4b97      	ldr	r3, [pc, #604]	; (8002450 <main+0x33c>)
 80021f2:	2200      	movs	r2, #0
 80021f4:	701a      	strb	r2, [r3, #0]
			// HAL_UART_Transmit(&huart1, trans, 2, HAL_MAX_DELAY);

			if (trans[1] == '1')
 80021f6:	4b94      	ldr	r3, [pc, #592]	; (8002448 <main+0x334>)
 80021f8:	785b      	ldrb	r3, [r3, #1]
 80021fa:	2b31      	cmp	r3, #49	; 0x31
 80021fc:	d117      	bne.n	800222e <main+0x11a>
			{
				pg2_fc = 0;
 80021fe:	4b95      	ldr	r3, [pc, #596]	; (8002454 <main+0x340>)
 8002200:	2200      	movs	r2, #0
 8002202:	701a      	strb	r2, [r3, #0]
				lst_btm = 1;
 8002204:	230e      	movs	r3, #14
 8002206:	18fb      	adds	r3, r7, r3
 8002208:	2201      	movs	r2, #1
 800220a:	701a      	strb	r2, [r3, #0]
				current_pos.key_number = _lmp; // _depth
 800220c:	4b92      	ldr	r3, [pc, #584]	; (8002458 <main+0x344>)
 800220e:	785a      	ldrb	r2, [r3, #1]
 8002210:	2107      	movs	r1, #7
 8002212:	438a      	bics	r2, r1
 8002214:	1c11      	adds	r1, r2, #0
 8002216:	2205      	movs	r2, #5
 8002218:	430a      	orrs	r2, r1
 800221a:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = lamp;
 800221c:	4b8e      	ldr	r3, [pc, #568]	; (8002458 <main+0x344>)
 800221e:	2204      	movs	r2, #4
 8002220:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 8002222:	4a8e      	ldr	r2, [pc, #568]	; (800245c <main+0x348>)
 8002224:	7813      	ldrb	r3, [r2, #0]
 8002226:	2120      	movs	r1, #32
 8002228:	430b      	orrs	r3, r1
 800222a:	7013      	strb	r3, [r2, #0]
 800222c:	e135      	b.n	800249a <main+0x386>
				// HAL_UART_Transmit(&huart1, "1$", 2, 5);
			}

			// inten up
			else if (trans[1] == '2')
 800222e:	4b86      	ldr	r3, [pc, #536]	; (8002448 <main+0x334>)
 8002230:	785b      	ldrb	r3, [r3, #1]
 8002232:	2b32      	cmp	r3, #50	; 0x32
 8002234:	d117      	bne.n	8002266 <main+0x152>
			{
				pg2_fc = 0;
 8002236:	4b87      	ldr	r3, [pc, #540]	; (8002454 <main+0x340>)
 8002238:	2200      	movs	r2, #0
 800223a:	701a      	strb	r2, [r3, #0]
				lst_btm = 2;
 800223c:	230e      	movs	r3, #14
 800223e:	18fb      	adds	r3, r7, r3
 8002240:	2202      	movs	r2, #2
 8002242:	701a      	strb	r2, [r3, #0]
				current_pos.key_number = _pos;
 8002244:	4b84      	ldr	r3, [pc, #528]	; (8002458 <main+0x344>)
 8002246:	785a      	ldrb	r2, [r3, #1]
 8002248:	2107      	movs	r1, #7
 800224a:	438a      	bics	r2, r1
 800224c:	1c11      	adds	r1, r2, #0
 800224e:	2204      	movs	r2, #4
 8002250:	430a      	orrs	r2, r1
 8002252:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = intensity;
 8002254:	4b80      	ldr	r3, [pc, #512]	; (8002458 <main+0x344>)
 8002256:	2201      	movs	r2, #1
 8002258:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 800225a:	4a80      	ldr	r2, [pc, #512]	; (800245c <main+0x348>)
 800225c:	7813      	ldrb	r3, [r2, #0]
 800225e:	2120      	movs	r1, #32
 8002260:	430b      	orrs	r3, r1
 8002262:	7013      	strb	r3, [r2, #0]
 8002264:	e119      	b.n	800249a <main+0x386>
				// HAL_UART_Transmit(&huart1, "2$", 5, 5);
			}

			// inten down
			else if (trans[1] == '3')
 8002266:	4b78      	ldr	r3, [pc, #480]	; (8002448 <main+0x334>)
 8002268:	785b      	ldrb	r3, [r3, #1]
 800226a:	2b33      	cmp	r3, #51	; 0x33
 800226c:	d117      	bne.n	800229e <main+0x18a>
			{
				pg2_fc = 0;
 800226e:	4b79      	ldr	r3, [pc, #484]	; (8002454 <main+0x340>)
 8002270:	2200      	movs	r2, #0
 8002272:	701a      	strb	r2, [r3, #0]
				lst_btm = 3;
 8002274:	230e      	movs	r3, #14
 8002276:	18fb      	adds	r3, r7, r3
 8002278:	2203      	movs	r2, #3
 800227a:	701a      	strb	r2, [r3, #0]
				current_pos.key_number = _neg;
 800227c:	4b76      	ldr	r3, [pc, #472]	; (8002458 <main+0x344>)
 800227e:	785a      	ldrb	r2, [r3, #1]
 8002280:	2107      	movs	r1, #7
 8002282:	438a      	bics	r2, r1
 8002284:	1c11      	adds	r1, r2, #0
 8002286:	2203      	movs	r2, #3
 8002288:	430a      	orrs	r2, r1
 800228a:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = intensity;
 800228c:	4b72      	ldr	r3, [pc, #456]	; (8002458 <main+0x344>)
 800228e:	2201      	movs	r2, #1
 8002290:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 8002292:	4a72      	ldr	r2, [pc, #456]	; (800245c <main+0x348>)
 8002294:	7813      	ldrb	r3, [r2, #0]
 8002296:	2120      	movs	r1, #32
 8002298:	430b      	orrs	r3, r1
 800229a:	7013      	strb	r3, [r2, #0]
 800229c:	e0fd      	b.n	800249a <main+0x386>
				// HAL_UART_Transmit(&huart1, "3$", 5, 5);
			}

			// color +ve
			else if (trans[1] == '4')
 800229e:	4b6a      	ldr	r3, [pc, #424]	; (8002448 <main+0x334>)
 80022a0:	785b      	ldrb	r3, [r3, #1]
 80022a2:	2b34      	cmp	r3, #52	; 0x34
 80022a4:	d117      	bne.n	80022d6 <main+0x1c2>
			{
				pg2_fc = 0;
 80022a6:	4b6b      	ldr	r3, [pc, #428]	; (8002454 <main+0x340>)
 80022a8:	2200      	movs	r2, #0
 80022aa:	701a      	strb	r2, [r3, #0]
				lst_btm = 4;
 80022ac:	230e      	movs	r3, #14
 80022ae:	18fb      	adds	r3, r7, r3
 80022b0:	2204      	movs	r2, #4
 80022b2:	701a      	strb	r2, [r3, #0]
				// right side
				current_pos.key_number = _pos; // _depth
 80022b4:	4b68      	ldr	r3, [pc, #416]	; (8002458 <main+0x344>)
 80022b6:	785a      	ldrb	r2, [r3, #1]
 80022b8:	2107      	movs	r1, #7
 80022ba:	438a      	bics	r2, r1
 80022bc:	1c11      	adds	r1, r2, #0
 80022be:	2204      	movs	r2, #4
 80022c0:	430a      	orrs	r2, r1
 80022c2:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = color;
 80022c4:	4b64      	ldr	r3, [pc, #400]	; (8002458 <main+0x344>)
 80022c6:	2202      	movs	r2, #2
 80022c8:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 80022ca:	4a64      	ldr	r2, [pc, #400]	; (800245c <main+0x348>)
 80022cc:	7813      	ldrb	r3, [r2, #0]
 80022ce:	2120      	movs	r1, #32
 80022d0:	430b      	orrs	r3, r1
 80022d2:	7013      	strb	r3, [r2, #0]
 80022d4:	e0e1      	b.n	800249a <main+0x386>
				// HAL_UART_Transmit(&huart1, "4$", 5, 5);
			}

			// color -ve

			else if (trans[1] == '5')
 80022d6:	4b5c      	ldr	r3, [pc, #368]	; (8002448 <main+0x334>)
 80022d8:	785b      	ldrb	r3, [r3, #1]
 80022da:	2b35      	cmp	r3, #53	; 0x35
 80022dc:	d117      	bne.n	800230e <main+0x1fa>
			{
				pg2_fc = 0;
 80022de:	4b5d      	ldr	r3, [pc, #372]	; (8002454 <main+0x340>)
 80022e0:	2200      	movs	r2, #0
 80022e2:	701a      	strb	r2, [r3, #0]
				lst_btm = 5;
 80022e4:	230e      	movs	r3, #14
 80022e6:	18fb      	adds	r3, r7, r3
 80022e8:	2205      	movs	r2, #5
 80022ea:	701a      	strb	r2, [r3, #0]
				// left side
				current_pos.key_number = _neg; // _depth
 80022ec:	4b5a      	ldr	r3, [pc, #360]	; (8002458 <main+0x344>)
 80022ee:	785a      	ldrb	r2, [r3, #1]
 80022f0:	2107      	movs	r1, #7
 80022f2:	438a      	bics	r2, r1
 80022f4:	1c11      	adds	r1, r2, #0
 80022f6:	2203      	movs	r2, #3
 80022f8:	430a      	orrs	r2, r1
 80022fa:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = color;
 80022fc:	4b56      	ldr	r3, [pc, #344]	; (8002458 <main+0x344>)
 80022fe:	2202      	movs	r2, #2
 8002300:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 8002302:	4a56      	ldr	r2, [pc, #344]	; (800245c <main+0x348>)
 8002304:	7813      	ldrb	r3, [r2, #0]
 8002306:	2120      	movs	r1, #32
 8002308:	430b      	orrs	r3, r1
 800230a:	7013      	strb	r3, [r2, #0]
 800230c:	e0c5      	b.n	800249a <main+0x386>
				// HAL_UART_Transmit(&huart1, "5$", 5, 5);
			}

			else if (trans[1] == '6')
 800230e:	4b4e      	ldr	r3, [pc, #312]	; (8002448 <main+0x334>)
 8002310:	785b      	ldrb	r3, [r3, #1]
 8002312:	2b36      	cmp	r3, #54	; 0x36
 8002314:	d143      	bne.n	800239e <main+0x28a>
			{
				// 	// left side
				pg2_fc = 1; // print pg3
 8002316:	4b4f      	ldr	r3, [pc, #316]	; (8002454 <main+0x340>)
 8002318:	2201      	movs	r2, #1
 800231a:	701a      	strb	r2, [r3, #0]
				if(lst_btm == 6)
 800231c:	230e      	movs	r3, #14
 800231e:	18fb      	adds	r3, r7, r3
 8002320:	781b      	ldrb	r3, [r3, #0]
 8002322:	2b06      	cmp	r3, #6
 8002324:	d111      	bne.n	800234a <main+0x236>
				{
					if(current_pos.position_cursor >= 3)
 8002326:	4b4c      	ldr	r3, [pc, #304]	; (8002458 <main+0x344>)
 8002328:	781b      	ldrb	r3, [r3, #0]
 800232a:	b25b      	sxtb	r3, r3
 800232c:	2b02      	cmp	r3, #2
 800232e:	dd03      	ble.n	8002338 <main+0x224>
					{
						current_pos.position_cursor =  1;
 8002330:	4b49      	ldr	r3, [pc, #292]	; (8002458 <main+0x344>)
 8002332:	2201      	movs	r2, #1
 8002334:	701a      	strb	r2, [r3, #0]
 8002336:	e008      	b.n	800234a <main+0x236>
					}
					else 
					{
						current_pos.position_cursor++;
 8002338:	4b47      	ldr	r3, [pc, #284]	; (8002458 <main+0x344>)
 800233a:	781b      	ldrb	r3, [r3, #0]
 800233c:	b25b      	sxtb	r3, r3
 800233e:	b2db      	uxtb	r3, r3
 8002340:	3301      	adds	r3, #1
 8002342:	b2db      	uxtb	r3, r3
 8002344:	b25a      	sxtb	r2, r3
 8002346:	4b44      	ldr	r3, [pc, #272]	; (8002458 <main+0x344>)
 8002348:	701a      	strb	r2, [r3, #0]
				// 	current_pos.position_cursor = 3;
				// 	pg3_wd = 1;
				// 	lst_fg = 1;
				// }

				if (current_pos.position_cursor == 1)
 800234a:	4b43      	ldr	r3, [pc, #268]	; (8002458 <main+0x344>)
 800234c:	781b      	ldrb	r3, [r3, #0]
 800234e:	b25b      	sxtb	r3, r3
 8002350:	2b01      	cmp	r3, #1
 8002352:	d103      	bne.n	800235c <main+0x248>
				{
					pg3_sm = 1;
 8002354:	4b39      	ldr	r3, [pc, #228]	; (800243c <main+0x328>)
 8002356:	2201      	movs	r2, #1
 8002358:	701a      	strb	r2, [r3, #0]
 800235a:	e014      	b.n	8002386 <main+0x272>
					// current_pos.position_cursor = 2;
				}
				else if (current_pos.position_cursor == 2)
 800235c:	4b3e      	ldr	r3, [pc, #248]	; (8002458 <main+0x344>)
 800235e:	781b      	ldrb	r3, [r3, #0]
 8002360:	b25b      	sxtb	r3, r3
 8002362:	2b02      	cmp	r3, #2
 8002364:	d103      	bne.n	800236e <main+0x25a>
				{
					pg3_md = 1;
 8002366:	4b36      	ldr	r3, [pc, #216]	; (8002440 <main+0x32c>)
 8002368:	2201      	movs	r2, #1
 800236a:	701a      	strb	r2, [r3, #0]
 800236c:	e00b      	b.n	8002386 <main+0x272>
					// current_pos.position_cursor = 3;
				}
				else if (current_pos.position_cursor == 3)
 800236e:	4b3a      	ldr	r3, [pc, #232]	; (8002458 <main+0x344>)
 8002370:	781b      	ldrb	r3, [r3, #0]
 8002372:	b25b      	sxtb	r3, r3
 8002374:	2b03      	cmp	r3, #3
 8002376:	d103      	bne.n	8002380 <main+0x26c>
				{
					pg3_wd = 1;
 8002378:	4b32      	ldr	r3, [pc, #200]	; (8002444 <main+0x330>)
 800237a:	2201      	movs	r2, #1
 800237c:	701a      	strb	r2, [r3, #0]
 800237e:	e002      	b.n	8002386 <main+0x272>
					// current_pos.position_cursor = 1;
				}
				else
				{
					current_pos.position_cursor = 1;
 8002380:	4b35      	ldr	r3, [pc, #212]	; (8002458 <main+0x344>)
 8002382:	2201      	movs	r2, #1
 8002384:	701a      	strb	r2, [r3, #0]
				}
				lcd_clear();
 8002386:	f7fe fc7f 	bl	8000c88 <lcd_clear>
				last_pg = 3;
 800238a:	4b35      	ldr	r3, [pc, #212]	; (8002460 <main+0x34c>)
 800238c:	2203      	movs	r2, #3
 800238e:	701a      	strb	r2, [r3, #0]
				update_screen_data_3();
 8002390:	f7ff f882 	bl	8001498 <update_screen_data_3>
					lst_btm = 6;
 8002394:	230e      	movs	r3, #14
 8002396:	18fb      	adds	r3, r7, r3
 8002398:	2206      	movs	r2, #6
 800239a:	701a      	strb	r2, [r3, #0]
 800239c:	e07d      	b.n	800249a <main+0x386>
				// interrupt_reg.update_data = 1;
				// HAL_UART_Transmit(&huart1, "6$", 5, 5);
			}

			else if (trans[1] == '7')
 800239e:	4b2a      	ldr	r3, [pc, #168]	; (8002448 <main+0x334>)
 80023a0:	785b      	ldrb	r3, [r3, #1]
 80023a2:	2b37      	cmp	r3, #55	; 0x37
 80023a4:	d128      	bne.n	80023f8 <main+0x2e4>
			{
				// print pg3
				pg2_fc = 1;
 80023a6:	4b2b      	ldr	r3, [pc, #172]	; (8002454 <main+0x340>)
 80023a8:	2201      	movs	r2, #1
 80023aa:	701a      	strb	r2, [r3, #0]
				lst_btm = 7;
 80023ac:	230e      	movs	r3, #14
 80023ae:	18fb      	adds	r3, r7, r3
 80023b0:	2207      	movs	r2, #7
 80023b2:	701a      	strb	r2, [r3, #0]
				// 	current_pos.position_cursor = 3;
				// 	pg3_wd = 0;
				// 	// lst_fg = 1;
				// }

				if (current_pos.position_cursor == 1)
 80023b4:	4b28      	ldr	r3, [pc, #160]	; (8002458 <main+0x344>)
 80023b6:	781b      	ldrb	r3, [r3, #0]
 80023b8:	b25b      	sxtb	r3, r3
 80023ba:	2b01      	cmp	r3, #1
 80023bc:	d103      	bne.n	80023c6 <main+0x2b2>
				{
					pg3_sm = 0;
 80023be:	4b1f      	ldr	r3, [pc, #124]	; (800243c <main+0x328>)
 80023c0:	2200      	movs	r2, #0
 80023c2:	701a      	strb	r2, [r3, #0]
 80023c4:	e010      	b.n	80023e8 <main+0x2d4>
					// current_pos.position_cursor = 2;
				}
				else if (current_pos.position_cursor == 2)
 80023c6:	4b24      	ldr	r3, [pc, #144]	; (8002458 <main+0x344>)
 80023c8:	781b      	ldrb	r3, [r3, #0]
 80023ca:	b25b      	sxtb	r3, r3
 80023cc:	2b02      	cmp	r3, #2
 80023ce:	d103      	bne.n	80023d8 <main+0x2c4>
				{
					pg3_md = 0;
 80023d0:	4b1b      	ldr	r3, [pc, #108]	; (8002440 <main+0x32c>)
 80023d2:	2200      	movs	r2, #0
 80023d4:	701a      	strb	r2, [r3, #0]
 80023d6:	e007      	b.n	80023e8 <main+0x2d4>
					// current_pos.position_cursor = 3;
				}
				else if (current_pos.position_cursor == 3)
 80023d8:	4b1f      	ldr	r3, [pc, #124]	; (8002458 <main+0x344>)
 80023da:	781b      	ldrb	r3, [r3, #0]
 80023dc:	b25b      	sxtb	r3, r3
 80023de:	2b03      	cmp	r3, #3
 80023e0:	d102      	bne.n	80023e8 <main+0x2d4>
				{
					pg3_wd = 0;
 80023e2:	4b18      	ldr	r3, [pc, #96]	; (8002444 <main+0x330>)
 80023e4:	2200      	movs	r2, #0
 80023e6:	701a      	strb	r2, [r3, #0]
				}
				// else
				// {
				// 	current_pos.position_cursor = 1;
				// }
				lcd_clear();
 80023e8:	f7fe fc4e 	bl	8000c88 <lcd_clear>
				last_pg = 3;
 80023ec:	4b1c      	ldr	r3, [pc, #112]	; (8002460 <main+0x34c>)
 80023ee:	2203      	movs	r2, #3
 80023f0:	701a      	strb	r2, [r3, #0]
				update_screen_data_3();
 80023f2:	f7ff f851 	bl	8001498 <update_screen_data_3>
 80023f6:	e050      	b.n	800249a <main+0x386>
				// HAL_UART_Transmit(&huart1, "7$", 5, 5);
			}

			// endo on

			else if (trans[1] == '8')
 80023f8:	4b13      	ldr	r3, [pc, #76]	; (8002448 <main+0x334>)
 80023fa:	785b      	ldrb	r3, [r3, #1]
 80023fc:	2b38      	cmp	r3, #56	; 0x38
 80023fe:	d131      	bne.n	8002464 <main+0x350>
			{
				pg2_fc = 0;
 8002400:	4b14      	ldr	r3, [pc, #80]	; (8002454 <main+0x340>)
 8002402:	2200      	movs	r2, #0
 8002404:	701a      	strb	r2, [r3, #0]
				lst_btm = 8;
 8002406:	230e      	movs	r3, #14
 8002408:	18fb      	adds	r3, r7, r3
 800240a:	2208      	movs	r2, #8
 800240c:	701a      	strb	r2, [r3, #0]
				// }
				// else
				// {
				// 	current_pos.key_number = _pos;
				// }
				current_pos.key_number = _pos;
 800240e:	4b12      	ldr	r3, [pc, #72]	; (8002458 <main+0x344>)
 8002410:	785a      	ldrb	r2, [r3, #1]
 8002412:	2107      	movs	r1, #7
 8002414:	438a      	bics	r2, r1
 8002416:	1c11      	adds	r1, r2, #0
 8002418:	2204      	movs	r2, #4
 800241a:	430a      	orrs	r2, r1
 800241c:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = endo;
 800241e:	4b0e      	ldr	r3, [pc, #56]	; (8002458 <main+0x344>)
 8002420:	2205      	movs	r2, #5
 8002422:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 8002424:	4a0d      	ldr	r2, [pc, #52]	; (800245c <main+0x348>)
 8002426:	7813      	ldrb	r3, [r2, #0]
 8002428:	2120      	movs	r1, #32
 800242a:	430b      	orrs	r3, r1
 800242c:	7013      	strb	r3, [r2, #0]
 800242e:	e034      	b.n	800249a <main+0x386>
 8002430:	20000108 	.word	0x20000108
 8002434:	20000150 	.word	0x20000150
 8002438:	20000008 	.word	0x20000008
 800243c:	200000a0 	.word	0x200000a0
 8002440:	200000a1 	.word	0x200000a1
 8002444:	200000a2 	.word	0x200000a2
 8002448:	20000224 	.word	0x20000224
 800244c:	20000198 	.word	0x20000198
 8002450:	20000220 	.word	0x20000220
 8002454:	2000009f 	.word	0x2000009f
 8002458:	20000004 	.word	0x20000004
 800245c:	200000b0 	.word	0x200000b0
 8002460:	2000009e 	.word	0x2000009e
				// HAL_UART_Transmit(&huart1, "8$", 2, 5);
			}
			else if (trans[1] == '9')
 8002464:	4bd3      	ldr	r3, [pc, #844]	; (80027b4 <main+0x6a0>)
 8002466:	785b      	ldrb	r3, [r3, #1]
 8002468:	2b39      	cmp	r3, #57	; 0x39
 800246a:	d116      	bne.n	800249a <main+0x386>
			{
				pg2_fc = 0;
 800246c:	4bd2      	ldr	r3, [pc, #840]	; (80027b8 <main+0x6a4>)
 800246e:	2200      	movs	r2, #0
 8002470:	701a      	strb	r2, [r3, #0]
				lst_btm = 9;
 8002472:	230e      	movs	r3, #14
 8002474:	18fb      	adds	r3, r7, r3
 8002476:	2209      	movs	r2, #9
 8002478:	701a      	strb	r2, [r3, #0]

				current_pos.key_number = _neg;
 800247a:	4bd0      	ldr	r3, [pc, #832]	; (80027bc <main+0x6a8>)
 800247c:	785a      	ldrb	r2, [r3, #1]
 800247e:	2107      	movs	r1, #7
 8002480:	438a      	bics	r2, r1
 8002482:	1c11      	adds	r1, r2, #0
 8002484:	2203      	movs	r2, #3
 8002486:	430a      	orrs	r2, r1
 8002488:	705a      	strb	r2, [r3, #1]
				current_pos.position_cursor = endo;
 800248a:	4bcc      	ldr	r3, [pc, #816]	; (80027bc <main+0x6a8>)
 800248c:	2205      	movs	r2, #5
 800248e:	701a      	strb	r2, [r3, #0]
				interrupt_reg.update_data = 1;
 8002490:	4acb      	ldr	r2, [pc, #812]	; (80027c0 <main+0x6ac>)
 8002492:	7813      	ldrb	r3, [r2, #0]
 8002494:	2120      	movs	r1, #32
 8002496:	430b      	orrs	r3, r1
 8002498:	7013      	strb	r3, [r2, #0]
			// 	interrupt_reg.update_data = 1;
			// 	HAL_UART_Transmit(&huart1, "7$", 5, 5);
			// }
		}

		if (HAL_GPIO_ReadPin(S_PRV_GPIO_Port, S_PRV_Pin) == 0)
 800249a:	2380      	movs	r3, #128	; 0x80
 800249c:	011b      	lsls	r3, r3, #4
 800249e:	4ac9      	ldr	r2, [pc, #804]	; (80027c4 <main+0x6b0>)
 80024a0:	0019      	movs	r1, r3
 80024a2:	0010      	movs	r0, r2
 80024a4:	f001 f988 	bl	80037b8 <HAL_GPIO_ReadPin>
 80024a8:	1e03      	subs	r3, r0, #0
 80024aa:	d109      	bne.n	80024c0 <main+0x3ac>
		{
			interrupt_reg.key_flag = 1;
 80024ac:	4ac4      	ldr	r2, [pc, #784]	; (80027c0 <main+0x6ac>)
 80024ae:	7813      	ldrb	r3, [r2, #0]
 80024b0:	2101      	movs	r1, #1
 80024b2:	430b      	orrs	r3, r1
 80024b4:	7013      	strb	r3, [r2, #0]
			key_pressed.prv = 1;
 80024b6:	4ac4      	ldr	r2, [pc, #784]	; (80027c8 <main+0x6b4>)
 80024b8:	7813      	ldrb	r3, [r2, #0]
 80024ba:	2101      	movs	r1, #1
 80024bc:	430b      	orrs	r3, r1
 80024be:	7013      	strb	r3, [r2, #0]
		}

		if (HAL_GPIO_ReadPin(S_NEXT_GPIO_Port, S_NEXT_Pin) == 0)
 80024c0:	2380      	movs	r3, #128	; 0x80
 80024c2:	015b      	lsls	r3, r3, #5
 80024c4:	4abf      	ldr	r2, [pc, #764]	; (80027c4 <main+0x6b0>)
 80024c6:	0019      	movs	r1, r3
 80024c8:	0010      	movs	r0, r2
 80024ca:	f001 f975 	bl	80037b8 <HAL_GPIO_ReadPin>
 80024ce:	1e03      	subs	r3, r0, #0
 80024d0:	d109      	bne.n	80024e6 <main+0x3d2>
		{
			interrupt_reg.key_flag = 1;
 80024d2:	4abb      	ldr	r2, [pc, #748]	; (80027c0 <main+0x6ac>)
 80024d4:	7813      	ldrb	r3, [r2, #0]
 80024d6:	2101      	movs	r1, #1
 80024d8:	430b      	orrs	r3, r1
 80024da:	7013      	strb	r3, [r2, #0]
			key_pressed.nxt = 1;
 80024dc:	4aba      	ldr	r2, [pc, #744]	; (80027c8 <main+0x6b4>)
 80024de:	7813      	ldrb	r3, [r2, #0]
 80024e0:	2102      	movs	r1, #2
 80024e2:	430b      	orrs	r3, r1
 80024e4:	7013      	strb	r3, [r2, #0]
		}

		if (HAL_GPIO_ReadPin(DEPTH_GPIO_Port, DEPTH_Pin) == 0)
 80024e6:	2380      	movs	r3, #128	; 0x80
 80024e8:	019b      	lsls	r3, r3, #6
 80024ea:	4ab6      	ldr	r2, [pc, #728]	; (80027c4 <main+0x6b0>)
 80024ec:	0019      	movs	r1, r3
 80024ee:	0010      	movs	r0, r2
 80024f0:	f001 f962 	bl	80037b8 <HAL_GPIO_ReadPin>
 80024f4:	1e03      	subs	r3, r0, #0
 80024f6:	d109      	bne.n	800250c <main+0x3f8>
		{
			interrupt_reg.key_flag = 1;
 80024f8:	4ab1      	ldr	r2, [pc, #708]	; (80027c0 <main+0x6ac>)
 80024fa:	7813      	ldrb	r3, [r2, #0]
 80024fc:	2101      	movs	r1, #1
 80024fe:	430b      	orrs	r3, r1
 8002500:	7013      	strb	r3, [r2, #0]
			key_pressed.depth = 1;
 8002502:	4ab1      	ldr	r2, [pc, #708]	; (80027c8 <main+0x6b4>)
 8002504:	7813      	ldrb	r3, [r2, #0]
 8002506:	2104      	movs	r1, #4
 8002508:	430b      	orrs	r3, r1
 800250a:	7013      	strb	r3, [r2, #0]
		}
		if (HAL_GPIO_ReadPin(CHANGE_N_GPIO_Port, CHANGE_N_Pin) == 0)
 800250c:	2380      	movs	r3, #128	; 0x80
 800250e:	021b      	lsls	r3, r3, #8
 8002510:	4aac      	ldr	r2, [pc, #688]	; (80027c4 <main+0x6b0>)
 8002512:	0019      	movs	r1, r3
 8002514:	0010      	movs	r0, r2
 8002516:	f001 f94f 	bl	80037b8 <HAL_GPIO_ReadPin>
 800251a:	1e03      	subs	r3, r0, #0
 800251c:	d109      	bne.n	8002532 <main+0x41e>
		{

			key_pressed.neg = 1;
 800251e:	4aaa      	ldr	r2, [pc, #680]	; (80027c8 <main+0x6b4>)
 8002520:	7813      	ldrb	r3, [r2, #0]
 8002522:	2110      	movs	r1, #16
 8002524:	430b      	orrs	r3, r1
 8002526:	7013      	strb	r3, [r2, #0]
			interrupt_reg.key_flag = 1;
 8002528:	4aa5      	ldr	r2, [pc, #660]	; (80027c0 <main+0x6ac>)
 800252a:	7813      	ldrb	r3, [r2, #0]
 800252c:	2101      	movs	r1, #1
 800252e:	430b      	orrs	r3, r1
 8002530:	7013      	strb	r3, [r2, #0]
		}

		if (HAL_GPIO_ReadPin(CHANGE_P_GPIO_Port, CHANGE_P_Pin) == 0)
 8002532:	2380      	movs	r3, #128	; 0x80
 8002534:	00da      	lsls	r2, r3, #3
 8002536:	2390      	movs	r3, #144	; 0x90
 8002538:	05db      	lsls	r3, r3, #23
 800253a:	0011      	movs	r1, r2
 800253c:	0018      	movs	r0, r3
 800253e:	f001 f93b 	bl	80037b8 <HAL_GPIO_ReadPin>
 8002542:	1e03      	subs	r3, r0, #0
 8002544:	d109      	bne.n	800255a <main+0x446>
		{

			key_pressed.pos = 1;
 8002546:	4aa0      	ldr	r2, [pc, #640]	; (80027c8 <main+0x6b4>)
 8002548:	7813      	ldrb	r3, [r2, #0]
 800254a:	2108      	movs	r1, #8
 800254c:	430b      	orrs	r3, r1
 800254e:	7013      	strb	r3, [r2, #0]
			interrupt_reg.key_flag = 1;
 8002550:	4a9b      	ldr	r2, [pc, #620]	; (80027c0 <main+0x6ac>)
 8002552:	7813      	ldrb	r3, [r2, #0]
 8002554:	2101      	movs	r1, #1
 8002556:	430b      	orrs	r3, r1
 8002558:	7013      	strb	r3, [r2, #0]
		}

		if (interrupt_reg.key_flag)
 800255a:	4b99      	ldr	r3, [pc, #612]	; (80027c0 <main+0x6ac>)
 800255c:	781b      	ldrb	r3, [r3, #0]
 800255e:	07db      	lsls	r3, r3, #31
 8002560:	0fdb      	lsrs	r3, r3, #31
 8002562:	b2db      	uxtb	r3, r3
 8002564:	2b00      	cmp	r3, #0
 8002566:	d100      	bne.n	800256a <main+0x456>
 8002568:	e0f4      	b.n	8002754 <main+0x640>
		{

			if (HAL_GPIO_ReadPin(S_PRV_GPIO_Port, S_PRV_Pin) == 0)
 800256a:	2380      	movs	r3, #128	; 0x80
 800256c:	011b      	lsls	r3, r3, #4
 800256e:	4a95      	ldr	r2, [pc, #596]	; (80027c4 <main+0x6b0>)
 8002570:	0019      	movs	r1, r3
 8002572:	0010      	movs	r0, r2
 8002574:	f001 f920 	bl	80037b8 <HAL_GPIO_ReadPin>
 8002578:	1e03      	subs	r3, r0, #0
 800257a:	d131      	bne.n	80025e0 <main+0x4cc>
			{
				temp_time = HAL_GetTick();
 800257c:	f000 fe22 	bl	80031c4 <HAL_GetTick>
 8002580:	0003      	movs	r3, r0
 8002582:	60bb      	str	r3, [r7, #8]
				// temp_time = tt_cnt;
				HAL_Delay(50);
 8002584:	2032      	movs	r0, #50	; 0x32
 8002586:	f000 fe27 	bl	80031d8 <HAL_Delay>
				while ((HAL_GetTick() - temp_time) <= 2000) // while ((tt_cnt - temp_time) >= 5000) // while ((HAL_GetTick() - temp_time) >= 5000)  // error tt_cnt
 800258a:	e020      	b.n	80025ce <main+0x4ba>
				{
					if (HAL_GPIO_ReadPin(S_PRV_GPIO_Port, S_PRV_Pin))
 800258c:	2380      	movs	r3, #128	; 0x80
 800258e:	011b      	lsls	r3, r3, #4
 8002590:	4a8c      	ldr	r2, [pc, #560]	; (80027c4 <main+0x6b0>)
 8002592:	0019      	movs	r1, r3
 8002594:	0010      	movs	r0, r2
 8002596:	f001 f90f 	bl	80037b8 <HAL_GPIO_ReadPin>
 800259a:	1e03      	subs	r3, r0, #0
 800259c:	d00a      	beq.n	80025b4 <main+0x4a0>
					{
						interrupt_reg.key_flag = 1;
 800259e:	4a88      	ldr	r2, [pc, #544]	; (80027c0 <main+0x6ac>)
 80025a0:	7813      	ldrb	r3, [r2, #0]
 80025a2:	2101      	movs	r1, #1
 80025a4:	430b      	orrs	r3, r1
 80025a6:	7013      	strb	r3, [r2, #0]
						interrupt_reg.prv_long_press = 0;
 80025a8:	4a85      	ldr	r2, [pc, #532]	; (80027c0 <main+0x6ac>)
 80025aa:	7813      	ldrb	r3, [r2, #0]
 80025ac:	2108      	movs	r1, #8
 80025ae:	438b      	bics	r3, r1
 80025b0:	7013      	strb	r3, [r2, #0]
						break;
 80025b2:	e015      	b.n	80025e0 <main+0x4cc>
					}
					interrupt_reg.key_flag = 0;
 80025b4:	4a82      	ldr	r2, [pc, #520]	; (80027c0 <main+0x6ac>)
 80025b6:	7813      	ldrb	r3, [r2, #0]
 80025b8:	2101      	movs	r1, #1
 80025ba:	438b      	bics	r3, r1
 80025bc:	7013      	strb	r3, [r2, #0]
					interrupt_reg.prv_long_press = 1;
 80025be:	4a80      	ldr	r2, [pc, #512]	; (80027c0 <main+0x6ac>)
 80025c0:	7813      	ldrb	r3, [r2, #0]
 80025c2:	2108      	movs	r1, #8
 80025c4:	430b      	orrs	r3, r1
 80025c6:	7013      	strb	r3, [r2, #0]
					HAL_Delay(50);
 80025c8:	2032      	movs	r0, #50	; 0x32
 80025ca:	f000 fe05 	bl	80031d8 <HAL_Delay>
				while ((HAL_GetTick() - temp_time) <= 2000) // while ((tt_cnt - temp_time) >= 5000) // while ((HAL_GetTick() - temp_time) >= 5000)  // error tt_cnt
 80025ce:	f000 fdf9 	bl	80031c4 <HAL_GetTick>
 80025d2:	0002      	movs	r2, r0
 80025d4:	68bb      	ldr	r3, [r7, #8]
 80025d6:	1ad2      	subs	r2, r2, r3
 80025d8:	23fa      	movs	r3, #250	; 0xfa
 80025da:	00db      	lsls	r3, r3, #3
 80025dc:	429a      	cmp	r2, r3
 80025de:	d9d5      	bls.n	800258c <main+0x478>
				}
			}

			if (HAL_GPIO_ReadPin(DEPTH_GPIO_Port, DEPTH_Pin) == 0)
 80025e0:	2380      	movs	r3, #128	; 0x80
 80025e2:	019b      	lsls	r3, r3, #6
 80025e4:	4a77      	ldr	r2, [pc, #476]	; (80027c4 <main+0x6b0>)
 80025e6:	0019      	movs	r1, r3
 80025e8:	0010      	movs	r0, r2
 80025ea:	f001 f8e5 	bl	80037b8 <HAL_GPIO_ReadPin>
 80025ee:	1e03      	subs	r3, r0, #0
 80025f0:	d12d      	bne.n	800264e <main+0x53a>
			{
				temp_time = HAL_GetTick();
 80025f2:	f000 fde7 	bl	80031c4 <HAL_GetTick>
 80025f6:	0003      	movs	r3, r0
 80025f8:	60bb      	str	r3, [r7, #8]
				HAL_Delay(50);
 80025fa:	2032      	movs	r0, #50	; 0x32
 80025fc:	f000 fdec 	bl	80031d8 <HAL_Delay>
				while ((HAL_GetTick() - temp_time) <= 5000)
 8002600:	e01d      	b.n	800263e <main+0x52a>
				{
					if (HAL_GPIO_ReadPin(DEPTH_GPIO_Port, DEPTH_Pin))
 8002602:	2380      	movs	r3, #128	; 0x80
 8002604:	019b      	lsls	r3, r3, #6
 8002606:	4a6f      	ldr	r2, [pc, #444]	; (80027c4 <main+0x6b0>)
 8002608:	0019      	movs	r1, r3
 800260a:	0010      	movs	r0, r2
 800260c:	f001 f8d4 	bl	80037b8 <HAL_GPIO_ReadPin>
 8002610:	1e03      	subs	r3, r0, #0
 8002612:	d00a      	beq.n	800262a <main+0x516>
					{
						interrupt_reg.key_flag = 1;
 8002614:	4a6a      	ldr	r2, [pc, #424]	; (80027c0 <main+0x6ac>)
 8002616:	7813      	ldrb	r3, [r2, #0]
 8002618:	2101      	movs	r1, #1
 800261a:	430b      	orrs	r3, r1
 800261c:	7013      	strb	r3, [r2, #0]
						interrupt_reg.depth_long_press = 0;
 800261e:	4a68      	ldr	r2, [pc, #416]	; (80027c0 <main+0x6ac>)
 8002620:	7813      	ldrb	r3, [r2, #0]
 8002622:	2110      	movs	r1, #16
 8002624:	438b      	bics	r3, r1
 8002626:	7013      	strb	r3, [r2, #0]
						break;
 8002628:	e011      	b.n	800264e <main+0x53a>
					}
					interrupt_reg.key_flag = 0;
 800262a:	4a65      	ldr	r2, [pc, #404]	; (80027c0 <main+0x6ac>)
 800262c:	7813      	ldrb	r3, [r2, #0]
 800262e:	2101      	movs	r1, #1
 8002630:	438b      	bics	r3, r1
 8002632:	7013      	strb	r3, [r2, #0]
					interrupt_reg.depth_long_press = 1;
 8002634:	4a62      	ldr	r2, [pc, #392]	; (80027c0 <main+0x6ac>)
 8002636:	7813      	ldrb	r3, [r2, #0]
 8002638:	2110      	movs	r1, #16
 800263a:	430b      	orrs	r3, r1
 800263c:	7013      	strb	r3, [r2, #0]
				while ((HAL_GetTick() - temp_time) <= 5000)
 800263e:	f000 fdc1 	bl	80031c4 <HAL_GetTick>
 8002642:	0002      	movs	r2, r0
 8002644:	68bb      	ldr	r3, [r7, #8]
 8002646:	1ad3      	subs	r3, r2, r3
 8002648:	4a60      	ldr	r2, [pc, #384]	; (80027cc <main+0x6b8>)
 800264a:	4293      	cmp	r3, r2
 800264c:	d9d9      	bls.n	8002602 <main+0x4ee>
				}
			}

			if (interrupt_reg.key_flag)
 800264e:	4b5c      	ldr	r3, [pc, #368]	; (80027c0 <main+0x6ac>)
 8002650:	781b      	ldrb	r3, [r3, #0]
 8002652:	07db      	lsls	r3, r3, #31
 8002654:	0fdb      	lsrs	r3, r3, #31
 8002656:	b2db      	uxtb	r3, r3
 8002658:	2b00      	cmp	r3, #0
 800265a:	d012      	beq.n	8002682 <main+0x56e>
			{
				beep_sound();
 800265c:	f7ff fd40 	bl	80020e0 <beep_sound>
				// if (!data_reg.sensor)
				// {
				update_key_press();
 8002660:	f7fe fc08 	bl	8000e74 <update_key_press>
				interrupt_reg.key_flag = 0;
 8002664:	4a56      	ldr	r2, [pc, #344]	; (80027c0 <main+0x6ac>)
 8002666:	7813      	ldrb	r3, [r2, #0]
 8002668:	2101      	movs	r1, #1
 800266a:	438b      	bics	r3, r1
 800266c:	7013      	strb	r3, [r2, #0]
				interrupt_reg.update_data = 1;
 800266e:	4a54      	ldr	r2, [pc, #336]	; (80027c0 <main+0x6ac>)
 8002670:	7813      	ldrb	r3, [r2, #0]
 8002672:	2120      	movs	r1, #32
 8002674:	430b      	orrs	r3, r1
 8002676:	7013      	strb	r3, [r2, #0]
				// }

				interrupt_reg.key_flag = 0;
 8002678:	4a51      	ldr	r2, [pc, #324]	; (80027c0 <main+0x6ac>)
 800267a:	7813      	ldrb	r3, [r2, #0]
 800267c:	2101      	movs	r1, #1
 800267e:	438b      	bics	r3, r1
 8002680:	7013      	strb	r3, [r2, #0]
			}

			if (interrupt_reg.prv_long_press)
 8002682:	4b4f      	ldr	r3, [pc, #316]	; (80027c0 <main+0x6ac>)
 8002684:	781b      	ldrb	r3, [r3, #0]
 8002686:	071b      	lsls	r3, r3, #28
 8002688:	0fdb      	lsrs	r3, r3, #31
 800268a:	b2db      	uxtb	r3, r3
 800268c:	2b00      	cmp	r3, #0
 800268e:	d03d      	beq.n	800270c <main+0x5f8>
			{
				beep_sound();
 8002690:	f7ff fd26 	bl	80020e0 <beep_sound>
				interrupt_reg.prv_long_press = 0;
 8002694:	4a4a      	ldr	r2, [pc, #296]	; (80027c0 <main+0x6ac>)
 8002696:	7813      	ldrb	r3, [r2, #0]
 8002698:	2108      	movs	r1, #8
 800269a:	438b      	bics	r3, r1
 800269c:	7013      	strb	r3, [r2, #0]
				key_pressed.prv = 0;
 800269e:	4a4a      	ldr	r2, [pc, #296]	; (80027c8 <main+0x6b4>)
 80026a0:	7813      	ldrb	r3, [r2, #0]
 80026a2:	2101      	movs	r1, #1
 80026a4:	438b      	bics	r3, r1
 80026a6:	7013      	strb	r3, [r2, #0]
				// interrupt_reg.update_data = 0;
				data_reg.sensor = !data_reg.sensor;
 80026a8:	4b49      	ldr	r3, [pc, #292]	; (80027d0 <main+0x6bc>)
 80026aa:	781b      	ldrb	r3, [r3, #0]
 80026ac:	2210      	movs	r2, #16
 80026ae:	4013      	ands	r3, r2
 80026b0:	b2db      	uxtb	r3, r3
 80026b2:	425a      	negs	r2, r3
 80026b4:	4153      	adcs	r3, r2
 80026b6:	b2da      	uxtb	r2, r3
 80026b8:	4b45      	ldr	r3, [pc, #276]	; (80027d0 <main+0x6bc>)
 80026ba:	2101      	movs	r1, #1
 80026bc:	400a      	ands	r2, r1
 80026be:	0110      	lsls	r0, r2, #4
 80026c0:	781a      	ldrb	r2, [r3, #0]
 80026c2:	2110      	movs	r1, #16
 80026c4:	438a      	bics	r2, r1
 80026c6:	1c11      	adds	r1, r2, #0
 80026c8:	1c02      	adds	r2, r0, #0
 80026ca:	430a      	orrs	r2, r1
 80026cc:	701a      	strb	r2, [r3, #0]
				if (last_pg == 1)
 80026ce:	4b41      	ldr	r3, [pc, #260]	; (80027d4 <main+0x6c0>)
 80026d0:	781b      	ldrb	r3, [r3, #0]
 80026d2:	2b01      	cmp	r3, #1
 80026d4:	d116      	bne.n	8002704 <main+0x5f0>
				{
					clr_data(sensor);
 80026d6:	2003      	movs	r0, #3
 80026d8:	f7fe f9cc 	bl	8000a74 <clr_data>

					if (data_reg.sensor)
 80026dc:	4b3c      	ldr	r3, [pc, #240]	; (80027d0 <main+0x6bc>)
 80026de:	781b      	ldrb	r3, [r3, #0]
 80026e0:	2210      	movs	r2, #16
 80026e2:	4013      	ands	r3, r2
 80026e4:	b2db      	uxtb	r3, r3
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d006      	beq.n	80026f8 <main+0x5e4>
						lcd_puts(3, 7, (int8_t *)"ON");
 80026ea:	4b3b      	ldr	r3, [pc, #236]	; (80027d8 <main+0x6c4>)
 80026ec:	001a      	movs	r2, r3
 80026ee:	2107      	movs	r1, #7
 80026f0:	2003      	movs	r0, #3
 80026f2:	f7fe f96d 	bl	80009d0 <lcd_puts>
 80026f6:	e005      	b.n	8002704 <main+0x5f0>
					else
						lcd_puts(3, 7, (int8_t *)"OFF");
 80026f8:	4b38      	ldr	r3, [pc, #224]	; (80027dc <main+0x6c8>)
 80026fa:	001a      	movs	r2, r3
 80026fc:	2107      	movs	r1, #7
 80026fe:	2003      	movs	r0, #3
 8002700:	f7fe f966 	bl	80009d0 <lcd_puts>
				}
				sns_status = 1;
 8002704:	230d      	movs	r3, #13
 8002706:	18fb      	adds	r3, r7, r3
 8002708:	2201      	movs	r2, #1
 800270a:	701a      	strb	r2, [r3, #0]
			}

			if (interrupt_reg.depth_long_press)
 800270c:	4b2c      	ldr	r3, [pc, #176]	; (80027c0 <main+0x6ac>)
 800270e:	781b      	ldrb	r3, [r3, #0]
 8002710:	06db      	lsls	r3, r3, #27
 8002712:	0fdb      	lsrs	r3, r3, #31
 8002714:	b2db      	uxtb	r3, r3
 8002716:	2b00      	cmp	r3, #0
 8002718:	d01c      	beq.n	8002754 <main+0x640>
			{
				//				lcd_puts(0, 0, (int8_t *)"...");
				page_change_flag = 1;
 800271a:	230f      	movs	r3, #15
 800271c:	18fb      	adds	r3, r7, r3
 800271e:	2201      	movs	r2, #1
 8002720:	701a      	strb	r2, [r3, #0]
				beep_sound();
 8002722:	f7ff fcdd 	bl	80020e0 <beep_sound>
				current_pos.key_number = _depth;
 8002726:	4b25      	ldr	r3, [pc, #148]	; (80027bc <main+0x6a8>)
 8002728:	785a      	ldrb	r2, [r3, #1]
 800272a:	2107      	movs	r1, #7
 800272c:	438a      	bics	r2, r1
 800272e:	1c11      	adds	r1, r2, #0
 8002730:	2202      	movs	r2, #2
 8002732:	430a      	orrs	r2, r1
 8002734:	705a      	strb	r2, [r3, #1]
				interrupt_reg.depth_long_press = 0;
 8002736:	4a22      	ldr	r2, [pc, #136]	; (80027c0 <main+0x6ac>)
 8002738:	7813      	ldrb	r3, [r2, #0]
 800273a:	2110      	movs	r1, #16
 800273c:	438b      	bics	r3, r1
 800273e:	7013      	strb	r3, [r2, #0]
				key_pressed.depth = 0;
 8002740:	4a21      	ldr	r2, [pc, #132]	; (80027c8 <main+0x6b4>)
 8002742:	7813      	ldrb	r3, [r2, #0]
 8002744:	2104      	movs	r1, #4
 8002746:	438b      	bics	r3, r1
 8002748:	7013      	strb	r3, [r2, #0]
				interrupt_reg.key_flag = 0;
 800274a:	4a1d      	ldr	r2, [pc, #116]	; (80027c0 <main+0x6ac>)
 800274c:	7813      	ldrb	r3, [r2, #0]
 800274e:	2101      	movs	r1, #1
 8002750:	438b      	bics	r3, r1
 8002752:	7013      	strb	r3, [r2, #0]
			//				interrupt_reg.gesture_flag = 0;
			//				interrupt_reg.update_data = 1;
			//			}
		}

		if (data_reg.sensor)
 8002754:	4b1e      	ldr	r3, [pc, #120]	; (80027d0 <main+0x6bc>)
 8002756:	781b      	ldrb	r3, [r3, #0]
 8002758:	2210      	movs	r2, #16
 800275a:	4013      	ands	r3, r2
 800275c:	b2db      	uxtb	r3, r3
 800275e:	2b00      	cmp	r3, #0
 8002760:	d100      	bne.n	8002764 <main+0x650>
 8002762:	e06b      	b.n	800283c <main+0x728>
		{
			HAL_Delay(10);
 8002764:	200a      	movs	r0, #10
 8002766:	f000 fd37 	bl	80031d8 <HAL_Delay>
			//			test[0] = 's';
			//			test[1] = '0';
			if (gestureAvailable())
 800276a:	f7fd ff5f 	bl	800062c <gestureAvailable>
 800276e:	1e03      	subs	r3, r0, #0
 8002770:	d064      	beq.n	800283c <main+0x728>
			{
				//				test[1] = 'L';
				//				HAL_UART_Transmit(&huart1, &test[0], 5, 100);
				uint8_t gesture = readGesture();
 8002772:	1dbc      	adds	r4, r7, #6
 8002774:	f7fd fe44 	bl	8000400 <readGesture>
 8002778:	0003      	movs	r3, r0
 800277a:	7023      	strb	r3, [r4, #0]
				switch (gesture)
 800277c:	1dbb      	adds	r3, r7, #6
 800277e:	781b      	ldrb	r3, [r3, #0]
 8002780:	2b03      	cmp	r3, #3
 8002782:	d04b      	beq.n	800281c <main+0x708>
 8002784:	dc59      	bgt.n	800283a <main+0x726>
 8002786:	2b02      	cmp	r3, #2
 8002788:	d039      	beq.n	80027fe <main+0x6ea>
 800278a:	dc56      	bgt.n	800283a <main+0x726>
 800278c:	2b00      	cmp	r3, #0
 800278e:	d002      	beq.n	8002796 <main+0x682>
 8002790:	2b01      	cmp	r3, #1
 8002792:	d025      	beq.n	80027e0 <main+0x6cc>
					// lcd_puts(2, 1, (int8_t *)"RRRR");
					interrupt_reg.update_data = 1;
					break;

				default:
					break;
 8002794:	e051      	b.n	800283a <main+0x726>
					beep_sound();
 8002796:	f7ff fca3 	bl	80020e0 <beep_sound>
					key_pressed.prv = 1;
 800279a:	4a0b      	ldr	r2, [pc, #44]	; (80027c8 <main+0x6b4>)
 800279c:	7813      	ldrb	r3, [r2, #0]
 800279e:	2101      	movs	r1, #1
 80027a0:	430b      	orrs	r3, r1
 80027a2:	7013      	strb	r3, [r2, #0]
					update_key_press();
 80027a4:	f7fe fb66 	bl	8000e74 <update_key_press>
					interrupt_reg.update_data = 1;
 80027a8:	4a05      	ldr	r2, [pc, #20]	; (80027c0 <main+0x6ac>)
 80027aa:	7813      	ldrb	r3, [r2, #0]
 80027ac:	2120      	movs	r1, #32
 80027ae:	430b      	orrs	r3, r1
 80027b0:	7013      	strb	r3, [r2, #0]
					break;
 80027b2:	e043      	b.n	800283c <main+0x728>
 80027b4:	20000224 	.word	0x20000224
 80027b8:	2000009f 	.word	0x2000009f
 80027bc:	20000004 	.word	0x20000004
 80027c0:	200000b0 	.word	0x200000b0
 80027c4:	48000400 	.word	0x48000400
 80027c8:	200000ac 	.word	0x200000ac
 80027cc:	00001388 	.word	0x00001388
 80027d0:	20000008 	.word	0x20000008
 80027d4:	2000009e 	.word	0x2000009e
 80027d8:	08007398 	.word	0x08007398
 80027dc:	0800739c 	.word	0x0800739c
					beep_sound();
 80027e0:	f7ff fc7e 	bl	80020e0 <beep_sound>
					key_pressed.nxt = 1;
 80027e4:	4a57      	ldr	r2, [pc, #348]	; (8002944 <main+0x830>)
 80027e6:	7813      	ldrb	r3, [r2, #0]
 80027e8:	2102      	movs	r1, #2
 80027ea:	430b      	orrs	r3, r1
 80027ec:	7013      	strb	r3, [r2, #0]
					update_key_press();
 80027ee:	f7fe fb41 	bl	8000e74 <update_key_press>
					interrupt_reg.update_data = 1;
 80027f2:	4a55      	ldr	r2, [pc, #340]	; (8002948 <main+0x834>)
 80027f4:	7813      	ldrb	r3, [r2, #0]
 80027f6:	2120      	movs	r1, #32
 80027f8:	430b      	orrs	r3, r1
 80027fa:	7013      	strb	r3, [r2, #0]
					break;
 80027fc:	e01e      	b.n	800283c <main+0x728>
					beep_sound();
 80027fe:	f7ff fc6f 	bl	80020e0 <beep_sound>
					key_pressed.neg = 1;
 8002802:	4a50      	ldr	r2, [pc, #320]	; (8002944 <main+0x830>)
 8002804:	7813      	ldrb	r3, [r2, #0]
 8002806:	2110      	movs	r1, #16
 8002808:	430b      	orrs	r3, r1
 800280a:	7013      	strb	r3, [r2, #0]
					update_key_press();
 800280c:	f7fe fb32 	bl	8000e74 <update_key_press>
					interrupt_reg.update_data = 1;
 8002810:	4a4d      	ldr	r2, [pc, #308]	; (8002948 <main+0x834>)
 8002812:	7813      	ldrb	r3, [r2, #0]
 8002814:	2120      	movs	r1, #32
 8002816:	430b      	orrs	r3, r1
 8002818:	7013      	strb	r3, [r2, #0]
					break;
 800281a:	e00f      	b.n	800283c <main+0x728>
					beep_sound();
 800281c:	f7ff fc60 	bl	80020e0 <beep_sound>
					key_pressed.pos = 1;
 8002820:	4a48      	ldr	r2, [pc, #288]	; (8002944 <main+0x830>)
 8002822:	7813      	ldrb	r3, [r2, #0]
 8002824:	2108      	movs	r1, #8
 8002826:	430b      	orrs	r3, r1
 8002828:	7013      	strb	r3, [r2, #0]
					update_key_press();
 800282a:	f7fe fb23 	bl	8000e74 <update_key_press>
					interrupt_reg.update_data = 1;
 800282e:	4a46      	ldr	r2, [pc, #280]	; (8002948 <main+0x834>)
 8002830:	7813      	ldrb	r3, [r2, #0]
 8002832:	2120      	movs	r1, #32
 8002834:	430b      	orrs	r3, r1
 8002836:	7013      	strb	r3, [r2, #0]
					break;
 8002838:	e000      	b.n	800283c <main+0x728>
					break;
 800283a:	46c0      	nop			; (mov r8, r8)
				}
			}
		}

		if (interrupt_reg.update_data)
 800283c:	4b42      	ldr	r3, [pc, #264]	; (8002948 <main+0x834>)
 800283e:	781b      	ldrb	r3, [r3, #0]
 8002840:	069b      	lsls	r3, r3, #26
 8002842:	0fdb      	lsrs	r3, r3, #31
 8002844:	b2db      	uxtb	r3, r3
 8002846:	2b00      	cmp	r3, #0
 8002848:	d059      	beq.n	80028fe <main+0x7ea>
		{
			//			char buffers[3];
			update_new_data();
 800284a:	f7fe fd33 	bl	80012b4 <update_new_data>

			if (current_pos.position_cursor == 7)
 800284e:	4b3f      	ldr	r3, [pc, #252]	; (800294c <main+0x838>)
 8002850:	781b      	ldrb	r3, [r3, #0]
 8002852:	b25b      	sxtb	r3, r3
 8002854:	2b07      	cmp	r3, #7
 8002856:	d118      	bne.n	800288a <main+0x776>
				//						lcd_clear();
				//						page_2_print();
				//					}
				//					update_screen_data_2();

				if (pg2_fc == 0)
 8002858:	4b3d      	ldr	r3, [pc, #244]	; (8002950 <main+0x83c>)
 800285a:	781b      	ldrb	r3, [r3, #0]
 800285c:	2b00      	cmp	r3, #0
 800285e:	d10d      	bne.n	800287c <main+0x768>
				{
					//						lcd_clear();
					if (last_pg != 2)
 8002860:	4b3c      	ldr	r3, [pc, #240]	; (8002954 <main+0x840>)
 8002862:	781b      	ldrb	r3, [r3, #0]
 8002864:	2b02      	cmp	r3, #2
 8002866:	d003      	beq.n	8002870 <main+0x75c>
					{
						lcd_clear();
 8002868:	f7fe fa0e 	bl	8000c88 <lcd_clear>
						page_2_print();
 800286c:	f7fe fdde 	bl	800142c <page_2_print>
					}

					last_pg = 2;
 8002870:	4b38      	ldr	r3, [pc, #224]	; (8002954 <main+0x840>)
 8002872:	2202      	movs	r2, #2
 8002874:	701a      	strb	r2, [r3, #0]
					update_screen_data_2();
 8002876:	f7fe fdf5 	bl	8001464 <update_screen_data_2>
 800287a:	e03b      	b.n	80028f4 <main+0x7e0>
				}
				else if (pg2_fc == 1)
 800287c:	4b34      	ldr	r3, [pc, #208]	; (8002950 <main+0x83c>)
 800287e:	781b      	ldrb	r3, [r3, #0]
 8002880:	2b01      	cmp	r3, #1
 8002882:	d137      	bne.n	80028f4 <main+0x7e0>
					// 	last_pg = 3;
					// }
					//						lcd_clear();
					//						page_3_print();

					update_screen_data_3();
 8002884:	f7fe fe08 	bl	8001498 <update_screen_data_3>
 8002888:	e034      	b.n	80028f4 <main+0x7e0>
				}

				//					sprintf(buffers, "%02d", current_pos.position_cursor);
				//					lcd_puts(3, 16, (int8_t *)buffers);
			}
			else if ((current_pos.position_cursor >= 1) || (current_pos.position_cursor <= 6))
 800288a:	4b30      	ldr	r3, [pc, #192]	; (800294c <main+0x838>)
 800288c:	781b      	ldrb	r3, [r3, #0]
 800288e:	b25b      	sxtb	r3, r3
 8002890:	2b00      	cmp	r3, #0
 8002892:	dc04      	bgt.n	800289e <main+0x78a>
 8002894:	4b2d      	ldr	r3, [pc, #180]	; (800294c <main+0x838>)
 8002896:	781b      	ldrb	r3, [r3, #0]
 8002898:	b25b      	sxtb	r3, r3
 800289a:	2b06      	cmp	r3, #6
 800289c:	dc2a      	bgt.n	80028f4 <main+0x7e0>
			{
				if (pg2_fc == 0)
 800289e:	4b2c      	ldr	r3, [pc, #176]	; (8002950 <main+0x83c>)
 80028a0:	781b      	ldrb	r3, [r3, #0]
 80028a2:	2b00      	cmp	r3, #0
 80028a4:	d10d      	bne.n	80028c2 <main+0x7ae>
				{

					if (last_pg != 1)
 80028a6:	4b2b      	ldr	r3, [pc, #172]	; (8002954 <main+0x840>)
 80028a8:	781b      	ldrb	r3, [r3, #0]
 80028aa:	2b01      	cmp	r3, #1
 80028ac:	d003      	beq.n	80028b6 <main+0x7a2>
					{
						lcd_clear();
 80028ae:	f7fe f9eb 	bl	8000c88 <lcd_clear>
						page1_print();
 80028b2:	f7ff fb19 	bl	8001ee8 <page1_print>
					}

					last_pg = 1;
 80028b6:	4b27      	ldr	r3, [pc, #156]	; (8002954 <main+0x840>)
 80028b8:	2201      	movs	r2, #1
 80028ba:	701a      	strb	r2, [r3, #0]
					update_screen_data();
 80028bc:	f7ff f80a 	bl	80018d4 <update_screen_data>
 80028c0:	e018      	b.n	80028f4 <main+0x7e0>

					//					sprintf(buffers, "%02d", current_pos.position_cursor);
					//				lcd_puts(2, 16, (int8_t *)buffers);
				}

				else if (pg2_fc == 1)
 80028c2:	4b23      	ldr	r3, [pc, #140]	; (8002950 <main+0x83c>)
 80028c4:	781b      	ldrb	r3, [r3, #0]
 80028c6:	2b01      	cmp	r3, #1
 80028c8:	d114      	bne.n	80028f4 <main+0x7e0>
				{
					if (current_pos.position_cursor > 3)
 80028ca:	4b20      	ldr	r3, [pc, #128]	; (800294c <main+0x838>)
 80028cc:	781b      	ldrb	r3, [r3, #0]
 80028ce:	b25b      	sxtb	r3, r3
 80028d0:	2b03      	cmp	r3, #3
 80028d2:	dd02      	ble.n	80028da <main+0x7c6>
					{
						current_pos.position_cursor = 7;
 80028d4:	4b1d      	ldr	r3, [pc, #116]	; (800294c <main+0x838>)
 80028d6:	2207      	movs	r2, #7
 80028d8:	701a      	strb	r2, [r3, #0]
					}

					if (last_pg != 3)
 80028da:	4b1e      	ldr	r3, [pc, #120]	; (8002954 <main+0x840>)
 80028dc:	781b      	ldrb	r3, [r3, #0]
 80028de:	2b03      	cmp	r3, #3
 80028e0:	d003      	beq.n	80028ea <main+0x7d6>
					{
						lcd_clear();
 80028e2:	f7fe f9d1 	bl	8000c88 <lcd_clear>
						page_3_print();
 80028e6:	f7fe fdb7 	bl	8001458 <page_3_print>
					}

					last_pg = 3;
 80028ea:	4b1a      	ldr	r3, [pc, #104]	; (8002954 <main+0x840>)
 80028ec:	2203      	movs	r2, #3
 80028ee:	701a      	strb	r2, [r3, #0]
					update_screen_data_3();
 80028f0:	f7fe fdd2 	bl	8001498 <update_screen_data_3>
					//					sprintf(buffers, "%02d", current_pos.position_cursor);
					//					lcd_puts(3, 16, (int8_t *)buffers);
				}
			}

			interrupt_reg.update_data = 0;
 80028f4:	4a14      	ldr	r2, [pc, #80]	; (8002948 <main+0x834>)
 80028f6:	7813      	ldrb	r3, [r2, #0]
 80028f8:	2120      	movs	r1, #32
 80028fa:	438b      	bics	r3, r1
 80028fc:	7013      	strb	r3, [r2, #0]
		}

		if (page_change_flag)
 80028fe:	240f      	movs	r4, #15
 8002900:	193b      	adds	r3, r7, r4
 8002902:	781b      	ldrb	r3, [r3, #0]
 8002904:	2b00      	cmp	r3, #0
 8002906:	d100      	bne.n	800290a <main+0x7f6>
 8002908:	e46c      	b.n	80021e4 <main+0xd0>
		{
			clock_page();
 800290a:	f7fe f9c7 	bl	8000c9c <clock_page>
			Total_Time_Print(tt_cnt); // tt_cnt timer_intrupt
 800290e:	4b12      	ldr	r3, [pc, #72]	; (8002958 <main+0x844>)
 8002910:	681b      	ldr	r3, [r3, #0]
 8002912:	0018      	movs	r0, r3
 8002914:	f7fe f9ea 	bl	8000cec <Total_Time_Print>
			HAL_Delay(5000);
 8002918:	4b10      	ldr	r3, [pc, #64]	; (800295c <main+0x848>)
 800291a:	0018      	movs	r0, r3
 800291c:	f000 fc5c 	bl	80031d8 <HAL_Delay>
			lcd_clear();
 8002920:	f7fe f9b2 	bl	8000c88 <lcd_clear>
			page1_print();
 8002924:	f7ff fae0 	bl	8001ee8 <page1_print>
			page_change_flag = 0;
 8002928:	193b      	adds	r3, r7, r4
 800292a:	2200      	movs	r2, #0
 800292c:	701a      	strb	r2, [r3, #0]
			interrupt_reg.update_data = 0;
 800292e:	4a06      	ldr	r2, [pc, #24]	; (8002948 <main+0x834>)
 8002930:	7813      	ldrb	r3, [r2, #0]
 8002932:	2120      	movs	r1, #32
 8002934:	438b      	bics	r3, r1
 8002936:	7013      	strb	r3, [r2, #0]
			interrupt_reg.key_flag = 0;
 8002938:	4a03      	ldr	r2, [pc, #12]	; (8002948 <main+0x834>)
 800293a:	7813      	ldrb	r3, [r2, #0]
 800293c:	2101      	movs	r1, #1
 800293e:	438b      	bics	r3, r1
 8002940:	7013      	strb	r3, [r2, #0]
		if (int_flag == 1)
 8002942:	e44f      	b.n	80021e4 <main+0xd0>
 8002944:	200000ac 	.word	0x200000ac
 8002948:	200000b0 	.word	0x200000b0
 800294c:	20000004 	.word	0x20000004
 8002950:	2000009f 	.word	0x2000009f
 8002954:	2000009e 	.word	0x2000009e
 8002958:	200000a4 	.word	0x200000a4
 800295c:	00001388 	.word	0x00001388

08002960 <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 8002960:	b590      	push	{r4, r7, lr}
 8002962:	b095      	sub	sp, #84	; 0x54
 8002964:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002966:	2420      	movs	r4, #32
 8002968:	193b      	adds	r3, r7, r4
 800296a:	0018      	movs	r0, r3
 800296c:	2330      	movs	r3, #48	; 0x30
 800296e:	001a      	movs	r2, r3
 8002970:	2100      	movs	r1, #0
 8002972:	f004 f81d 	bl	80069b0 <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002976:	2310      	movs	r3, #16
 8002978:	18fb      	adds	r3, r7, r3
 800297a:	0018      	movs	r0, r3
 800297c:	2310      	movs	r3, #16
 800297e:	001a      	movs	r2, r3
 8002980:	2100      	movs	r1, #0
 8002982:	f004 f815 	bl	80069b0 <memset>
	RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002986:	003b      	movs	r3, r7
 8002988:	0018      	movs	r0, r3
 800298a:	2310      	movs	r3, #16
 800298c:	001a      	movs	r2, r3
 800298e:	2100      	movs	r1, #0
 8002990:	f004 f80e 	bl	80069b0 <memset>

	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002994:	0021      	movs	r1, r4
 8002996:	187b      	adds	r3, r7, r1
 8002998:	2202      	movs	r2, #2
 800299a:	601a      	str	r2, [r3, #0]
	RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800299c:	187b      	adds	r3, r7, r1
 800299e:	2201      	movs	r2, #1
 80029a0:	60da      	str	r2, [r3, #12]
	RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80029a2:	187b      	adds	r3, r7, r1
 80029a4:	2210      	movs	r2, #16
 80029a6:	611a      	str	r2, [r3, #16]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80029a8:	187b      	adds	r3, r7, r1
 80029aa:	2202      	movs	r2, #2
 80029ac:	621a      	str	r2, [r3, #32]
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80029ae:	187b      	adds	r3, r7, r1
 80029b0:	2200      	movs	r2, #0
 80029b2:	625a      	str	r2, [r3, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL8;
 80029b4:	187b      	adds	r3, r7, r1
 80029b6:	22c0      	movs	r2, #192	; 0xc0
 80029b8:	0352      	lsls	r2, r2, #13
 80029ba:	629a      	str	r2, [r3, #40]	; 0x28
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 80029bc:	187b      	adds	r3, r7, r1
 80029be:	2200      	movs	r2, #0
 80029c0:	62da      	str	r2, [r3, #44]	; 0x2c
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80029c2:	187b      	adds	r3, r7, r1
 80029c4:	0018      	movs	r0, r3
 80029c6:	f001 fdd7 	bl	8004578 <HAL_RCC_OscConfig>
 80029ca:	1e03      	subs	r3, r0, #0
 80029cc:	d001      	beq.n	80029d2 <SystemClock_Config+0x72>
	{
		Error_Handler();
 80029ce:	f000 f997 	bl	8002d00 <Error_Handler>
	}

	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 80029d2:	2110      	movs	r1, #16
 80029d4:	187b      	adds	r3, r7, r1
 80029d6:	2207      	movs	r2, #7
 80029d8:	601a      	str	r2, [r3, #0]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80029da:	187b      	adds	r3, r7, r1
 80029dc:	2202      	movs	r2, #2
 80029de:	605a      	str	r2, [r3, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80029e0:	187b      	adds	r3, r7, r1
 80029e2:	2200      	movs	r2, #0
 80029e4:	609a      	str	r2, [r3, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80029e6:	187b      	adds	r3, r7, r1
 80029e8:	2200      	movs	r2, #0
 80029ea:	60da      	str	r2, [r3, #12]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80029ec:	187b      	adds	r3, r7, r1
 80029ee:	2101      	movs	r1, #1
 80029f0:	0018      	movs	r0, r3
 80029f2:	f002 f8db 	bl	8004bac <HAL_RCC_ClockConfig>
 80029f6:	1e03      	subs	r3, r0, #0
 80029f8:	d001      	beq.n	80029fe <SystemClock_Config+0x9e>
	{
		Error_Handler();
 80029fa:	f000 f981 	bl	8002d00 <Error_Handler>
	}
	PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1 | RCC_PERIPHCLK_I2C1;
 80029fe:	003b      	movs	r3, r7
 8002a00:	2221      	movs	r2, #33	; 0x21
 8002a02:	601a      	str	r2, [r3, #0]
	PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8002a04:	003b      	movs	r3, r7
 8002a06:	2200      	movs	r2, #0
 8002a08:	609a      	str	r2, [r3, #8]
	PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 8002a0a:	003b      	movs	r3, r7
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	60da      	str	r2, [r3, #12]
	if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002a10:	003b      	movs	r3, r7
 8002a12:	0018      	movs	r0, r3
 8002a14:	f002 fa0e 	bl	8004e34 <HAL_RCCEx_PeriphCLKConfig>
 8002a18:	1e03      	subs	r3, r0, #0
 8002a1a:	d001      	beq.n	8002a20 <SystemClock_Config+0xc0>
	{
		Error_Handler();
 8002a1c:	f000 f970 	bl	8002d00 <Error_Handler>
	}
}
 8002a20:	46c0      	nop			; (mov r8, r8)
 8002a22:	46bd      	mov	sp, r7
 8002a24:	b015      	add	sp, #84	; 0x54
 8002a26:	bd90      	pop	{r4, r7, pc}

08002a28 <MX_I2C1_Init>:
 * @brief I2C1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_I2C1_Init(void)
{
 8002a28:	b580      	push	{r7, lr}
 8002a2a:	af00      	add	r7, sp, #0
	/* USER CODE END I2C1_Init 0 */

	/* USER CODE BEGIN I2C1_Init 1 */

	/* USER CODE END I2C1_Init 1 */
	hi2c1.Instance = I2C1;
 8002a2c:	4b1b      	ldr	r3, [pc, #108]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a2e:	4a1c      	ldr	r2, [pc, #112]	; (8002aa0 <MX_I2C1_Init+0x78>)
 8002a30:	601a      	str	r2, [r3, #0]
	hi2c1.Init.Timing = 0x2000090E;
 8002a32:	4b1a      	ldr	r3, [pc, #104]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a34:	4a1b      	ldr	r2, [pc, #108]	; (8002aa4 <MX_I2C1_Init+0x7c>)
 8002a36:	605a      	str	r2, [r3, #4]
	hi2c1.Init.OwnAddress1 = 0;
 8002a38:	4b18      	ldr	r3, [pc, #96]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	609a      	str	r2, [r3, #8]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002a3e:	4b17      	ldr	r3, [pc, #92]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a40:	2201      	movs	r2, #1
 8002a42:	60da      	str	r2, [r3, #12]
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002a44:	4b15      	ldr	r3, [pc, #84]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a46:	2200      	movs	r2, #0
 8002a48:	611a      	str	r2, [r3, #16]
	hi2c1.Init.OwnAddress2 = 0;
 8002a4a:	4b14      	ldr	r3, [pc, #80]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a4c:	2200      	movs	r2, #0
 8002a4e:	615a      	str	r2, [r3, #20]
	hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8002a50:	4b12      	ldr	r3, [pc, #72]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a52:	2200      	movs	r2, #0
 8002a54:	619a      	str	r2, [r3, #24]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002a56:	4b11      	ldr	r3, [pc, #68]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a58:	2200      	movs	r2, #0
 8002a5a:	61da      	str	r2, [r3, #28]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002a5c:	4b0f      	ldr	r3, [pc, #60]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a5e:	2200      	movs	r2, #0
 8002a60:	621a      	str	r2, [r3, #32]
	if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002a62:	4b0e      	ldr	r3, [pc, #56]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a64:	0018      	movs	r0, r3
 8002a66:	f000 fefd 	bl	8003864 <HAL_I2C_Init>
 8002a6a:	1e03      	subs	r3, r0, #0
 8002a6c:	d001      	beq.n	8002a72 <MX_I2C1_Init+0x4a>
	{
		Error_Handler();
 8002a6e:	f000 f947 	bl	8002d00 <Error_Handler>
	}

	/** Configure Analogue filter
	 */
	if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002a72:	4b0a      	ldr	r3, [pc, #40]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a74:	2100      	movs	r1, #0
 8002a76:	0018      	movs	r0, r3
 8002a78:	f001 fce6 	bl	8004448 <HAL_I2CEx_ConfigAnalogFilter>
 8002a7c:	1e03      	subs	r3, r0, #0
 8002a7e:	d001      	beq.n	8002a84 <MX_I2C1_Init+0x5c>
	{
		Error_Handler();
 8002a80:	f000 f93e 	bl	8002d00 <Error_Handler>
	}

	/** Configure Digital filter
	 */
	if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002a84:	4b05      	ldr	r3, [pc, #20]	; (8002a9c <MX_I2C1_Init+0x74>)
 8002a86:	2100      	movs	r1, #0
 8002a88:	0018      	movs	r0, r3
 8002a8a:	f001 fd29 	bl	80044e0 <HAL_I2CEx_ConfigDigitalFilter>
 8002a8e:	1e03      	subs	r3, r0, #0
 8002a90:	d001      	beq.n	8002a96 <MX_I2C1_Init+0x6e>
	{
		Error_Handler();
 8002a92:	f000 f935 	bl	8002d00 <Error_Handler>
	}
	/* USER CODE BEGIN I2C1_Init 2 */

	/* USER CODE END I2C1_Init 2 */
}
 8002a96:	46c0      	nop			; (mov r8, r8)
 8002a98:	46bd      	mov	sp, r7
 8002a9a:	bd80      	pop	{r7, pc}
 8002a9c:	200000b4 	.word	0x200000b4
 8002aa0:	40005400 	.word	0x40005400
 8002aa4:	2000090e 	.word	0x2000090e

08002aa8 <MX_TIM6_Init>:
 * @brief TIM6 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM6_Init(void)
{
 8002aa8:	b580      	push	{r7, lr}
 8002aaa:	af00      	add	r7, sp, #0
	/* USER CODE END TIM6_Init 0 */

	/* USER CODE BEGIN TIM6_Init 1 */

	/* USER CODE END TIM6_Init 1 */
	htim6.Instance = TIM6;
 8002aac:	4b0c      	ldr	r3, [pc, #48]	; (8002ae0 <MX_TIM6_Init+0x38>)
 8002aae:	4a0d      	ldr	r2, [pc, #52]	; (8002ae4 <MX_TIM6_Init+0x3c>)
 8002ab0:	601a      	str	r2, [r3, #0]
	htim6.Init.Prescaler = 32000 - 1;
 8002ab2:	4b0b      	ldr	r3, [pc, #44]	; (8002ae0 <MX_TIM6_Init+0x38>)
 8002ab4:	4a0c      	ldr	r2, [pc, #48]	; (8002ae8 <MX_TIM6_Init+0x40>)
 8002ab6:	605a      	str	r2, [r3, #4]
	htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002ab8:	4b09      	ldr	r3, [pc, #36]	; (8002ae0 <MX_TIM6_Init+0x38>)
 8002aba:	2200      	movs	r2, #0
 8002abc:	609a      	str	r2, [r3, #8]
	htim6.Init.Period = 1000 - 1;
 8002abe:	4b08      	ldr	r3, [pc, #32]	; (8002ae0 <MX_TIM6_Init+0x38>)
 8002ac0:	4a0a      	ldr	r2, [pc, #40]	; (8002aec <MX_TIM6_Init+0x44>)
 8002ac2:	60da      	str	r2, [r3, #12]
	htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002ac4:	4b06      	ldr	r3, [pc, #24]	; (8002ae0 <MX_TIM6_Init+0x38>)
 8002ac6:	2280      	movs	r2, #128	; 0x80
 8002ac8:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8002aca:	4b05      	ldr	r3, [pc, #20]	; (8002ae0 <MX_TIM6_Init+0x38>)
 8002acc:	0018      	movs	r0, r3
 8002ace:	f002 fa7f 	bl	8004fd0 <HAL_TIM_Base_Init>
 8002ad2:	1e03      	subs	r3, r0, #0
 8002ad4:	d001      	beq.n	8002ada <MX_TIM6_Init+0x32>
	{
		Error_Handler();
 8002ad6:	f000 f913 	bl	8002d00 <Error_Handler>
	}
	/* USER CODE BEGIN TIM6_Init 2 */

	/* USER CODE END TIM6_Init 2 */
}
 8002ada:	46c0      	nop			; (mov r8, r8)
 8002adc:	46bd      	mov	sp, r7
 8002ade:	bd80      	pop	{r7, pc}
 8002ae0:	20000108 	.word	0x20000108
 8002ae4:	40001000 	.word	0x40001000
 8002ae8:	00007cff 	.word	0x00007cff
 8002aec:	000003e7 	.word	0x000003e7

08002af0 <MX_TIM14_Init>:
 * @brief TIM14 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM14_Init(void)
{
 8002af0:	b580      	push	{r7, lr}
 8002af2:	af00      	add	r7, sp, #0
	/* USER CODE END TIM14_Init 0 */

	/* USER CODE BEGIN TIM14_Init 1 */

	/* USER CODE END TIM14_Init 1 */
	htim14.Instance = TIM14;
 8002af4:	4b0e      	ldr	r3, [pc, #56]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002af6:	4a0f      	ldr	r2, [pc, #60]	; (8002b34 <MX_TIM14_Init+0x44>)
 8002af8:	601a      	str	r2, [r3, #0]
	htim14.Init.Prescaler = 32000 - 1;
 8002afa:	4b0d      	ldr	r3, [pc, #52]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002afc:	4a0e      	ldr	r2, [pc, #56]	; (8002b38 <MX_TIM14_Init+0x48>)
 8002afe:	605a      	str	r2, [r3, #4]
	htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002b00:	4b0b      	ldr	r3, [pc, #44]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002b02:	2200      	movs	r2, #0
 8002b04:	609a      	str	r2, [r3, #8]
	htim14.Init.Period = 3000;
 8002b06:	4b0a      	ldr	r3, [pc, #40]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002b08:	4a0c      	ldr	r2, [pc, #48]	; (8002b3c <MX_TIM14_Init+0x4c>)
 8002b0a:	60da      	str	r2, [r3, #12]
	htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002b0c:	4b08      	ldr	r3, [pc, #32]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002b0e:	2200      	movs	r2, #0
 8002b10:	611a      	str	r2, [r3, #16]
	htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002b12:	4b07      	ldr	r3, [pc, #28]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002b14:	2200      	movs	r2, #0
 8002b16:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8002b18:	4b05      	ldr	r3, [pc, #20]	; (8002b30 <MX_TIM14_Init+0x40>)
 8002b1a:	0018      	movs	r0, r3
 8002b1c:	f002 fa58 	bl	8004fd0 <HAL_TIM_Base_Init>
 8002b20:	1e03      	subs	r3, r0, #0
 8002b22:	d001      	beq.n	8002b28 <MX_TIM14_Init+0x38>
	{
		Error_Handler();
 8002b24:	f000 f8ec 	bl	8002d00 <Error_Handler>
	}
	/* USER CODE BEGIN TIM14_Init 2 */

	/* USER CODE END TIM14_Init 2 */
}
 8002b28:	46c0      	nop			; (mov r8, r8)
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	bd80      	pop	{r7, pc}
 8002b2e:	46c0      	nop			; (mov r8, r8)
 8002b30:	20000150 	.word	0x20000150
 8002b34:	40002000 	.word	0x40002000
 8002b38:	00007cff 	.word	0x00007cff
 8002b3c:	00000bb8 	.word	0x00000bb8

08002b40 <MX_USART1_UART_Init>:
 * @brief USART1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART1_UART_Init(void)
{
 8002b40:	b580      	push	{r7, lr}
 8002b42:	af00      	add	r7, sp, #0
	/* USER CODE END USART1_Init 0 */

	/* USER CODE BEGIN USART1_Init 1 */

	/* USER CODE END USART1_Init 1 */
	huart1.Instance = USART1;
 8002b44:	4b14      	ldr	r3, [pc, #80]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b46:	4a15      	ldr	r2, [pc, #84]	; (8002b9c <MX_USART1_UART_Init+0x5c>)
 8002b48:	601a      	str	r2, [r3, #0]
	huart1.Init.BaudRate = 115200;
 8002b4a:	4b13      	ldr	r3, [pc, #76]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b4c:	22e1      	movs	r2, #225	; 0xe1
 8002b4e:	0252      	lsls	r2, r2, #9
 8002b50:	605a      	str	r2, [r3, #4]
	huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002b52:	4b11      	ldr	r3, [pc, #68]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b54:	2200      	movs	r2, #0
 8002b56:	609a      	str	r2, [r3, #8]
	huart1.Init.StopBits = UART_STOPBITS_1;
 8002b58:	4b0f      	ldr	r3, [pc, #60]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	60da      	str	r2, [r3, #12]
	huart1.Init.Parity = UART_PARITY_NONE;
 8002b5e:	4b0e      	ldr	r3, [pc, #56]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b60:	2200      	movs	r2, #0
 8002b62:	611a      	str	r2, [r3, #16]
	huart1.Init.Mode = UART_MODE_TX_RX;
 8002b64:	4b0c      	ldr	r3, [pc, #48]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b66:	220c      	movs	r2, #12
 8002b68:	615a      	str	r2, [r3, #20]
	huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002b6a:	4b0b      	ldr	r3, [pc, #44]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b6c:	2200      	movs	r2, #0
 8002b6e:	619a      	str	r2, [r3, #24]
	huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8002b70:	4b09      	ldr	r3, [pc, #36]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b72:	2200      	movs	r2, #0
 8002b74:	61da      	str	r2, [r3, #28]
	huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002b76:	4b08      	ldr	r3, [pc, #32]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b78:	2200      	movs	r2, #0
 8002b7a:	621a      	str	r2, [r3, #32]
	huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002b7c:	4b06      	ldr	r3, [pc, #24]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b7e:	2200      	movs	r2, #0
 8002b80:	625a      	str	r2, [r3, #36]	; 0x24
	if (HAL_UART_Init(&huart1) != HAL_OK)
 8002b82:	4b05      	ldr	r3, [pc, #20]	; (8002b98 <MX_USART1_UART_Init+0x58>)
 8002b84:	0018      	movs	r0, r3
 8002b86:	f002 fca9 	bl	80054dc <HAL_UART_Init>
 8002b8a:	1e03      	subs	r3, r0, #0
 8002b8c:	d001      	beq.n	8002b92 <MX_USART1_UART_Init+0x52>
	{
		Error_Handler();
 8002b8e:	f000 f8b7 	bl	8002d00 <Error_Handler>
	}
	/* USER CODE BEGIN USART1_Init 2 */

	/* USER CODE END USART1_Init 2 */
}
 8002b92:	46c0      	nop			; (mov r8, r8)
 8002b94:	46bd      	mov	sp, r7
 8002b96:	bd80      	pop	{r7, pc}
 8002b98:	20000198 	.word	0x20000198
 8002b9c:	40013800 	.word	0x40013800

08002ba0 <MX_GPIO_Init>:
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 8002ba0:	b590      	push	{r4, r7, lr}
 8002ba2:	b089      	sub	sp, #36	; 0x24
 8002ba4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002ba6:	240c      	movs	r4, #12
 8002ba8:	193b      	adds	r3, r7, r4
 8002baa:	0018      	movs	r0, r3
 8002bac:	2314      	movs	r3, #20
 8002bae:	001a      	movs	r2, r3
 8002bb0:	2100      	movs	r1, #0
 8002bb2:	f003 fefd 	bl	80069b0 <memset>
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOF_CLK_ENABLE();
 8002bb6:	4b4e      	ldr	r3, [pc, #312]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bb8:	695a      	ldr	r2, [r3, #20]
 8002bba:	4b4d      	ldr	r3, [pc, #308]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bbc:	2180      	movs	r1, #128	; 0x80
 8002bbe:	03c9      	lsls	r1, r1, #15
 8002bc0:	430a      	orrs	r2, r1
 8002bc2:	615a      	str	r2, [r3, #20]
 8002bc4:	4b4a      	ldr	r3, [pc, #296]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bc6:	695a      	ldr	r2, [r3, #20]
 8002bc8:	2380      	movs	r3, #128	; 0x80
 8002bca:	03db      	lsls	r3, r3, #15
 8002bcc:	4013      	ands	r3, r2
 8002bce:	60bb      	str	r3, [r7, #8]
 8002bd0:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8002bd2:	4b47      	ldr	r3, [pc, #284]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bd4:	695a      	ldr	r2, [r3, #20]
 8002bd6:	4b46      	ldr	r3, [pc, #280]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bd8:	2180      	movs	r1, #128	; 0x80
 8002bda:	0289      	lsls	r1, r1, #10
 8002bdc:	430a      	orrs	r2, r1
 8002bde:	615a      	str	r2, [r3, #20]
 8002be0:	4b43      	ldr	r3, [pc, #268]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002be2:	695a      	ldr	r2, [r3, #20]
 8002be4:	2380      	movs	r3, #128	; 0x80
 8002be6:	029b      	lsls	r3, r3, #10
 8002be8:	4013      	ands	r3, r2
 8002bea:	607b      	str	r3, [r7, #4]
 8002bec:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8002bee:	4b40      	ldr	r3, [pc, #256]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bf0:	695a      	ldr	r2, [r3, #20]
 8002bf2:	4b3f      	ldr	r3, [pc, #252]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bf4:	2180      	movs	r1, #128	; 0x80
 8002bf6:	02c9      	lsls	r1, r1, #11
 8002bf8:	430a      	orrs	r2, r1
 8002bfa:	615a      	str	r2, [r3, #20]
 8002bfc:	4b3c      	ldr	r3, [pc, #240]	; (8002cf0 <MX_GPIO_Init+0x150>)
 8002bfe:	695a      	ldr	r2, [r3, #20]
 8002c00:	2380      	movs	r3, #128	; 0x80
 8002c02:	02db      	lsls	r3, r3, #11
 8002c04:	4013      	ands	r3, r2
 8002c06:	603b      	str	r3, [r7, #0]
 8002c08:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, D4_Pin | D5_Pin | D6_Pin | D7_Pin | E_Pin | RS_Pin | BUZZER_Pin | PA7_Pin | LED2_Pin | LED1_Pin, GPIO_PIN_RESET);
 8002c0a:	493a      	ldr	r1, [pc, #232]	; (8002cf4 <MX_GPIO_Init+0x154>)
 8002c0c:	2390      	movs	r3, #144	; 0x90
 8002c0e:	05db      	lsls	r3, r3, #23
 8002c10:	2200      	movs	r2, #0
 8002c12:	0018      	movs	r0, r3
 8002c14:	f000 fded 	bl	80037f2 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB, PB0_Pin | GPIO_PIN_1 | PB2_Pin | GPIO_PIN_10, GPIO_PIN_RESET);
 8002c18:	4937      	ldr	r1, [pc, #220]	; (8002cf8 <MX_GPIO_Init+0x158>)
 8002c1a:	4b38      	ldr	r3, [pc, #224]	; (8002cfc <MX_GPIO_Init+0x15c>)
 8002c1c:	2200      	movs	r2, #0
 8002c1e:	0018      	movs	r0, r3
 8002c20:	f000 fde7 	bl	80037f2 <HAL_GPIO_WritePin>

	/*Configure GPIO pins : D4_Pin D5_Pin D6_Pin D7_Pin
							 E_Pin RS_Pin BUZZER_Pin PA7_Pin
							 LED2_Pin LED1_Pin */
	GPIO_InitStruct.Pin = D4_Pin | D5_Pin | D6_Pin | D7_Pin | E_Pin | RS_Pin | BUZZER_Pin | PA7_Pin | LED2_Pin | LED1_Pin;
 8002c24:	193b      	adds	r3, r7, r4
 8002c26:	4a33      	ldr	r2, [pc, #204]	; (8002cf4 <MX_GPIO_Init+0x154>)
 8002c28:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c2a:	193b      	adds	r3, r7, r4
 8002c2c:	2201      	movs	r2, #1
 8002c2e:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c30:	193b      	adds	r3, r7, r4
 8002c32:	2200      	movs	r2, #0
 8002c34:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c36:	193b      	adds	r3, r7, r4
 8002c38:	2200      	movs	r2, #0
 8002c3a:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c3c:	193a      	adds	r2, r7, r4
 8002c3e:	2390      	movs	r3, #144	; 0x90
 8002c40:	05db      	lsls	r3, r3, #23
 8002c42:	0011      	movs	r1, r2
 8002c44:	0018      	movs	r0, r3
 8002c46:	f000 fc47 	bl	80034d8 <HAL_GPIO_Init>

	/*Configure GPIO pins : PB0_Pin PB1 PB2_Pin PB10 */
	GPIO_InitStruct.Pin = PB0_Pin | GPIO_PIN_1 | PB2_Pin | GPIO_PIN_10;
 8002c4a:	193b      	adds	r3, r7, r4
 8002c4c:	4a2a      	ldr	r2, [pc, #168]	; (8002cf8 <MX_GPIO_Init+0x158>)
 8002c4e:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002c50:	193b      	adds	r3, r7, r4
 8002c52:	2201      	movs	r2, #1
 8002c54:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c56:	193b      	adds	r3, r7, r4
 8002c58:	2200      	movs	r2, #0
 8002c5a:	609a      	str	r2, [r3, #8]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002c5c:	193b      	adds	r3, r7, r4
 8002c5e:	2200      	movs	r2, #0
 8002c60:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002c62:	193b      	adds	r3, r7, r4
 8002c64:	4a25      	ldr	r2, [pc, #148]	; (8002cfc <MX_GPIO_Init+0x15c>)
 8002c66:	0019      	movs	r1, r3
 8002c68:	0010      	movs	r0, r2
 8002c6a:	f000 fc35 	bl	80034d8 <HAL_GPIO_Init>

	/*Configure GPIO pins : S_PRV_Pin S_NEXT_Pin DEPTH_Pin IR_N_Pin
							 CHANGE_N_Pin */
	GPIO_InitStruct.Pin = S_PRV_Pin | S_NEXT_Pin | DEPTH_Pin | IR_N_Pin | CHANGE_N_Pin;
 8002c6e:	193b      	adds	r3, r7, r4
 8002c70:	22f8      	movs	r2, #248	; 0xf8
 8002c72:	0212      	lsls	r2, r2, #8
 8002c74:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002c76:	193b      	adds	r3, r7, r4
 8002c78:	2288      	movs	r2, #136	; 0x88
 8002c7a:	0352      	lsls	r2, r2, #13
 8002c7c:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c7e:	193b      	adds	r3, r7, r4
 8002c80:	2200      	movs	r2, #0
 8002c82:	609a      	str	r2, [r3, #8]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002c84:	193b      	adds	r3, r7, r4
 8002c86:	4a1d      	ldr	r2, [pc, #116]	; (8002cfc <MX_GPIO_Init+0x15c>)
 8002c88:	0019      	movs	r1, r3
 8002c8a:	0010      	movs	r0, r2
 8002c8c:	f000 fc24 	bl	80034d8 <HAL_GPIO_Init>

	/*Configure GPIO pin : CHANGE_P_Pin */
	GPIO_InitStruct.Pin = CHANGE_P_Pin;
 8002c90:	193b      	adds	r3, r7, r4
 8002c92:	2280      	movs	r2, #128	; 0x80
 8002c94:	00d2      	lsls	r2, r2, #3
 8002c96:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002c98:	193b      	adds	r3, r7, r4
 8002c9a:	2288      	movs	r2, #136	; 0x88
 8002c9c:	0352      	lsls	r2, r2, #13
 8002c9e:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ca0:	193b      	adds	r3, r7, r4
 8002ca2:	2200      	movs	r2, #0
 8002ca4:	609a      	str	r2, [r3, #8]
	HAL_GPIO_Init(CHANGE_P_GPIO_Port, &GPIO_InitStruct);
 8002ca6:	193a      	adds	r2, r7, r4
 8002ca8:	2390      	movs	r3, #144	; 0x90
 8002caa:	05db      	lsls	r3, r3, #23
 8002cac:	0011      	movs	r1, r2
 8002cae:	0018      	movs	r0, r3
 8002cb0:	f000 fc12 	bl	80034d8 <HAL_GPIO_Init>

	/*Configure GPIO pin : I2C_INT_Pin */
	GPIO_InitStruct.Pin = I2C_INT_Pin;
 8002cb4:	0021      	movs	r1, r4
 8002cb6:	187b      	adds	r3, r7, r1
 8002cb8:	2280      	movs	r2, #128	; 0x80
 8002cba:	0212      	lsls	r2, r2, #8
 8002cbc:	601a      	str	r2, [r3, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002cbe:	187b      	adds	r3, r7, r1
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	605a      	str	r2, [r3, #4]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002cc4:	187b      	adds	r3, r7, r1
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	609a      	str	r2, [r3, #8]
	HAL_GPIO_Init(I2C_INT_GPIO_Port, &GPIO_InitStruct);
 8002cca:	187a      	adds	r2, r7, r1
 8002ccc:	2390      	movs	r3, #144	; 0x90
 8002cce:	05db      	lsls	r3, r3, #23
 8002cd0:	0011      	movs	r1, r2
 8002cd2:	0018      	movs	r0, r3
 8002cd4:	f000 fc00 	bl	80034d8 <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 8002cd8:	2200      	movs	r2, #0
 8002cda:	2100      	movs	r1, #0
 8002cdc:	2007      	movs	r0, #7
 8002cde:	f000 fb4b 	bl	8003378 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 8002ce2:	2007      	movs	r0, #7
 8002ce4:	f000 fb5d 	bl	80033a2 <HAL_NVIC_EnableIRQ>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 8002ce8:	46c0      	nop			; (mov r8, r8)
 8002cea:	46bd      	mov	sp, r7
 8002cec:	b009      	add	sp, #36	; 0x24
 8002cee:	bd90      	pop	{r4, r7, pc}
 8002cf0:	40021000 	.word	0x40021000
 8002cf4:	000009ff 	.word	0x000009ff
 8002cf8:	00000407 	.word	0x00000407
 8002cfc:	48000400 	.word	0x48000400

08002d00 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 8002d00:	b580      	push	{r7, lr}
 8002d02:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002d04:	b672      	cpsid	i
}
 8002d06:	46c0      	nop			; (mov r8, r8)
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8002d08:	e7fe      	b.n	8002d08 <Error_Handler+0x8>
	...

08002d0c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002d0c:	b580      	push	{r7, lr}
 8002d0e:	b082      	sub	sp, #8
 8002d10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002d12:	4b13      	ldr	r3, [pc, #76]	; (8002d60 <HAL_MspInit+0x54>)
 8002d14:	699a      	ldr	r2, [r3, #24]
 8002d16:	4b12      	ldr	r3, [pc, #72]	; (8002d60 <HAL_MspInit+0x54>)
 8002d18:	2101      	movs	r1, #1
 8002d1a:	430a      	orrs	r2, r1
 8002d1c:	619a      	str	r2, [r3, #24]
 8002d1e:	4b10      	ldr	r3, [pc, #64]	; (8002d60 <HAL_MspInit+0x54>)
 8002d20:	699b      	ldr	r3, [r3, #24]
 8002d22:	2201      	movs	r2, #1
 8002d24:	4013      	ands	r3, r2
 8002d26:	607b      	str	r3, [r7, #4]
 8002d28:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002d2a:	4b0d      	ldr	r3, [pc, #52]	; (8002d60 <HAL_MspInit+0x54>)
 8002d2c:	69da      	ldr	r2, [r3, #28]
 8002d2e:	4b0c      	ldr	r3, [pc, #48]	; (8002d60 <HAL_MspInit+0x54>)
 8002d30:	2180      	movs	r1, #128	; 0x80
 8002d32:	0549      	lsls	r1, r1, #21
 8002d34:	430a      	orrs	r2, r1
 8002d36:	61da      	str	r2, [r3, #28]
 8002d38:	4b09      	ldr	r3, [pc, #36]	; (8002d60 <HAL_MspInit+0x54>)
 8002d3a:	69da      	ldr	r2, [r3, #28]
 8002d3c:	2380      	movs	r3, #128	; 0x80
 8002d3e:	055b      	lsls	r3, r3, #21
 8002d40:	4013      	ands	r3, r2
 8002d42:	603b      	str	r3, [r7, #0]
 8002d44:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 8002d46:	2200      	movs	r2, #0
 8002d48:	2100      	movs	r1, #0
 8002d4a:	2004      	movs	r0, #4
 8002d4c:	f000 fb14 	bl	8003378 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8002d50:	2004      	movs	r0, #4
 8002d52:	f000 fb26 	bl	80033a2 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002d56:	46c0      	nop			; (mov r8, r8)
 8002d58:	46bd      	mov	sp, r7
 8002d5a:	b002      	add	sp, #8
 8002d5c:	bd80      	pop	{r7, pc}
 8002d5e:	46c0      	nop			; (mov r8, r8)
 8002d60:	40021000 	.word	0x40021000

08002d64 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002d64:	b590      	push	{r4, r7, lr}
 8002d66:	b08b      	sub	sp, #44	; 0x2c
 8002d68:	af00      	add	r7, sp, #0
 8002d6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002d6c:	2414      	movs	r4, #20
 8002d6e:	193b      	adds	r3, r7, r4
 8002d70:	0018      	movs	r0, r3
 8002d72:	2314      	movs	r3, #20
 8002d74:	001a      	movs	r2, r3
 8002d76:	2100      	movs	r1, #0
 8002d78:	f003 fe1a 	bl	80069b0 <memset>
  if(hi2c->Instance==I2C1)
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	4a1c      	ldr	r2, [pc, #112]	; (8002df4 <HAL_I2C_MspInit+0x90>)
 8002d82:	4293      	cmp	r3, r2
 8002d84:	d132      	bne.n	8002dec <HAL_I2C_MspInit+0x88>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002d86:	4b1c      	ldr	r3, [pc, #112]	; (8002df8 <HAL_I2C_MspInit+0x94>)
 8002d88:	695a      	ldr	r2, [r3, #20]
 8002d8a:	4b1b      	ldr	r3, [pc, #108]	; (8002df8 <HAL_I2C_MspInit+0x94>)
 8002d8c:	2180      	movs	r1, #128	; 0x80
 8002d8e:	02c9      	lsls	r1, r1, #11
 8002d90:	430a      	orrs	r2, r1
 8002d92:	615a      	str	r2, [r3, #20]
 8002d94:	4b18      	ldr	r3, [pc, #96]	; (8002df8 <HAL_I2C_MspInit+0x94>)
 8002d96:	695a      	ldr	r2, [r3, #20]
 8002d98:	2380      	movs	r3, #128	; 0x80
 8002d9a:	02db      	lsls	r3, r3, #11
 8002d9c:	4013      	ands	r3, r2
 8002d9e:	613b      	str	r3, [r7, #16]
 8002da0:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8002da2:	193b      	adds	r3, r7, r4
 8002da4:	22c0      	movs	r2, #192	; 0xc0
 8002da6:	0092      	lsls	r2, r2, #2
 8002da8:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002daa:	0021      	movs	r1, r4
 8002dac:	187b      	adds	r3, r7, r1
 8002dae:	2212      	movs	r2, #18
 8002db0:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8002db2:	187b      	adds	r3, r7, r1
 8002db4:	2201      	movs	r2, #1
 8002db6:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002db8:	187b      	adds	r3, r7, r1
 8002dba:	2203      	movs	r2, #3
 8002dbc:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8002dbe:	187b      	adds	r3, r7, r1
 8002dc0:	2201      	movs	r2, #1
 8002dc2:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002dc4:	187b      	adds	r3, r7, r1
 8002dc6:	4a0d      	ldr	r2, [pc, #52]	; (8002dfc <HAL_I2C_MspInit+0x98>)
 8002dc8:	0019      	movs	r1, r3
 8002dca:	0010      	movs	r0, r2
 8002dcc:	f000 fb84 	bl	80034d8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002dd0:	4b09      	ldr	r3, [pc, #36]	; (8002df8 <HAL_I2C_MspInit+0x94>)
 8002dd2:	69da      	ldr	r2, [r3, #28]
 8002dd4:	4b08      	ldr	r3, [pc, #32]	; (8002df8 <HAL_I2C_MspInit+0x94>)
 8002dd6:	2180      	movs	r1, #128	; 0x80
 8002dd8:	0389      	lsls	r1, r1, #14
 8002dda:	430a      	orrs	r2, r1
 8002ddc:	61da      	str	r2, [r3, #28]
 8002dde:	4b06      	ldr	r3, [pc, #24]	; (8002df8 <HAL_I2C_MspInit+0x94>)
 8002de0:	69da      	ldr	r2, [r3, #28]
 8002de2:	2380      	movs	r3, #128	; 0x80
 8002de4:	039b      	lsls	r3, r3, #14
 8002de6:	4013      	ands	r3, r2
 8002de8:	60fb      	str	r3, [r7, #12]
 8002dea:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002dec:	46c0      	nop			; (mov r8, r8)
 8002dee:	46bd      	mov	sp, r7
 8002df0:	b00b      	add	sp, #44	; 0x2c
 8002df2:	bd90      	pop	{r4, r7, pc}
 8002df4:	40005400 	.word	0x40005400
 8002df8:	40021000 	.word	0x40021000
 8002dfc:	48000400 	.word	0x48000400

08002e00 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002e00:	b580      	push	{r7, lr}
 8002e02:	b084      	sub	sp, #16
 8002e04:	af00      	add	r7, sp, #0
 8002e06:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM6)
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	4a1b      	ldr	r2, [pc, #108]	; (8002e7c <HAL_TIM_Base_MspInit+0x7c>)
 8002e0e:	4293      	cmp	r3, r2
 8002e10:	d114      	bne.n	8002e3c <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM6_MspInit 0 */

  /* USER CODE END TIM6_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002e12:	4b1b      	ldr	r3, [pc, #108]	; (8002e80 <HAL_TIM_Base_MspInit+0x80>)
 8002e14:	69da      	ldr	r2, [r3, #28]
 8002e16:	4b1a      	ldr	r3, [pc, #104]	; (8002e80 <HAL_TIM_Base_MspInit+0x80>)
 8002e18:	2110      	movs	r1, #16
 8002e1a:	430a      	orrs	r2, r1
 8002e1c:	61da      	str	r2, [r3, #28]
 8002e1e:	4b18      	ldr	r3, [pc, #96]	; (8002e80 <HAL_TIM_Base_MspInit+0x80>)
 8002e20:	69db      	ldr	r3, [r3, #28]
 8002e22:	2210      	movs	r2, #16
 8002e24:	4013      	ands	r3, r2
 8002e26:	60fb      	str	r3, [r7, #12]
 8002e28:	68fb      	ldr	r3, [r7, #12]
    /* TIM6 interrupt Init */
    HAL_NVIC_SetPriority(TIM6_IRQn, 0, 0);
 8002e2a:	2200      	movs	r2, #0
 8002e2c:	2100      	movs	r1, #0
 8002e2e:	2011      	movs	r0, #17
 8002e30:	f000 faa2 	bl	8003378 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8002e34:	2011      	movs	r0, #17
 8002e36:	f000 fab4 	bl	80033a2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8002e3a:	e01a      	b.n	8002e72 <HAL_TIM_Base_MspInit+0x72>
  else if(htim_base->Instance==TIM14)
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	4a10      	ldr	r2, [pc, #64]	; (8002e84 <HAL_TIM_Base_MspInit+0x84>)
 8002e42:	4293      	cmp	r3, r2
 8002e44:	d115      	bne.n	8002e72 <HAL_TIM_Base_MspInit+0x72>
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002e46:	4b0e      	ldr	r3, [pc, #56]	; (8002e80 <HAL_TIM_Base_MspInit+0x80>)
 8002e48:	69da      	ldr	r2, [r3, #28]
 8002e4a:	4b0d      	ldr	r3, [pc, #52]	; (8002e80 <HAL_TIM_Base_MspInit+0x80>)
 8002e4c:	2180      	movs	r1, #128	; 0x80
 8002e4e:	0049      	lsls	r1, r1, #1
 8002e50:	430a      	orrs	r2, r1
 8002e52:	61da      	str	r2, [r3, #28]
 8002e54:	4b0a      	ldr	r3, [pc, #40]	; (8002e80 <HAL_TIM_Base_MspInit+0x80>)
 8002e56:	69da      	ldr	r2, [r3, #28]
 8002e58:	2380      	movs	r3, #128	; 0x80
 8002e5a:	005b      	lsls	r3, r3, #1
 8002e5c:	4013      	ands	r3, r2
 8002e5e:	60bb      	str	r3, [r7, #8]
 8002e60:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM14_IRQn, 0, 0);
 8002e62:	2200      	movs	r2, #0
 8002e64:	2100      	movs	r1, #0
 8002e66:	2013      	movs	r0, #19
 8002e68:	f000 fa86 	bl	8003378 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM14_IRQn);
 8002e6c:	2013      	movs	r0, #19
 8002e6e:	f000 fa98 	bl	80033a2 <HAL_NVIC_EnableIRQ>
}
 8002e72:	46c0      	nop			; (mov r8, r8)
 8002e74:	46bd      	mov	sp, r7
 8002e76:	b004      	add	sp, #16
 8002e78:	bd80      	pop	{r7, pc}
 8002e7a:	46c0      	nop			; (mov r8, r8)
 8002e7c:	40001000 	.word	0x40001000
 8002e80:	40021000 	.word	0x40021000
 8002e84:	40002000 	.word	0x40002000

08002e88 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002e88:	b590      	push	{r4, r7, lr}
 8002e8a:	b08b      	sub	sp, #44	; 0x2c
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e90:	2414      	movs	r4, #20
 8002e92:	193b      	adds	r3, r7, r4
 8002e94:	0018      	movs	r0, r3
 8002e96:	2314      	movs	r3, #20
 8002e98:	001a      	movs	r2, r3
 8002e9a:	2100      	movs	r1, #0
 8002e9c:	f003 fd88 	bl	80069b0 <memset>
  if(huart->Instance==USART1)
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	4a32      	ldr	r2, [pc, #200]	; (8002f70 <HAL_UART_MspInit+0xe8>)
 8002ea6:	4293      	cmp	r3, r2
 8002ea8:	d15e      	bne.n	8002f68 <HAL_UART_MspInit+0xe0>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002eaa:	4b32      	ldr	r3, [pc, #200]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002eac:	699a      	ldr	r2, [r3, #24]
 8002eae:	4b31      	ldr	r3, [pc, #196]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002eb0:	2180      	movs	r1, #128	; 0x80
 8002eb2:	01c9      	lsls	r1, r1, #7
 8002eb4:	430a      	orrs	r2, r1
 8002eb6:	619a      	str	r2, [r3, #24]
 8002eb8:	4b2e      	ldr	r3, [pc, #184]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002eba:	699a      	ldr	r2, [r3, #24]
 8002ebc:	2380      	movs	r3, #128	; 0x80
 8002ebe:	01db      	lsls	r3, r3, #7
 8002ec0:	4013      	ands	r3, r2
 8002ec2:	613b      	str	r3, [r7, #16]
 8002ec4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002ec6:	4b2b      	ldr	r3, [pc, #172]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002ec8:	695a      	ldr	r2, [r3, #20]
 8002eca:	4b2a      	ldr	r3, [pc, #168]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002ecc:	2180      	movs	r1, #128	; 0x80
 8002ece:	0289      	lsls	r1, r1, #10
 8002ed0:	430a      	orrs	r2, r1
 8002ed2:	615a      	str	r2, [r3, #20]
 8002ed4:	4b27      	ldr	r3, [pc, #156]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002ed6:	695a      	ldr	r2, [r3, #20]
 8002ed8:	2380      	movs	r3, #128	; 0x80
 8002eda:	029b      	lsls	r3, r3, #10
 8002edc:	4013      	ands	r3, r2
 8002ede:	60fb      	str	r3, [r7, #12]
 8002ee0:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002ee2:	4b24      	ldr	r3, [pc, #144]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002ee4:	695a      	ldr	r2, [r3, #20]
 8002ee6:	4b23      	ldr	r3, [pc, #140]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002ee8:	2180      	movs	r1, #128	; 0x80
 8002eea:	02c9      	lsls	r1, r1, #11
 8002eec:	430a      	orrs	r2, r1
 8002eee:	615a      	str	r2, [r3, #20]
 8002ef0:	4b20      	ldr	r3, [pc, #128]	; (8002f74 <HAL_UART_MspInit+0xec>)
 8002ef2:	695a      	ldr	r2, [r3, #20]
 8002ef4:	2380      	movs	r3, #128	; 0x80
 8002ef6:	02db      	lsls	r3, r3, #11
 8002ef8:	4013      	ands	r3, r2
 8002efa:	60bb      	str	r3, [r7, #8]
 8002efc:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA12     ------> USART1_DE
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8002efe:	193b      	adds	r3, r7, r4
 8002f00:	2280      	movs	r2, #128	; 0x80
 8002f02:	0152      	lsls	r2, r2, #5
 8002f04:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f06:	193b      	adds	r3, r7, r4
 8002f08:	2202      	movs	r2, #2
 8002f0a:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f0c:	193b      	adds	r3, r7, r4
 8002f0e:	2200      	movs	r2, #0
 8002f10:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002f12:	193b      	adds	r3, r7, r4
 8002f14:	2203      	movs	r2, #3
 8002f16:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART1;
 8002f18:	193b      	adds	r3, r7, r4
 8002f1a:	2201      	movs	r2, #1
 8002f1c:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002f1e:	193a      	adds	r2, r7, r4
 8002f20:	2390      	movs	r3, #144	; 0x90
 8002f22:	05db      	lsls	r3, r3, #23
 8002f24:	0011      	movs	r1, r2
 8002f26:	0018      	movs	r0, r3
 8002f28:	f000 fad6 	bl	80034d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002f2c:	0021      	movs	r1, r4
 8002f2e:	187b      	adds	r3, r7, r1
 8002f30:	22c0      	movs	r2, #192	; 0xc0
 8002f32:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f34:	187b      	adds	r3, r7, r1
 8002f36:	2202      	movs	r2, #2
 8002f38:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002f3a:	187b      	adds	r3, r7, r1
 8002f3c:	2200      	movs	r2, #0
 8002f3e:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002f40:	187b      	adds	r3, r7, r1
 8002f42:	2203      	movs	r2, #3
 8002f44:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 8002f46:	187b      	adds	r3, r7, r1
 8002f48:	2200      	movs	r2, #0
 8002f4a:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002f4c:	187b      	adds	r3, r7, r1
 8002f4e:	4a0a      	ldr	r2, [pc, #40]	; (8002f78 <HAL_UART_MspInit+0xf0>)
 8002f50:	0019      	movs	r1, r3
 8002f52:	0010      	movs	r0, r2
 8002f54:	f000 fac0 	bl	80034d8 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 1, 0);
 8002f58:	2200      	movs	r2, #0
 8002f5a:	2101      	movs	r1, #1
 8002f5c:	201b      	movs	r0, #27
 8002f5e:	f000 fa0b 	bl	8003378 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8002f62:	201b      	movs	r0, #27
 8002f64:	f000 fa1d 	bl	80033a2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8002f68:	46c0      	nop			; (mov r8, r8)
 8002f6a:	46bd      	mov	sp, r7
 8002f6c:	b00b      	add	sp, #44	; 0x2c
 8002f6e:	bd90      	pop	{r4, r7, pc}
 8002f70:	40013800 	.word	0x40013800
 8002f74:	40021000 	.word	0x40021000
 8002f78:	48000400 	.word	0x48000400

08002f7c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002f7c:	b580      	push	{r7, lr}
 8002f7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002f80:	e7fe      	b.n	8002f80 <NMI_Handler+0x4>

08002f82 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002f82:	b580      	push	{r7, lr}
 8002f84:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002f86:	e7fe      	b.n	8002f86 <HardFault_Handler+0x4>

08002f88 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002f88:	b580      	push	{r7, lr}
 8002f8a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002f8c:	46c0      	nop			; (mov r8, r8)
 8002f8e:	46bd      	mov	sp, r7
 8002f90:	bd80      	pop	{r7, pc}

08002f92 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002f92:	b580      	push	{r7, lr}
 8002f94:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002f96:	46c0      	nop			; (mov r8, r8)
 8002f98:	46bd      	mov	sp, r7
 8002f9a:	bd80      	pop	{r7, pc}

08002f9c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002f9c:	b580      	push	{r7, lr}
 8002f9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002fa0:	f000 f8fe 	bl	80031a0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002fa4:	46c0      	nop			; (mov r8, r8)
 8002fa6:	46bd      	mov	sp, r7
 8002fa8:	bd80      	pop	{r7, pc}

08002faa <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 8002faa:	b580      	push	{r7, lr}
 8002fac:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 8002fae:	46c0      	nop			; (mov r8, r8)
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	bd80      	pop	{r7, pc}

08002fb4 <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 8002fb4:	b580      	push	{r7, lr}
 8002fb6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(CHANGE_P_Pin);
 8002fb8:	2380      	movs	r3, #128	; 0x80
 8002fba:	00db      	lsls	r3, r3, #3
 8002fbc:	0018      	movs	r0, r3
 8002fbe:	f000 fc35 	bl	800382c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(S_PRV_Pin);
 8002fc2:	2380      	movs	r3, #128	; 0x80
 8002fc4:	011b      	lsls	r3, r3, #4
 8002fc6:	0018      	movs	r0, r3
 8002fc8:	f000 fc30 	bl	800382c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(S_NEXT_Pin);
 8002fcc:	2380      	movs	r3, #128	; 0x80
 8002fce:	015b      	lsls	r3, r3, #5
 8002fd0:	0018      	movs	r0, r3
 8002fd2:	f000 fc2b 	bl	800382c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(DEPTH_Pin);
 8002fd6:	2380      	movs	r3, #128	; 0x80
 8002fd8:	019b      	lsls	r3, r3, #6
 8002fda:	0018      	movs	r0, r3
 8002fdc:	f000 fc26 	bl	800382c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(IR_N_Pin);
 8002fe0:	2380      	movs	r3, #128	; 0x80
 8002fe2:	01db      	lsls	r3, r3, #7
 8002fe4:	0018      	movs	r0, r3
 8002fe6:	f000 fc21 	bl	800382c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(CHANGE_N_Pin);
 8002fea:	2380      	movs	r3, #128	; 0x80
 8002fec:	021b      	lsls	r3, r3, #8
 8002fee:	0018      	movs	r0, r3
 8002ff0:	f000 fc1c 	bl	800382c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 8002ff4:	46c0      	nop			; (mov r8, r8)
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	bd80      	pop	{r7, pc}
	...

08002ffc <TIM6_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt.
  */
void TIM6_IRQHandler(void)
{
 8002ffc:	b580      	push	{r7, lr}
 8002ffe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8003000:	4b03      	ldr	r3, [pc, #12]	; (8003010 <TIM6_IRQHandler+0x14>)
 8003002:	0018      	movs	r0, r3
 8003004:	f002 f8ae 	bl	8005164 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_IRQn 1 */

  /* USER CODE END TIM6_IRQn 1 */
}
 8003008:	46c0      	nop			; (mov r8, r8)
 800300a:	46bd      	mov	sp, r7
 800300c:	bd80      	pop	{r7, pc}
 800300e:	46c0      	nop			; (mov r8, r8)
 8003010:	20000108 	.word	0x20000108

08003014 <TIM14_IRQHandler>:

/**
  * @brief This function handles TIM14 global interrupt.
  */
void TIM14_IRQHandler(void)
{
 8003014:	b580      	push	{r7, lr}
 8003016:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM14_IRQn 0 */

  /* USER CODE END TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim14);
 8003018:	4b03      	ldr	r3, [pc, #12]	; (8003028 <TIM14_IRQHandler+0x14>)
 800301a:	0018      	movs	r0, r3
 800301c:	f002 f8a2 	bl	8005164 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM14_IRQn 1 */

  /* USER CODE END TIM14_IRQn 1 */
}
 8003020:	46c0      	nop			; (mov r8, r8)
 8003022:	46bd      	mov	sp, r7
 8003024:	bd80      	pop	{r7, pc}
 8003026:	46c0      	nop			; (mov r8, r8)
 8003028:	20000150 	.word	0x20000150

0800302c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 800302c:	b580      	push	{r7, lr}
 800302e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8003030:	4b03      	ldr	r3, [pc, #12]	; (8003040 <USART1_IRQHandler+0x14>)
 8003032:	0018      	movs	r0, r3
 8003034:	f002 fb9e 	bl	8005774 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8003038:	46c0      	nop			; (mov r8, r8)
 800303a:	46bd      	mov	sp, r7
 800303c:	bd80      	pop	{r7, pc}
 800303e:	46c0      	nop			; (mov r8, r8)
 8003040:	20000198 	.word	0x20000198

08003044 <_sbrk>:
 8003044:	b580      	push	{r7, lr}
 8003046:	b086      	sub	sp, #24
 8003048:	af00      	add	r7, sp, #0
 800304a:	6078      	str	r0, [r7, #4]
 800304c:	4a14      	ldr	r2, [pc, #80]	; (80030a0 <_sbrk+0x5c>)
 800304e:	4b15      	ldr	r3, [pc, #84]	; (80030a4 <_sbrk+0x60>)
 8003050:	1ad3      	subs	r3, r2, r3
 8003052:	617b      	str	r3, [r7, #20]
 8003054:	697b      	ldr	r3, [r7, #20]
 8003056:	613b      	str	r3, [r7, #16]
 8003058:	4b13      	ldr	r3, [pc, #76]	; (80030a8 <_sbrk+0x64>)
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	2b00      	cmp	r3, #0
 800305e:	d102      	bne.n	8003066 <_sbrk+0x22>
 8003060:	4b11      	ldr	r3, [pc, #68]	; (80030a8 <_sbrk+0x64>)
 8003062:	4a12      	ldr	r2, [pc, #72]	; (80030ac <_sbrk+0x68>)
 8003064:	601a      	str	r2, [r3, #0]
 8003066:	4b10      	ldr	r3, [pc, #64]	; (80030a8 <_sbrk+0x64>)
 8003068:	681a      	ldr	r2, [r3, #0]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	18d3      	adds	r3, r2, r3
 800306e:	693a      	ldr	r2, [r7, #16]
 8003070:	429a      	cmp	r2, r3
 8003072:	d207      	bcs.n	8003084 <_sbrk+0x40>
 8003074:	f003 fca4 	bl	80069c0 <__errno>
 8003078:	0003      	movs	r3, r0
 800307a:	220c      	movs	r2, #12
 800307c:	601a      	str	r2, [r3, #0]
 800307e:	2301      	movs	r3, #1
 8003080:	425b      	negs	r3, r3
 8003082:	e009      	b.n	8003098 <_sbrk+0x54>
 8003084:	4b08      	ldr	r3, [pc, #32]	; (80030a8 <_sbrk+0x64>)
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	60fb      	str	r3, [r7, #12]
 800308a:	4b07      	ldr	r3, [pc, #28]	; (80030a8 <_sbrk+0x64>)
 800308c:	681a      	ldr	r2, [r3, #0]
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	18d2      	adds	r2, r2, r3
 8003092:	4b05      	ldr	r3, [pc, #20]	; (80030a8 <_sbrk+0x64>)
 8003094:	601a      	str	r2, [r3, #0]
 8003096:	68fb      	ldr	r3, [r7, #12]
 8003098:	0018      	movs	r0, r3
 800309a:	46bd      	mov	sp, r7
 800309c:	b006      	add	sp, #24
 800309e:	bd80      	pop	{r7, pc}
 80030a0:	20002000 	.word	0x20002000
 80030a4:	00000400 	.word	0x00000400
 80030a8:	2000022c 	.word	0x2000022c
 80030ac:	20000380 	.word	0x20000380

080030b0 <SystemInit>:
 80030b0:	b580      	push	{r7, lr}
 80030b2:	af00      	add	r7, sp, #0
 80030b4:	46c0      	nop			; (mov r8, r8)
 80030b6:	46bd      	mov	sp, r7
 80030b8:	bd80      	pop	{r7, pc}
	...

080030bc <Reset_Handler>:
 80030bc:	480d      	ldr	r0, [pc, #52]	; (80030f4 <LoopForever+0x2>)
 80030be:	4685      	mov	sp, r0
 80030c0:	f7ff fff6 	bl	80030b0 <SystemInit>
 80030c4:	480c      	ldr	r0, [pc, #48]	; (80030f8 <LoopForever+0x6>)
 80030c6:	490d      	ldr	r1, [pc, #52]	; (80030fc <LoopForever+0xa>)
 80030c8:	4a0d      	ldr	r2, [pc, #52]	; (8003100 <LoopForever+0xe>)
 80030ca:	2300      	movs	r3, #0
 80030cc:	e002      	b.n	80030d4 <LoopCopyDataInit>

080030ce <CopyDataInit>:
 80030ce:	58d4      	ldr	r4, [r2, r3]
 80030d0:	50c4      	str	r4, [r0, r3]
 80030d2:	3304      	adds	r3, #4

080030d4 <LoopCopyDataInit>:
 80030d4:	18c4      	adds	r4, r0, r3
 80030d6:	428c      	cmp	r4, r1
 80030d8:	d3f9      	bcc.n	80030ce <CopyDataInit>
 80030da:	4a0a      	ldr	r2, [pc, #40]	; (8003104 <LoopForever+0x12>)
 80030dc:	4c0a      	ldr	r4, [pc, #40]	; (8003108 <LoopForever+0x16>)
 80030de:	2300      	movs	r3, #0
 80030e0:	e001      	b.n	80030e6 <LoopFillZerobss>

080030e2 <FillZerobss>:
 80030e2:	6013      	str	r3, [r2, #0]
 80030e4:	3204      	adds	r2, #4

080030e6 <LoopFillZerobss>:
 80030e6:	42a2      	cmp	r2, r4
 80030e8:	d3fb      	bcc.n	80030e2 <FillZerobss>
 80030ea:	f003 fc6f 	bl	80069cc <__libc_init_array>
 80030ee:	f7ff f811 	bl	8002114 <main>

080030f2 <LoopForever>:
 80030f2:	e7fe      	b.n	80030f2 <LoopForever>
 80030f4:	20002000 	.word	0x20002000
 80030f8:	20000000 	.word	0x20000000
 80030fc:	20000068 	.word	0x20000068
 8003100:	08007588 	.word	0x08007588
 8003104:	20000068 	.word	0x20000068
 8003108:	2000037c 	.word	0x2000037c

0800310c <ADC1_IRQHandler>:
 800310c:	e7fe      	b.n	800310c <ADC1_IRQHandler>
	...

08003110 <HAL_Init>:
 8003110:	b580      	push	{r7, lr}
 8003112:	af00      	add	r7, sp, #0
 8003114:	4b07      	ldr	r3, [pc, #28]	; (8003134 <HAL_Init+0x24>)
 8003116:	681a      	ldr	r2, [r3, #0]
 8003118:	4b06      	ldr	r3, [pc, #24]	; (8003134 <HAL_Init+0x24>)
 800311a:	2110      	movs	r1, #16
 800311c:	430a      	orrs	r2, r1
 800311e:	601a      	str	r2, [r3, #0]
 8003120:	2003      	movs	r0, #3
 8003122:	f000 f809 	bl	8003138 <HAL_InitTick>
 8003126:	f7ff fdf1 	bl	8002d0c <HAL_MspInit>
 800312a:	2300      	movs	r3, #0
 800312c:	0018      	movs	r0, r3
 800312e:	46bd      	mov	sp, r7
 8003130:	bd80      	pop	{r7, pc}
 8003132:	46c0      	nop			; (mov r8, r8)
 8003134:	40022000 	.word	0x40022000

08003138 <HAL_InitTick>:
 8003138:	b590      	push	{r4, r7, lr}
 800313a:	b083      	sub	sp, #12
 800313c:	af00      	add	r7, sp, #0
 800313e:	6078      	str	r0, [r7, #4]
 8003140:	4b14      	ldr	r3, [pc, #80]	; (8003194 <HAL_InitTick+0x5c>)
 8003142:	681c      	ldr	r4, [r3, #0]
 8003144:	4b14      	ldr	r3, [pc, #80]	; (8003198 <HAL_InitTick+0x60>)
 8003146:	781b      	ldrb	r3, [r3, #0]
 8003148:	0019      	movs	r1, r3
 800314a:	23fa      	movs	r3, #250	; 0xfa
 800314c:	0098      	lsls	r0, r3, #2
 800314e:	f7fc ffe5 	bl	800011c <__udivsi3>
 8003152:	0003      	movs	r3, r0
 8003154:	0019      	movs	r1, r3
 8003156:	0020      	movs	r0, r4
 8003158:	f7fc ffe0 	bl	800011c <__udivsi3>
 800315c:	0003      	movs	r3, r0
 800315e:	0018      	movs	r0, r3
 8003160:	f000 f92f 	bl	80033c2 <HAL_SYSTICK_Config>
 8003164:	1e03      	subs	r3, r0, #0
 8003166:	d001      	beq.n	800316c <HAL_InitTick+0x34>
 8003168:	2301      	movs	r3, #1
 800316a:	e00f      	b.n	800318c <HAL_InitTick+0x54>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	2b03      	cmp	r3, #3
 8003170:	d80b      	bhi.n	800318a <HAL_InitTick+0x52>
 8003172:	6879      	ldr	r1, [r7, #4]
 8003174:	2301      	movs	r3, #1
 8003176:	425b      	negs	r3, r3
 8003178:	2200      	movs	r2, #0
 800317a:	0018      	movs	r0, r3
 800317c:	f000 f8fc 	bl	8003378 <HAL_NVIC_SetPriority>
 8003180:	4b06      	ldr	r3, [pc, #24]	; (800319c <HAL_InitTick+0x64>)
 8003182:	687a      	ldr	r2, [r7, #4]
 8003184:	601a      	str	r2, [r3, #0]
 8003186:	2300      	movs	r3, #0
 8003188:	e000      	b.n	800318c <HAL_InitTick+0x54>
 800318a:	2301      	movs	r3, #1
 800318c:	0018      	movs	r0, r3
 800318e:	46bd      	mov	sp, r7
 8003190:	b003      	add	sp, #12
 8003192:	bd90      	pop	{r4, r7, pc}
 8003194:	2000000c 	.word	0x2000000c
 8003198:	20000014 	.word	0x20000014
 800319c:	20000010 	.word	0x20000010

080031a0 <HAL_IncTick>:
 80031a0:	b580      	push	{r7, lr}
 80031a2:	af00      	add	r7, sp, #0
 80031a4:	4b05      	ldr	r3, [pc, #20]	; (80031bc <HAL_IncTick+0x1c>)
 80031a6:	781b      	ldrb	r3, [r3, #0]
 80031a8:	001a      	movs	r2, r3
 80031aa:	4b05      	ldr	r3, [pc, #20]	; (80031c0 <HAL_IncTick+0x20>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	18d2      	adds	r2, r2, r3
 80031b0:	4b03      	ldr	r3, [pc, #12]	; (80031c0 <HAL_IncTick+0x20>)
 80031b2:	601a      	str	r2, [r3, #0]
 80031b4:	46c0      	nop			; (mov r8, r8)
 80031b6:	46bd      	mov	sp, r7
 80031b8:	bd80      	pop	{r7, pc}
 80031ba:	46c0      	nop			; (mov r8, r8)
 80031bc:	20000014 	.word	0x20000014
 80031c0:	20000230 	.word	0x20000230

080031c4 <HAL_GetTick>:
 80031c4:	b580      	push	{r7, lr}
 80031c6:	af00      	add	r7, sp, #0
 80031c8:	4b02      	ldr	r3, [pc, #8]	; (80031d4 <HAL_GetTick+0x10>)
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	0018      	movs	r0, r3
 80031ce:	46bd      	mov	sp, r7
 80031d0:	bd80      	pop	{r7, pc}
 80031d2:	46c0      	nop			; (mov r8, r8)
 80031d4:	20000230 	.word	0x20000230

080031d8 <HAL_Delay>:
 80031d8:	b580      	push	{r7, lr}
 80031da:	b084      	sub	sp, #16
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
 80031e0:	f7ff fff0 	bl	80031c4 <HAL_GetTick>
 80031e4:	0003      	movs	r3, r0
 80031e6:	60bb      	str	r3, [r7, #8]
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	60fb      	str	r3, [r7, #12]
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	3301      	adds	r3, #1
 80031f0:	d005      	beq.n	80031fe <HAL_Delay+0x26>
 80031f2:	4b0a      	ldr	r3, [pc, #40]	; (800321c <HAL_Delay+0x44>)
 80031f4:	781b      	ldrb	r3, [r3, #0]
 80031f6:	001a      	movs	r2, r3
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	189b      	adds	r3, r3, r2
 80031fc:	60fb      	str	r3, [r7, #12]
 80031fe:	46c0      	nop			; (mov r8, r8)
 8003200:	f7ff ffe0 	bl	80031c4 <HAL_GetTick>
 8003204:	0002      	movs	r2, r0
 8003206:	68bb      	ldr	r3, [r7, #8]
 8003208:	1ad3      	subs	r3, r2, r3
 800320a:	68fa      	ldr	r2, [r7, #12]
 800320c:	429a      	cmp	r2, r3
 800320e:	d8f7      	bhi.n	8003200 <HAL_Delay+0x28>
 8003210:	46c0      	nop			; (mov r8, r8)
 8003212:	46c0      	nop			; (mov r8, r8)
 8003214:	46bd      	mov	sp, r7
 8003216:	b004      	add	sp, #16
 8003218:	bd80      	pop	{r7, pc}
 800321a:	46c0      	nop			; (mov r8, r8)
 800321c:	20000014 	.word	0x20000014

08003220 <__NVIC_EnableIRQ>:
 8003220:	b580      	push	{r7, lr}
 8003222:	b082      	sub	sp, #8
 8003224:	af00      	add	r7, sp, #0
 8003226:	0002      	movs	r2, r0
 8003228:	1dfb      	adds	r3, r7, #7
 800322a:	701a      	strb	r2, [r3, #0]
 800322c:	1dfb      	adds	r3, r7, #7
 800322e:	781b      	ldrb	r3, [r3, #0]
 8003230:	2b7f      	cmp	r3, #127	; 0x7f
 8003232:	d809      	bhi.n	8003248 <__NVIC_EnableIRQ+0x28>
 8003234:	1dfb      	adds	r3, r7, #7
 8003236:	781b      	ldrb	r3, [r3, #0]
 8003238:	001a      	movs	r2, r3
 800323a:	231f      	movs	r3, #31
 800323c:	401a      	ands	r2, r3
 800323e:	4b04      	ldr	r3, [pc, #16]	; (8003250 <__NVIC_EnableIRQ+0x30>)
 8003240:	2101      	movs	r1, #1
 8003242:	4091      	lsls	r1, r2
 8003244:	000a      	movs	r2, r1
 8003246:	601a      	str	r2, [r3, #0]
 8003248:	46c0      	nop			; (mov r8, r8)
 800324a:	46bd      	mov	sp, r7
 800324c:	b002      	add	sp, #8
 800324e:	bd80      	pop	{r7, pc}
 8003250:	e000e100 	.word	0xe000e100

08003254 <__NVIC_SetPriority>:
 8003254:	b590      	push	{r4, r7, lr}
 8003256:	b083      	sub	sp, #12
 8003258:	af00      	add	r7, sp, #0
 800325a:	0002      	movs	r2, r0
 800325c:	6039      	str	r1, [r7, #0]
 800325e:	1dfb      	adds	r3, r7, #7
 8003260:	701a      	strb	r2, [r3, #0]
 8003262:	1dfb      	adds	r3, r7, #7
 8003264:	781b      	ldrb	r3, [r3, #0]
 8003266:	2b7f      	cmp	r3, #127	; 0x7f
 8003268:	d828      	bhi.n	80032bc <__NVIC_SetPriority+0x68>
 800326a:	4a2f      	ldr	r2, [pc, #188]	; (8003328 <__NVIC_SetPriority+0xd4>)
 800326c:	1dfb      	adds	r3, r7, #7
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	b25b      	sxtb	r3, r3
 8003272:	089b      	lsrs	r3, r3, #2
 8003274:	33c0      	adds	r3, #192	; 0xc0
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	589b      	ldr	r3, [r3, r2]
 800327a:	1dfa      	adds	r2, r7, #7
 800327c:	7812      	ldrb	r2, [r2, #0]
 800327e:	0011      	movs	r1, r2
 8003280:	2203      	movs	r2, #3
 8003282:	400a      	ands	r2, r1
 8003284:	00d2      	lsls	r2, r2, #3
 8003286:	21ff      	movs	r1, #255	; 0xff
 8003288:	4091      	lsls	r1, r2
 800328a:	000a      	movs	r2, r1
 800328c:	43d2      	mvns	r2, r2
 800328e:	401a      	ands	r2, r3
 8003290:	0011      	movs	r1, r2
 8003292:	683b      	ldr	r3, [r7, #0]
 8003294:	019b      	lsls	r3, r3, #6
 8003296:	22ff      	movs	r2, #255	; 0xff
 8003298:	401a      	ands	r2, r3
 800329a:	1dfb      	adds	r3, r7, #7
 800329c:	781b      	ldrb	r3, [r3, #0]
 800329e:	0018      	movs	r0, r3
 80032a0:	2303      	movs	r3, #3
 80032a2:	4003      	ands	r3, r0
 80032a4:	00db      	lsls	r3, r3, #3
 80032a6:	409a      	lsls	r2, r3
 80032a8:	481f      	ldr	r0, [pc, #124]	; (8003328 <__NVIC_SetPriority+0xd4>)
 80032aa:	1dfb      	adds	r3, r7, #7
 80032ac:	781b      	ldrb	r3, [r3, #0]
 80032ae:	b25b      	sxtb	r3, r3
 80032b0:	089b      	lsrs	r3, r3, #2
 80032b2:	430a      	orrs	r2, r1
 80032b4:	33c0      	adds	r3, #192	; 0xc0
 80032b6:	009b      	lsls	r3, r3, #2
 80032b8:	501a      	str	r2, [r3, r0]
 80032ba:	e031      	b.n	8003320 <__NVIC_SetPriority+0xcc>
 80032bc:	4a1b      	ldr	r2, [pc, #108]	; (800332c <__NVIC_SetPriority+0xd8>)
 80032be:	1dfb      	adds	r3, r7, #7
 80032c0:	781b      	ldrb	r3, [r3, #0]
 80032c2:	0019      	movs	r1, r3
 80032c4:	230f      	movs	r3, #15
 80032c6:	400b      	ands	r3, r1
 80032c8:	3b08      	subs	r3, #8
 80032ca:	089b      	lsrs	r3, r3, #2
 80032cc:	3306      	adds	r3, #6
 80032ce:	009b      	lsls	r3, r3, #2
 80032d0:	18d3      	adds	r3, r2, r3
 80032d2:	3304      	adds	r3, #4
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	1dfa      	adds	r2, r7, #7
 80032d8:	7812      	ldrb	r2, [r2, #0]
 80032da:	0011      	movs	r1, r2
 80032dc:	2203      	movs	r2, #3
 80032de:	400a      	ands	r2, r1
 80032e0:	00d2      	lsls	r2, r2, #3
 80032e2:	21ff      	movs	r1, #255	; 0xff
 80032e4:	4091      	lsls	r1, r2
 80032e6:	000a      	movs	r2, r1
 80032e8:	43d2      	mvns	r2, r2
 80032ea:	401a      	ands	r2, r3
 80032ec:	0011      	movs	r1, r2
 80032ee:	683b      	ldr	r3, [r7, #0]
 80032f0:	019b      	lsls	r3, r3, #6
 80032f2:	22ff      	movs	r2, #255	; 0xff
 80032f4:	401a      	ands	r2, r3
 80032f6:	1dfb      	adds	r3, r7, #7
 80032f8:	781b      	ldrb	r3, [r3, #0]
 80032fa:	0018      	movs	r0, r3
 80032fc:	2303      	movs	r3, #3
 80032fe:	4003      	ands	r3, r0
 8003300:	00db      	lsls	r3, r3, #3
 8003302:	409a      	lsls	r2, r3
 8003304:	4809      	ldr	r0, [pc, #36]	; (800332c <__NVIC_SetPriority+0xd8>)
 8003306:	1dfb      	adds	r3, r7, #7
 8003308:	781b      	ldrb	r3, [r3, #0]
 800330a:	001c      	movs	r4, r3
 800330c:	230f      	movs	r3, #15
 800330e:	4023      	ands	r3, r4
 8003310:	3b08      	subs	r3, #8
 8003312:	089b      	lsrs	r3, r3, #2
 8003314:	430a      	orrs	r2, r1
 8003316:	3306      	adds	r3, #6
 8003318:	009b      	lsls	r3, r3, #2
 800331a:	18c3      	adds	r3, r0, r3
 800331c:	3304      	adds	r3, #4
 800331e:	601a      	str	r2, [r3, #0]
 8003320:	46c0      	nop			; (mov r8, r8)
 8003322:	46bd      	mov	sp, r7
 8003324:	b003      	add	sp, #12
 8003326:	bd90      	pop	{r4, r7, pc}
 8003328:	e000e100 	.word	0xe000e100
 800332c:	e000ed00 	.word	0xe000ed00

08003330 <SysTick_Config>:
 8003330:	b580      	push	{r7, lr}
 8003332:	b082      	sub	sp, #8
 8003334:	af00      	add	r7, sp, #0
 8003336:	6078      	str	r0, [r7, #4]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	1e5a      	subs	r2, r3, #1
 800333c:	2380      	movs	r3, #128	; 0x80
 800333e:	045b      	lsls	r3, r3, #17
 8003340:	429a      	cmp	r2, r3
 8003342:	d301      	bcc.n	8003348 <SysTick_Config+0x18>
 8003344:	2301      	movs	r3, #1
 8003346:	e010      	b.n	800336a <SysTick_Config+0x3a>
 8003348:	4b0a      	ldr	r3, [pc, #40]	; (8003374 <SysTick_Config+0x44>)
 800334a:	687a      	ldr	r2, [r7, #4]
 800334c:	3a01      	subs	r2, #1
 800334e:	605a      	str	r2, [r3, #4]
 8003350:	2301      	movs	r3, #1
 8003352:	425b      	negs	r3, r3
 8003354:	2103      	movs	r1, #3
 8003356:	0018      	movs	r0, r3
 8003358:	f7ff ff7c 	bl	8003254 <__NVIC_SetPriority>
 800335c:	4b05      	ldr	r3, [pc, #20]	; (8003374 <SysTick_Config+0x44>)
 800335e:	2200      	movs	r2, #0
 8003360:	609a      	str	r2, [r3, #8]
 8003362:	4b04      	ldr	r3, [pc, #16]	; (8003374 <SysTick_Config+0x44>)
 8003364:	2207      	movs	r2, #7
 8003366:	601a      	str	r2, [r3, #0]
 8003368:	2300      	movs	r3, #0
 800336a:	0018      	movs	r0, r3
 800336c:	46bd      	mov	sp, r7
 800336e:	b002      	add	sp, #8
 8003370:	bd80      	pop	{r7, pc}
 8003372:	46c0      	nop			; (mov r8, r8)
 8003374:	e000e010 	.word	0xe000e010

08003378 <HAL_NVIC_SetPriority>:
 8003378:	b580      	push	{r7, lr}
 800337a:	b084      	sub	sp, #16
 800337c:	af00      	add	r7, sp, #0
 800337e:	60b9      	str	r1, [r7, #8]
 8003380:	607a      	str	r2, [r7, #4]
 8003382:	210f      	movs	r1, #15
 8003384:	187b      	adds	r3, r7, r1
 8003386:	1c02      	adds	r2, r0, #0
 8003388:	701a      	strb	r2, [r3, #0]
 800338a:	68ba      	ldr	r2, [r7, #8]
 800338c:	187b      	adds	r3, r7, r1
 800338e:	781b      	ldrb	r3, [r3, #0]
 8003390:	b25b      	sxtb	r3, r3
 8003392:	0011      	movs	r1, r2
 8003394:	0018      	movs	r0, r3
 8003396:	f7ff ff5d 	bl	8003254 <__NVIC_SetPriority>
 800339a:	46c0      	nop			; (mov r8, r8)
 800339c:	46bd      	mov	sp, r7
 800339e:	b004      	add	sp, #16
 80033a0:	bd80      	pop	{r7, pc}

080033a2 <HAL_NVIC_EnableIRQ>:
 80033a2:	b580      	push	{r7, lr}
 80033a4:	b082      	sub	sp, #8
 80033a6:	af00      	add	r7, sp, #0
 80033a8:	0002      	movs	r2, r0
 80033aa:	1dfb      	adds	r3, r7, #7
 80033ac:	701a      	strb	r2, [r3, #0]
 80033ae:	1dfb      	adds	r3, r7, #7
 80033b0:	781b      	ldrb	r3, [r3, #0]
 80033b2:	b25b      	sxtb	r3, r3
 80033b4:	0018      	movs	r0, r3
 80033b6:	f7ff ff33 	bl	8003220 <__NVIC_EnableIRQ>
 80033ba:	46c0      	nop			; (mov r8, r8)
 80033bc:	46bd      	mov	sp, r7
 80033be:	b002      	add	sp, #8
 80033c0:	bd80      	pop	{r7, pc}

080033c2 <HAL_SYSTICK_Config>:
 80033c2:	b580      	push	{r7, lr}
 80033c4:	b082      	sub	sp, #8
 80033c6:	af00      	add	r7, sp, #0
 80033c8:	6078      	str	r0, [r7, #4]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	0018      	movs	r0, r3
 80033ce:	f7ff ffaf 	bl	8003330 <SysTick_Config>
 80033d2:	0003      	movs	r3, r0
 80033d4:	0018      	movs	r0, r3
 80033d6:	46bd      	mov	sp, r7
 80033d8:	b002      	add	sp, #8
 80033da:	bd80      	pop	{r7, pc}

080033dc <HAL_DMA_Abort>:
 80033dc:	b580      	push	{r7, lr}
 80033de:	b082      	sub	sp, #8
 80033e0:	af00      	add	r7, sp, #0
 80033e2:	6078      	str	r0, [r7, #4]
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	2221      	movs	r2, #33	; 0x21
 80033e8:	5c9b      	ldrb	r3, [r3, r2]
 80033ea:	b2db      	uxtb	r3, r3
 80033ec:	2b02      	cmp	r3, #2
 80033ee:	d008      	beq.n	8003402 <HAL_DMA_Abort+0x26>
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	2204      	movs	r2, #4
 80033f4:	639a      	str	r2, [r3, #56]	; 0x38
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	2220      	movs	r2, #32
 80033fa:	2100      	movs	r1, #0
 80033fc:	5499      	strb	r1, [r3, r2]
 80033fe:	2301      	movs	r3, #1
 8003400:	e020      	b.n	8003444 <HAL_DMA_Abort+0x68>
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	681a      	ldr	r2, [r3, #0]
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	210e      	movs	r1, #14
 800340e:	438a      	bics	r2, r1
 8003410:	601a      	str	r2, [r3, #0]
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	681a      	ldr	r2, [r3, #0]
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	2101      	movs	r1, #1
 800341e:	438a      	bics	r2, r1
 8003420:	601a      	str	r2, [r3, #0]
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800342a:	2101      	movs	r1, #1
 800342c:	4091      	lsls	r1, r2
 800342e:	000a      	movs	r2, r1
 8003430:	605a      	str	r2, [r3, #4]
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	2221      	movs	r2, #33	; 0x21
 8003436:	2101      	movs	r1, #1
 8003438:	5499      	strb	r1, [r3, r2]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	2220      	movs	r2, #32
 800343e:	2100      	movs	r1, #0
 8003440:	5499      	strb	r1, [r3, r2]
 8003442:	2300      	movs	r3, #0
 8003444:	0018      	movs	r0, r3
 8003446:	46bd      	mov	sp, r7
 8003448:	b002      	add	sp, #8
 800344a:	bd80      	pop	{r7, pc}

0800344c <HAL_DMA_Abort_IT>:
 800344c:	b580      	push	{r7, lr}
 800344e:	b084      	sub	sp, #16
 8003450:	af00      	add	r7, sp, #0
 8003452:	6078      	str	r0, [r7, #4]
 8003454:	210f      	movs	r1, #15
 8003456:	187b      	adds	r3, r7, r1
 8003458:	2200      	movs	r2, #0
 800345a:	701a      	strb	r2, [r3, #0]
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	2221      	movs	r2, #33	; 0x21
 8003460:	5c9b      	ldrb	r3, [r3, r2]
 8003462:	b2db      	uxtb	r3, r3
 8003464:	2b02      	cmp	r3, #2
 8003466:	d006      	beq.n	8003476 <HAL_DMA_Abort_IT+0x2a>
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	2204      	movs	r2, #4
 800346c:	639a      	str	r2, [r3, #56]	; 0x38
 800346e:	187b      	adds	r3, r7, r1
 8003470:	2201      	movs	r2, #1
 8003472:	701a      	strb	r2, [r3, #0]
 8003474:	e028      	b.n	80034c8 <HAL_DMA_Abort_IT+0x7c>
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	681a      	ldr	r2, [r3, #0]
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	681b      	ldr	r3, [r3, #0]
 8003480:	210e      	movs	r1, #14
 8003482:	438a      	bics	r2, r1
 8003484:	601a      	str	r2, [r3, #0]
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	681a      	ldr	r2, [r3, #0]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	2101      	movs	r1, #1
 8003492:	438a      	bics	r2, r1
 8003494:	601a      	str	r2, [r3, #0]
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800349e:	2101      	movs	r1, #1
 80034a0:	4091      	lsls	r1, r2
 80034a2:	000a      	movs	r2, r1
 80034a4:	605a      	str	r2, [r3, #4]
 80034a6:	687b      	ldr	r3, [r7, #4]
 80034a8:	2221      	movs	r2, #33	; 0x21
 80034aa:	2101      	movs	r1, #1
 80034ac:	5499      	strb	r1, [r3, r2]
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	2220      	movs	r2, #32
 80034b2:	2100      	movs	r1, #0
 80034b4:	5499      	strb	r1, [r3, r2]
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	d004      	beq.n	80034c8 <HAL_DMA_Abort_IT+0x7c>
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80034c2:	687a      	ldr	r2, [r7, #4]
 80034c4:	0010      	movs	r0, r2
 80034c6:	4798      	blx	r3
 80034c8:	230f      	movs	r3, #15
 80034ca:	18fb      	adds	r3, r7, r3
 80034cc:	781b      	ldrb	r3, [r3, #0]
 80034ce:	0018      	movs	r0, r3
 80034d0:	46bd      	mov	sp, r7
 80034d2:	b004      	add	sp, #16
 80034d4:	bd80      	pop	{r7, pc}
	...

080034d8 <HAL_GPIO_Init>:
 80034d8:	b580      	push	{r7, lr}
 80034da:	b086      	sub	sp, #24
 80034dc:	af00      	add	r7, sp, #0
 80034de:	6078      	str	r0, [r7, #4]
 80034e0:	6039      	str	r1, [r7, #0]
 80034e2:	2300      	movs	r3, #0
 80034e4:	617b      	str	r3, [r7, #20]
 80034e6:	e14f      	b.n	8003788 <HAL_GPIO_Init+0x2b0>
 80034e8:	683b      	ldr	r3, [r7, #0]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	2101      	movs	r1, #1
 80034ee:	697a      	ldr	r2, [r7, #20]
 80034f0:	4091      	lsls	r1, r2
 80034f2:	000a      	movs	r2, r1
 80034f4:	4013      	ands	r3, r2
 80034f6:	60fb      	str	r3, [r7, #12]
 80034f8:	68fb      	ldr	r3, [r7, #12]
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	d100      	bne.n	8003500 <HAL_GPIO_Init+0x28>
 80034fe:	e140      	b.n	8003782 <HAL_GPIO_Init+0x2aa>
 8003500:	683b      	ldr	r3, [r7, #0]
 8003502:	685b      	ldr	r3, [r3, #4]
 8003504:	2203      	movs	r2, #3
 8003506:	4013      	ands	r3, r2
 8003508:	2b01      	cmp	r3, #1
 800350a:	d005      	beq.n	8003518 <HAL_GPIO_Init+0x40>
 800350c:	683b      	ldr	r3, [r7, #0]
 800350e:	685b      	ldr	r3, [r3, #4]
 8003510:	2203      	movs	r2, #3
 8003512:	4013      	ands	r3, r2
 8003514:	2b02      	cmp	r3, #2
 8003516:	d130      	bne.n	800357a <HAL_GPIO_Init+0xa2>
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	689b      	ldr	r3, [r3, #8]
 800351c:	613b      	str	r3, [r7, #16]
 800351e:	697b      	ldr	r3, [r7, #20]
 8003520:	005b      	lsls	r3, r3, #1
 8003522:	2203      	movs	r2, #3
 8003524:	409a      	lsls	r2, r3
 8003526:	0013      	movs	r3, r2
 8003528:	43da      	mvns	r2, r3
 800352a:	693b      	ldr	r3, [r7, #16]
 800352c:	4013      	ands	r3, r2
 800352e:	613b      	str	r3, [r7, #16]
 8003530:	683b      	ldr	r3, [r7, #0]
 8003532:	68da      	ldr	r2, [r3, #12]
 8003534:	697b      	ldr	r3, [r7, #20]
 8003536:	005b      	lsls	r3, r3, #1
 8003538:	409a      	lsls	r2, r3
 800353a:	0013      	movs	r3, r2
 800353c:	693a      	ldr	r2, [r7, #16]
 800353e:	4313      	orrs	r3, r2
 8003540:	613b      	str	r3, [r7, #16]
 8003542:	687b      	ldr	r3, [r7, #4]
 8003544:	693a      	ldr	r2, [r7, #16]
 8003546:	609a      	str	r2, [r3, #8]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	685b      	ldr	r3, [r3, #4]
 800354c:	613b      	str	r3, [r7, #16]
 800354e:	2201      	movs	r2, #1
 8003550:	697b      	ldr	r3, [r7, #20]
 8003552:	409a      	lsls	r2, r3
 8003554:	0013      	movs	r3, r2
 8003556:	43da      	mvns	r2, r3
 8003558:	693b      	ldr	r3, [r7, #16]
 800355a:	4013      	ands	r3, r2
 800355c:	613b      	str	r3, [r7, #16]
 800355e:	683b      	ldr	r3, [r7, #0]
 8003560:	685b      	ldr	r3, [r3, #4]
 8003562:	091b      	lsrs	r3, r3, #4
 8003564:	2201      	movs	r2, #1
 8003566:	401a      	ands	r2, r3
 8003568:	697b      	ldr	r3, [r7, #20]
 800356a:	409a      	lsls	r2, r3
 800356c:	0013      	movs	r3, r2
 800356e:	693a      	ldr	r2, [r7, #16]
 8003570:	4313      	orrs	r3, r2
 8003572:	613b      	str	r3, [r7, #16]
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	693a      	ldr	r2, [r7, #16]
 8003578:	605a      	str	r2, [r3, #4]
 800357a:	683b      	ldr	r3, [r7, #0]
 800357c:	685b      	ldr	r3, [r3, #4]
 800357e:	2203      	movs	r2, #3
 8003580:	4013      	ands	r3, r2
 8003582:	2b03      	cmp	r3, #3
 8003584:	d017      	beq.n	80035b6 <HAL_GPIO_Init+0xde>
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	68db      	ldr	r3, [r3, #12]
 800358a:	613b      	str	r3, [r7, #16]
 800358c:	697b      	ldr	r3, [r7, #20]
 800358e:	005b      	lsls	r3, r3, #1
 8003590:	2203      	movs	r2, #3
 8003592:	409a      	lsls	r2, r3
 8003594:	0013      	movs	r3, r2
 8003596:	43da      	mvns	r2, r3
 8003598:	693b      	ldr	r3, [r7, #16]
 800359a:	4013      	ands	r3, r2
 800359c:	613b      	str	r3, [r7, #16]
 800359e:	683b      	ldr	r3, [r7, #0]
 80035a0:	689a      	ldr	r2, [r3, #8]
 80035a2:	697b      	ldr	r3, [r7, #20]
 80035a4:	005b      	lsls	r3, r3, #1
 80035a6:	409a      	lsls	r2, r3
 80035a8:	0013      	movs	r3, r2
 80035aa:	693a      	ldr	r2, [r7, #16]
 80035ac:	4313      	orrs	r3, r2
 80035ae:	613b      	str	r3, [r7, #16]
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	693a      	ldr	r2, [r7, #16]
 80035b4:	60da      	str	r2, [r3, #12]
 80035b6:	683b      	ldr	r3, [r7, #0]
 80035b8:	685b      	ldr	r3, [r3, #4]
 80035ba:	2203      	movs	r2, #3
 80035bc:	4013      	ands	r3, r2
 80035be:	2b02      	cmp	r3, #2
 80035c0:	d123      	bne.n	800360a <HAL_GPIO_Init+0x132>
 80035c2:	697b      	ldr	r3, [r7, #20]
 80035c4:	08da      	lsrs	r2, r3, #3
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	3208      	adds	r2, #8
 80035ca:	0092      	lsls	r2, r2, #2
 80035cc:	58d3      	ldr	r3, [r2, r3]
 80035ce:	613b      	str	r3, [r7, #16]
 80035d0:	697b      	ldr	r3, [r7, #20]
 80035d2:	2207      	movs	r2, #7
 80035d4:	4013      	ands	r3, r2
 80035d6:	009b      	lsls	r3, r3, #2
 80035d8:	220f      	movs	r2, #15
 80035da:	409a      	lsls	r2, r3
 80035dc:	0013      	movs	r3, r2
 80035de:	43da      	mvns	r2, r3
 80035e0:	693b      	ldr	r3, [r7, #16]
 80035e2:	4013      	ands	r3, r2
 80035e4:	613b      	str	r3, [r7, #16]
 80035e6:	683b      	ldr	r3, [r7, #0]
 80035e8:	691a      	ldr	r2, [r3, #16]
 80035ea:	697b      	ldr	r3, [r7, #20]
 80035ec:	2107      	movs	r1, #7
 80035ee:	400b      	ands	r3, r1
 80035f0:	009b      	lsls	r3, r3, #2
 80035f2:	409a      	lsls	r2, r3
 80035f4:	0013      	movs	r3, r2
 80035f6:	693a      	ldr	r2, [r7, #16]
 80035f8:	4313      	orrs	r3, r2
 80035fa:	613b      	str	r3, [r7, #16]
 80035fc:	697b      	ldr	r3, [r7, #20]
 80035fe:	08da      	lsrs	r2, r3, #3
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	3208      	adds	r2, #8
 8003604:	0092      	lsls	r2, r2, #2
 8003606:	6939      	ldr	r1, [r7, #16]
 8003608:	50d1      	str	r1, [r2, r3]
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	613b      	str	r3, [r7, #16]
 8003610:	697b      	ldr	r3, [r7, #20]
 8003612:	005b      	lsls	r3, r3, #1
 8003614:	2203      	movs	r2, #3
 8003616:	409a      	lsls	r2, r3
 8003618:	0013      	movs	r3, r2
 800361a:	43da      	mvns	r2, r3
 800361c:	693b      	ldr	r3, [r7, #16]
 800361e:	4013      	ands	r3, r2
 8003620:	613b      	str	r3, [r7, #16]
 8003622:	683b      	ldr	r3, [r7, #0]
 8003624:	685b      	ldr	r3, [r3, #4]
 8003626:	2203      	movs	r2, #3
 8003628:	401a      	ands	r2, r3
 800362a:	697b      	ldr	r3, [r7, #20]
 800362c:	005b      	lsls	r3, r3, #1
 800362e:	409a      	lsls	r2, r3
 8003630:	0013      	movs	r3, r2
 8003632:	693a      	ldr	r2, [r7, #16]
 8003634:	4313      	orrs	r3, r2
 8003636:	613b      	str	r3, [r7, #16]
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	693a      	ldr	r2, [r7, #16]
 800363c:	601a      	str	r2, [r3, #0]
 800363e:	683b      	ldr	r3, [r7, #0]
 8003640:	685a      	ldr	r2, [r3, #4]
 8003642:	23c0      	movs	r3, #192	; 0xc0
 8003644:	029b      	lsls	r3, r3, #10
 8003646:	4013      	ands	r3, r2
 8003648:	d100      	bne.n	800364c <HAL_GPIO_Init+0x174>
 800364a:	e09a      	b.n	8003782 <HAL_GPIO_Init+0x2aa>
 800364c:	4b54      	ldr	r3, [pc, #336]	; (80037a0 <HAL_GPIO_Init+0x2c8>)
 800364e:	699a      	ldr	r2, [r3, #24]
 8003650:	4b53      	ldr	r3, [pc, #332]	; (80037a0 <HAL_GPIO_Init+0x2c8>)
 8003652:	2101      	movs	r1, #1
 8003654:	430a      	orrs	r2, r1
 8003656:	619a      	str	r2, [r3, #24]
 8003658:	4b51      	ldr	r3, [pc, #324]	; (80037a0 <HAL_GPIO_Init+0x2c8>)
 800365a:	699b      	ldr	r3, [r3, #24]
 800365c:	2201      	movs	r2, #1
 800365e:	4013      	ands	r3, r2
 8003660:	60bb      	str	r3, [r7, #8]
 8003662:	68bb      	ldr	r3, [r7, #8]
 8003664:	4a4f      	ldr	r2, [pc, #316]	; (80037a4 <HAL_GPIO_Init+0x2cc>)
 8003666:	697b      	ldr	r3, [r7, #20]
 8003668:	089b      	lsrs	r3, r3, #2
 800366a:	3302      	adds	r3, #2
 800366c:	009b      	lsls	r3, r3, #2
 800366e:	589b      	ldr	r3, [r3, r2]
 8003670:	613b      	str	r3, [r7, #16]
 8003672:	697b      	ldr	r3, [r7, #20]
 8003674:	2203      	movs	r2, #3
 8003676:	4013      	ands	r3, r2
 8003678:	009b      	lsls	r3, r3, #2
 800367a:	220f      	movs	r2, #15
 800367c:	409a      	lsls	r2, r3
 800367e:	0013      	movs	r3, r2
 8003680:	43da      	mvns	r2, r3
 8003682:	693b      	ldr	r3, [r7, #16]
 8003684:	4013      	ands	r3, r2
 8003686:	613b      	str	r3, [r7, #16]
 8003688:	687a      	ldr	r2, [r7, #4]
 800368a:	2390      	movs	r3, #144	; 0x90
 800368c:	05db      	lsls	r3, r3, #23
 800368e:	429a      	cmp	r2, r3
 8003690:	d013      	beq.n	80036ba <HAL_GPIO_Init+0x1e2>
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	4a44      	ldr	r2, [pc, #272]	; (80037a8 <HAL_GPIO_Init+0x2d0>)
 8003696:	4293      	cmp	r3, r2
 8003698:	d00d      	beq.n	80036b6 <HAL_GPIO_Init+0x1de>
 800369a:	687b      	ldr	r3, [r7, #4]
 800369c:	4a43      	ldr	r2, [pc, #268]	; (80037ac <HAL_GPIO_Init+0x2d4>)
 800369e:	4293      	cmp	r3, r2
 80036a0:	d007      	beq.n	80036b2 <HAL_GPIO_Init+0x1da>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	4a42      	ldr	r2, [pc, #264]	; (80037b0 <HAL_GPIO_Init+0x2d8>)
 80036a6:	4293      	cmp	r3, r2
 80036a8:	d101      	bne.n	80036ae <HAL_GPIO_Init+0x1d6>
 80036aa:	2303      	movs	r3, #3
 80036ac:	e006      	b.n	80036bc <HAL_GPIO_Init+0x1e4>
 80036ae:	2305      	movs	r3, #5
 80036b0:	e004      	b.n	80036bc <HAL_GPIO_Init+0x1e4>
 80036b2:	2302      	movs	r3, #2
 80036b4:	e002      	b.n	80036bc <HAL_GPIO_Init+0x1e4>
 80036b6:	2301      	movs	r3, #1
 80036b8:	e000      	b.n	80036bc <HAL_GPIO_Init+0x1e4>
 80036ba:	2300      	movs	r3, #0
 80036bc:	697a      	ldr	r2, [r7, #20]
 80036be:	2103      	movs	r1, #3
 80036c0:	400a      	ands	r2, r1
 80036c2:	0092      	lsls	r2, r2, #2
 80036c4:	4093      	lsls	r3, r2
 80036c6:	693a      	ldr	r2, [r7, #16]
 80036c8:	4313      	orrs	r3, r2
 80036ca:	613b      	str	r3, [r7, #16]
 80036cc:	4935      	ldr	r1, [pc, #212]	; (80037a4 <HAL_GPIO_Init+0x2cc>)
 80036ce:	697b      	ldr	r3, [r7, #20]
 80036d0:	089b      	lsrs	r3, r3, #2
 80036d2:	3302      	adds	r3, #2
 80036d4:	009b      	lsls	r3, r3, #2
 80036d6:	693a      	ldr	r2, [r7, #16]
 80036d8:	505a      	str	r2, [r3, r1]
 80036da:	4b36      	ldr	r3, [pc, #216]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 80036dc:	689b      	ldr	r3, [r3, #8]
 80036de:	613b      	str	r3, [r7, #16]
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	43da      	mvns	r2, r3
 80036e4:	693b      	ldr	r3, [r7, #16]
 80036e6:	4013      	ands	r3, r2
 80036e8:	613b      	str	r3, [r7, #16]
 80036ea:	683b      	ldr	r3, [r7, #0]
 80036ec:	685a      	ldr	r2, [r3, #4]
 80036ee:	2380      	movs	r3, #128	; 0x80
 80036f0:	035b      	lsls	r3, r3, #13
 80036f2:	4013      	ands	r3, r2
 80036f4:	d003      	beq.n	80036fe <HAL_GPIO_Init+0x226>
 80036f6:	693a      	ldr	r2, [r7, #16]
 80036f8:	68fb      	ldr	r3, [r7, #12]
 80036fa:	4313      	orrs	r3, r2
 80036fc:	613b      	str	r3, [r7, #16]
 80036fe:	4b2d      	ldr	r3, [pc, #180]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 8003700:	693a      	ldr	r2, [r7, #16]
 8003702:	609a      	str	r2, [r3, #8]
 8003704:	4b2b      	ldr	r3, [pc, #172]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 8003706:	68db      	ldr	r3, [r3, #12]
 8003708:	613b      	str	r3, [r7, #16]
 800370a:	68fb      	ldr	r3, [r7, #12]
 800370c:	43da      	mvns	r2, r3
 800370e:	693b      	ldr	r3, [r7, #16]
 8003710:	4013      	ands	r3, r2
 8003712:	613b      	str	r3, [r7, #16]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	685a      	ldr	r2, [r3, #4]
 8003718:	2380      	movs	r3, #128	; 0x80
 800371a:	039b      	lsls	r3, r3, #14
 800371c:	4013      	ands	r3, r2
 800371e:	d003      	beq.n	8003728 <HAL_GPIO_Init+0x250>
 8003720:	693a      	ldr	r2, [r7, #16]
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	4313      	orrs	r3, r2
 8003726:	613b      	str	r3, [r7, #16]
 8003728:	4b22      	ldr	r3, [pc, #136]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 800372a:	693a      	ldr	r2, [r7, #16]
 800372c:	60da      	str	r2, [r3, #12]
 800372e:	4b21      	ldr	r3, [pc, #132]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 8003730:	685b      	ldr	r3, [r3, #4]
 8003732:	613b      	str	r3, [r7, #16]
 8003734:	68fb      	ldr	r3, [r7, #12]
 8003736:	43da      	mvns	r2, r3
 8003738:	693b      	ldr	r3, [r7, #16]
 800373a:	4013      	ands	r3, r2
 800373c:	613b      	str	r3, [r7, #16]
 800373e:	683b      	ldr	r3, [r7, #0]
 8003740:	685a      	ldr	r2, [r3, #4]
 8003742:	2380      	movs	r3, #128	; 0x80
 8003744:	029b      	lsls	r3, r3, #10
 8003746:	4013      	ands	r3, r2
 8003748:	d003      	beq.n	8003752 <HAL_GPIO_Init+0x27a>
 800374a:	693a      	ldr	r2, [r7, #16]
 800374c:	68fb      	ldr	r3, [r7, #12]
 800374e:	4313      	orrs	r3, r2
 8003750:	613b      	str	r3, [r7, #16]
 8003752:	4b18      	ldr	r3, [pc, #96]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 8003754:	693a      	ldr	r2, [r7, #16]
 8003756:	605a      	str	r2, [r3, #4]
 8003758:	4b16      	ldr	r3, [pc, #88]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 800375a:	681b      	ldr	r3, [r3, #0]
 800375c:	613b      	str	r3, [r7, #16]
 800375e:	68fb      	ldr	r3, [r7, #12]
 8003760:	43da      	mvns	r2, r3
 8003762:	693b      	ldr	r3, [r7, #16]
 8003764:	4013      	ands	r3, r2
 8003766:	613b      	str	r3, [r7, #16]
 8003768:	683b      	ldr	r3, [r7, #0]
 800376a:	685a      	ldr	r2, [r3, #4]
 800376c:	2380      	movs	r3, #128	; 0x80
 800376e:	025b      	lsls	r3, r3, #9
 8003770:	4013      	ands	r3, r2
 8003772:	d003      	beq.n	800377c <HAL_GPIO_Init+0x2a4>
 8003774:	693a      	ldr	r2, [r7, #16]
 8003776:	68fb      	ldr	r3, [r7, #12]
 8003778:	4313      	orrs	r3, r2
 800377a:	613b      	str	r3, [r7, #16]
 800377c:	4b0d      	ldr	r3, [pc, #52]	; (80037b4 <HAL_GPIO_Init+0x2dc>)
 800377e:	693a      	ldr	r2, [r7, #16]
 8003780:	601a      	str	r2, [r3, #0]
 8003782:	697b      	ldr	r3, [r7, #20]
 8003784:	3301      	adds	r3, #1
 8003786:	617b      	str	r3, [r7, #20]
 8003788:	683b      	ldr	r3, [r7, #0]
 800378a:	681a      	ldr	r2, [r3, #0]
 800378c:	697b      	ldr	r3, [r7, #20]
 800378e:	40da      	lsrs	r2, r3
 8003790:	1e13      	subs	r3, r2, #0
 8003792:	d000      	beq.n	8003796 <HAL_GPIO_Init+0x2be>
 8003794:	e6a8      	b.n	80034e8 <HAL_GPIO_Init+0x10>
 8003796:	46c0      	nop			; (mov r8, r8)
 8003798:	46c0      	nop			; (mov r8, r8)
 800379a:	46bd      	mov	sp, r7
 800379c:	b006      	add	sp, #24
 800379e:	bd80      	pop	{r7, pc}
 80037a0:	40021000 	.word	0x40021000
 80037a4:	40010000 	.word	0x40010000
 80037a8:	48000400 	.word	0x48000400
 80037ac:	48000800 	.word	0x48000800
 80037b0:	48000c00 	.word	0x48000c00
 80037b4:	40010400 	.word	0x40010400

080037b8 <HAL_GPIO_ReadPin>:
 80037b8:	b580      	push	{r7, lr}
 80037ba:	b084      	sub	sp, #16
 80037bc:	af00      	add	r7, sp, #0
 80037be:	6078      	str	r0, [r7, #4]
 80037c0:	000a      	movs	r2, r1
 80037c2:	1cbb      	adds	r3, r7, #2
 80037c4:	801a      	strh	r2, [r3, #0]
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	691b      	ldr	r3, [r3, #16]
 80037ca:	1cba      	adds	r2, r7, #2
 80037cc:	8812      	ldrh	r2, [r2, #0]
 80037ce:	4013      	ands	r3, r2
 80037d0:	d004      	beq.n	80037dc <HAL_GPIO_ReadPin+0x24>
 80037d2:	230f      	movs	r3, #15
 80037d4:	18fb      	adds	r3, r7, r3
 80037d6:	2201      	movs	r2, #1
 80037d8:	701a      	strb	r2, [r3, #0]
 80037da:	e003      	b.n	80037e4 <HAL_GPIO_ReadPin+0x2c>
 80037dc:	230f      	movs	r3, #15
 80037de:	18fb      	adds	r3, r7, r3
 80037e0:	2200      	movs	r2, #0
 80037e2:	701a      	strb	r2, [r3, #0]
 80037e4:	230f      	movs	r3, #15
 80037e6:	18fb      	adds	r3, r7, r3
 80037e8:	781b      	ldrb	r3, [r3, #0]
 80037ea:	0018      	movs	r0, r3
 80037ec:	46bd      	mov	sp, r7
 80037ee:	b004      	add	sp, #16
 80037f0:	bd80      	pop	{r7, pc}

080037f2 <HAL_GPIO_WritePin>:
 80037f2:	b580      	push	{r7, lr}
 80037f4:	b082      	sub	sp, #8
 80037f6:	af00      	add	r7, sp, #0
 80037f8:	6078      	str	r0, [r7, #4]
 80037fa:	0008      	movs	r0, r1
 80037fc:	0011      	movs	r1, r2
 80037fe:	1cbb      	adds	r3, r7, #2
 8003800:	1c02      	adds	r2, r0, #0
 8003802:	801a      	strh	r2, [r3, #0]
 8003804:	1c7b      	adds	r3, r7, #1
 8003806:	1c0a      	adds	r2, r1, #0
 8003808:	701a      	strb	r2, [r3, #0]
 800380a:	1c7b      	adds	r3, r7, #1
 800380c:	781b      	ldrb	r3, [r3, #0]
 800380e:	2b00      	cmp	r3, #0
 8003810:	d004      	beq.n	800381c <HAL_GPIO_WritePin+0x2a>
 8003812:	1cbb      	adds	r3, r7, #2
 8003814:	881a      	ldrh	r2, [r3, #0]
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	619a      	str	r2, [r3, #24]
 800381a:	e003      	b.n	8003824 <HAL_GPIO_WritePin+0x32>
 800381c:	1cbb      	adds	r3, r7, #2
 800381e:	881a      	ldrh	r2, [r3, #0]
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	629a      	str	r2, [r3, #40]	; 0x28
 8003824:	46c0      	nop			; (mov r8, r8)
 8003826:	46bd      	mov	sp, r7
 8003828:	b002      	add	sp, #8
 800382a:	bd80      	pop	{r7, pc}

0800382c <HAL_GPIO_EXTI_IRQHandler>:
 800382c:	b580      	push	{r7, lr}
 800382e:	b082      	sub	sp, #8
 8003830:	af00      	add	r7, sp, #0
 8003832:	0002      	movs	r2, r0
 8003834:	1dbb      	adds	r3, r7, #6
 8003836:	801a      	strh	r2, [r3, #0]
 8003838:	4b09      	ldr	r3, [pc, #36]	; (8003860 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 800383a:	695b      	ldr	r3, [r3, #20]
 800383c:	1dba      	adds	r2, r7, #6
 800383e:	8812      	ldrh	r2, [r2, #0]
 8003840:	4013      	ands	r3, r2
 8003842:	d008      	beq.n	8003856 <HAL_GPIO_EXTI_IRQHandler+0x2a>
 8003844:	4b06      	ldr	r3, [pc, #24]	; (8003860 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 8003846:	1dba      	adds	r2, r7, #6
 8003848:	8812      	ldrh	r2, [r2, #0]
 800384a:	615a      	str	r2, [r3, #20]
 800384c:	1dbb      	adds	r3, r7, #6
 800384e:	881b      	ldrh	r3, [r3, #0]
 8003850:	0018      	movs	r0, r3
 8003852:	f7fe fc29 	bl	80020a8 <HAL_GPIO_EXTI_Callback>
 8003856:	46c0      	nop			; (mov r8, r8)
 8003858:	46bd      	mov	sp, r7
 800385a:	b002      	add	sp, #8
 800385c:	bd80      	pop	{r7, pc}
 800385e:	46c0      	nop			; (mov r8, r8)
 8003860:	40010400 	.word	0x40010400

08003864 <HAL_I2C_Init>:
 8003864:	b580      	push	{r7, lr}
 8003866:	b082      	sub	sp, #8
 8003868:	af00      	add	r7, sp, #0
 800386a:	6078      	str	r0, [r7, #4]
 800386c:	687b      	ldr	r3, [r7, #4]
 800386e:	2b00      	cmp	r3, #0
 8003870:	d101      	bne.n	8003876 <HAL_I2C_Init+0x12>
 8003872:	2301      	movs	r3, #1
 8003874:	e082      	b.n	800397c <HAL_I2C_Init+0x118>
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	2241      	movs	r2, #65	; 0x41
 800387a:	5c9b      	ldrb	r3, [r3, r2]
 800387c:	b2db      	uxtb	r3, r3
 800387e:	2b00      	cmp	r3, #0
 8003880:	d107      	bne.n	8003892 <HAL_I2C_Init+0x2e>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	2240      	movs	r2, #64	; 0x40
 8003886:	2100      	movs	r1, #0
 8003888:	5499      	strb	r1, [r3, r2]
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	0018      	movs	r0, r3
 800388e:	f7ff fa69 	bl	8002d64 <HAL_I2C_MspInit>
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	2241      	movs	r2, #65	; 0x41
 8003896:	2124      	movs	r1, #36	; 0x24
 8003898:	5499      	strb	r1, [r3, r2]
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	681a      	ldr	r2, [r3, #0]
 80038a0:	687b      	ldr	r3, [r7, #4]
 80038a2:	681b      	ldr	r3, [r3, #0]
 80038a4:	2101      	movs	r1, #1
 80038a6:	438a      	bics	r2, r1
 80038a8:	601a      	str	r2, [r3, #0]
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	685a      	ldr	r2, [r3, #4]
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	681b      	ldr	r3, [r3, #0]
 80038b2:	4934      	ldr	r1, [pc, #208]	; (8003984 <HAL_I2C_Init+0x120>)
 80038b4:	400a      	ands	r2, r1
 80038b6:	611a      	str	r2, [r3, #16]
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	689a      	ldr	r2, [r3, #8]
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	4931      	ldr	r1, [pc, #196]	; (8003988 <HAL_I2C_Init+0x124>)
 80038c4:	400a      	ands	r2, r1
 80038c6:	609a      	str	r2, [r3, #8]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	68db      	ldr	r3, [r3, #12]
 80038cc:	2b01      	cmp	r3, #1
 80038ce:	d108      	bne.n	80038e2 <HAL_I2C_Init+0x7e>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	689a      	ldr	r2, [r3, #8]
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	2180      	movs	r1, #128	; 0x80
 80038da:	0209      	lsls	r1, r1, #8
 80038dc:	430a      	orrs	r2, r1
 80038de:	609a      	str	r2, [r3, #8]
 80038e0:	e007      	b.n	80038f2 <HAL_I2C_Init+0x8e>
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	689a      	ldr	r2, [r3, #8]
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	681b      	ldr	r3, [r3, #0]
 80038ea:	2184      	movs	r1, #132	; 0x84
 80038ec:	0209      	lsls	r1, r1, #8
 80038ee:	430a      	orrs	r2, r1
 80038f0:	609a      	str	r2, [r3, #8]
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	68db      	ldr	r3, [r3, #12]
 80038f6:	2b02      	cmp	r3, #2
 80038f8:	d104      	bne.n	8003904 <HAL_I2C_Init+0xa0>
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	2280      	movs	r2, #128	; 0x80
 8003900:	0112      	lsls	r2, r2, #4
 8003902:	605a      	str	r2, [r3, #4]
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	685a      	ldr	r2, [r3, #4]
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	681b      	ldr	r3, [r3, #0]
 800390e:	491f      	ldr	r1, [pc, #124]	; (800398c <HAL_I2C_Init+0x128>)
 8003910:	430a      	orrs	r2, r1
 8003912:	605a      	str	r2, [r3, #4]
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	68da      	ldr	r2, [r3, #12]
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	491a      	ldr	r1, [pc, #104]	; (8003988 <HAL_I2C_Init+0x124>)
 8003920:	400a      	ands	r2, r1
 8003922:	60da      	str	r2, [r3, #12]
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	691a      	ldr	r2, [r3, #16]
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	695b      	ldr	r3, [r3, #20]
 800392c:	431a      	orrs	r2, r3
 800392e:	0011      	movs	r1, r2
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	699b      	ldr	r3, [r3, #24]
 8003934:	021a      	lsls	r2, r3, #8
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	430a      	orrs	r2, r1
 800393c:	60da      	str	r2, [r3, #12]
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	69d9      	ldr	r1, [r3, #28]
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	6a1a      	ldr	r2, [r3, #32]
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	430a      	orrs	r2, r1
 800394c:	601a      	str	r2, [r3, #0]
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	681a      	ldr	r2, [r3, #0]
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	681b      	ldr	r3, [r3, #0]
 8003958:	2101      	movs	r1, #1
 800395a:	430a      	orrs	r2, r1
 800395c:	601a      	str	r2, [r3, #0]
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	2200      	movs	r2, #0
 8003962:	645a      	str	r2, [r3, #68]	; 0x44
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	2241      	movs	r2, #65	; 0x41
 8003968:	2120      	movs	r1, #32
 800396a:	5499      	strb	r1, [r3, r2]
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	2200      	movs	r2, #0
 8003970:	631a      	str	r2, [r3, #48]	; 0x30
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	2242      	movs	r2, #66	; 0x42
 8003976:	2100      	movs	r1, #0
 8003978:	5499      	strb	r1, [r3, r2]
 800397a:	2300      	movs	r3, #0
 800397c:	0018      	movs	r0, r3
 800397e:	46bd      	mov	sp, r7
 8003980:	b002      	add	sp, #8
 8003982:	bd80      	pop	{r7, pc}
 8003984:	f0ffffff 	.word	0xf0ffffff
 8003988:	ffff7fff 	.word	0xffff7fff
 800398c:	02008000 	.word	0x02008000

08003990 <HAL_I2C_Mem_Write>:
 8003990:	b590      	push	{r4, r7, lr}
 8003992:	b089      	sub	sp, #36	; 0x24
 8003994:	af02      	add	r7, sp, #8
 8003996:	60f8      	str	r0, [r7, #12]
 8003998:	000c      	movs	r4, r1
 800399a:	0010      	movs	r0, r2
 800399c:	0019      	movs	r1, r3
 800399e:	230a      	movs	r3, #10
 80039a0:	18fb      	adds	r3, r7, r3
 80039a2:	1c22      	adds	r2, r4, #0
 80039a4:	801a      	strh	r2, [r3, #0]
 80039a6:	2308      	movs	r3, #8
 80039a8:	18fb      	adds	r3, r7, r3
 80039aa:	1c02      	adds	r2, r0, #0
 80039ac:	801a      	strh	r2, [r3, #0]
 80039ae:	1dbb      	adds	r3, r7, #6
 80039b0:	1c0a      	adds	r2, r1, #0
 80039b2:	801a      	strh	r2, [r3, #0]
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	2241      	movs	r2, #65	; 0x41
 80039b8:	5c9b      	ldrb	r3, [r3, r2]
 80039ba:	b2db      	uxtb	r3, r3
 80039bc:	2b20      	cmp	r3, #32
 80039be:	d000      	beq.n	80039c2 <HAL_I2C_Mem_Write+0x32>
 80039c0:	e10c      	b.n	8003bdc <HAL_I2C_Mem_Write+0x24c>
 80039c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d004      	beq.n	80039d2 <HAL_I2C_Mem_Write+0x42>
 80039c8:	232c      	movs	r3, #44	; 0x2c
 80039ca:	18fb      	adds	r3, r7, r3
 80039cc:	881b      	ldrh	r3, [r3, #0]
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d105      	bne.n	80039de <HAL_I2C_Mem_Write+0x4e>
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	2280      	movs	r2, #128	; 0x80
 80039d6:	0092      	lsls	r2, r2, #2
 80039d8:	645a      	str	r2, [r3, #68]	; 0x44
 80039da:	2301      	movs	r3, #1
 80039dc:	e0ff      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 80039de:	68fb      	ldr	r3, [r7, #12]
 80039e0:	2240      	movs	r2, #64	; 0x40
 80039e2:	5c9b      	ldrb	r3, [r3, r2]
 80039e4:	2b01      	cmp	r3, #1
 80039e6:	d101      	bne.n	80039ec <HAL_I2C_Mem_Write+0x5c>
 80039e8:	2302      	movs	r3, #2
 80039ea:	e0f8      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	2240      	movs	r2, #64	; 0x40
 80039f0:	2101      	movs	r1, #1
 80039f2:	5499      	strb	r1, [r3, r2]
 80039f4:	f7ff fbe6 	bl	80031c4 <HAL_GetTick>
 80039f8:	0003      	movs	r3, r0
 80039fa:	617b      	str	r3, [r7, #20]
 80039fc:	2380      	movs	r3, #128	; 0x80
 80039fe:	0219      	lsls	r1, r3, #8
 8003a00:	68f8      	ldr	r0, [r7, #12]
 8003a02:	697b      	ldr	r3, [r7, #20]
 8003a04:	9300      	str	r3, [sp, #0]
 8003a06:	2319      	movs	r3, #25
 8003a08:	2201      	movs	r2, #1
 8003a0a:	f000 fb0b 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003a0e:	1e03      	subs	r3, r0, #0
 8003a10:	d001      	beq.n	8003a16 <HAL_I2C_Mem_Write+0x86>
 8003a12:	2301      	movs	r3, #1
 8003a14:	e0e3      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 8003a16:	68fb      	ldr	r3, [r7, #12]
 8003a18:	2241      	movs	r2, #65	; 0x41
 8003a1a:	2121      	movs	r1, #33	; 0x21
 8003a1c:	5499      	strb	r1, [r3, r2]
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	2242      	movs	r2, #66	; 0x42
 8003a22:	2140      	movs	r1, #64	; 0x40
 8003a24:	5499      	strb	r1, [r3, r2]
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	2200      	movs	r2, #0
 8003a2a:	645a      	str	r2, [r3, #68]	; 0x44
 8003a2c:	68fb      	ldr	r3, [r7, #12]
 8003a2e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003a30:	625a      	str	r2, [r3, #36]	; 0x24
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	222c      	movs	r2, #44	; 0x2c
 8003a36:	18ba      	adds	r2, r7, r2
 8003a38:	8812      	ldrh	r2, [r2, #0]
 8003a3a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003a3c:	68fb      	ldr	r3, [r7, #12]
 8003a3e:	2200      	movs	r2, #0
 8003a40:	635a      	str	r2, [r3, #52]	; 0x34
 8003a42:	1dbb      	adds	r3, r7, #6
 8003a44:	881c      	ldrh	r4, [r3, #0]
 8003a46:	2308      	movs	r3, #8
 8003a48:	18fb      	adds	r3, r7, r3
 8003a4a:	881a      	ldrh	r2, [r3, #0]
 8003a4c:	230a      	movs	r3, #10
 8003a4e:	18fb      	adds	r3, r7, r3
 8003a50:	8819      	ldrh	r1, [r3, #0]
 8003a52:	68f8      	ldr	r0, [r7, #12]
 8003a54:	697b      	ldr	r3, [r7, #20]
 8003a56:	9301      	str	r3, [sp, #4]
 8003a58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003a5a:	9300      	str	r3, [sp, #0]
 8003a5c:	0023      	movs	r3, r4
 8003a5e:	f000 f9f9 	bl	8003e54 <I2C_RequestMemoryWrite>
 8003a62:	1e03      	subs	r3, r0, #0
 8003a64:	d005      	beq.n	8003a72 <HAL_I2C_Mem_Write+0xe2>
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	2240      	movs	r2, #64	; 0x40
 8003a6a:	2100      	movs	r1, #0
 8003a6c:	5499      	strb	r1, [r3, r2]
 8003a6e:	2301      	movs	r3, #1
 8003a70:	e0b5      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003a76:	b29b      	uxth	r3, r3
 8003a78:	2bff      	cmp	r3, #255	; 0xff
 8003a7a:	d911      	bls.n	8003aa0 <HAL_I2C_Mem_Write+0x110>
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	22ff      	movs	r2, #255	; 0xff
 8003a80:	851a      	strh	r2, [r3, #40]	; 0x28
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003a86:	b2da      	uxtb	r2, r3
 8003a88:	2380      	movs	r3, #128	; 0x80
 8003a8a:	045c      	lsls	r4, r3, #17
 8003a8c:	230a      	movs	r3, #10
 8003a8e:	18fb      	adds	r3, r7, r3
 8003a90:	8819      	ldrh	r1, [r3, #0]
 8003a92:	68f8      	ldr	r0, [r7, #12]
 8003a94:	2300      	movs	r3, #0
 8003a96:	9300      	str	r3, [sp, #0]
 8003a98:	0023      	movs	r3, r4
 8003a9a:	f000 fc9b 	bl	80043d4 <I2C_TransferConfig>
 8003a9e:	e012      	b.n	8003ac6 <HAL_I2C_Mem_Write+0x136>
 8003aa0:	68fb      	ldr	r3, [r7, #12]
 8003aa2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003aa4:	b29a      	uxth	r2, r3
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	851a      	strh	r2, [r3, #40]	; 0x28
 8003aaa:	68fb      	ldr	r3, [r7, #12]
 8003aac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003aae:	b2da      	uxtb	r2, r3
 8003ab0:	2380      	movs	r3, #128	; 0x80
 8003ab2:	049c      	lsls	r4, r3, #18
 8003ab4:	230a      	movs	r3, #10
 8003ab6:	18fb      	adds	r3, r7, r3
 8003ab8:	8819      	ldrh	r1, [r3, #0]
 8003aba:	68f8      	ldr	r0, [r7, #12]
 8003abc:	2300      	movs	r3, #0
 8003abe:	9300      	str	r3, [sp, #0]
 8003ac0:	0023      	movs	r3, r4
 8003ac2:	f000 fc87 	bl	80043d4 <I2C_TransferConfig>
 8003ac6:	697a      	ldr	r2, [r7, #20]
 8003ac8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	0018      	movs	r0, r3
 8003ace:	f000 faf7 	bl	80040c0 <I2C_WaitOnTXISFlagUntilTimeout>
 8003ad2:	1e03      	subs	r3, r0, #0
 8003ad4:	d001      	beq.n	8003ada <HAL_I2C_Mem_Write+0x14a>
 8003ad6:	2301      	movs	r3, #1
 8003ad8:	e081      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 8003ada:	68fb      	ldr	r3, [r7, #12]
 8003adc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ade:	781a      	ldrb	r2, [r3, #0]
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	629a      	str	r2, [r3, #40]	; 0x28
 8003ae6:	68fb      	ldr	r3, [r7, #12]
 8003ae8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aea:	1c5a      	adds	r2, r3, #1
 8003aec:	68fb      	ldr	r3, [r7, #12]
 8003aee:	625a      	str	r2, [r3, #36]	; 0x24
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003af4:	b29b      	uxth	r3, r3
 8003af6:	3b01      	subs	r3, #1
 8003af8:	b29a      	uxth	r2, r3
 8003afa:	68fb      	ldr	r3, [r7, #12]
 8003afc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003afe:	68fb      	ldr	r3, [r7, #12]
 8003b00:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b02:	3b01      	subs	r3, #1
 8003b04:	b29a      	uxth	r2, r3
 8003b06:	68fb      	ldr	r3, [r7, #12]
 8003b08:	851a      	strh	r2, [r3, #40]	; 0x28
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b0e:	b29b      	uxth	r3, r3
 8003b10:	2b00      	cmp	r3, #0
 8003b12:	d03a      	beq.n	8003b8a <HAL_I2C_Mem_Write+0x1fa>
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	d136      	bne.n	8003b8a <HAL_I2C_Mem_Write+0x1fa>
 8003b1c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003b1e:	68f8      	ldr	r0, [r7, #12]
 8003b20:	697b      	ldr	r3, [r7, #20]
 8003b22:	9300      	str	r3, [sp, #0]
 8003b24:	0013      	movs	r3, r2
 8003b26:	2200      	movs	r2, #0
 8003b28:	2180      	movs	r1, #128	; 0x80
 8003b2a:	f000 fa7b 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003b2e:	1e03      	subs	r3, r0, #0
 8003b30:	d001      	beq.n	8003b36 <HAL_I2C_Mem_Write+0x1a6>
 8003b32:	2301      	movs	r3, #1
 8003b34:	e053      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b3a:	b29b      	uxth	r3, r3
 8003b3c:	2bff      	cmp	r3, #255	; 0xff
 8003b3e:	d911      	bls.n	8003b64 <HAL_I2C_Mem_Write+0x1d4>
 8003b40:	68fb      	ldr	r3, [r7, #12]
 8003b42:	22ff      	movs	r2, #255	; 0xff
 8003b44:	851a      	strh	r2, [r3, #40]	; 0x28
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b4a:	b2da      	uxtb	r2, r3
 8003b4c:	2380      	movs	r3, #128	; 0x80
 8003b4e:	045c      	lsls	r4, r3, #17
 8003b50:	230a      	movs	r3, #10
 8003b52:	18fb      	adds	r3, r7, r3
 8003b54:	8819      	ldrh	r1, [r3, #0]
 8003b56:	68f8      	ldr	r0, [r7, #12]
 8003b58:	2300      	movs	r3, #0
 8003b5a:	9300      	str	r3, [sp, #0]
 8003b5c:	0023      	movs	r3, r4
 8003b5e:	f000 fc39 	bl	80043d4 <I2C_TransferConfig>
 8003b62:	e012      	b.n	8003b8a <HAL_I2C_Mem_Write+0x1fa>
 8003b64:	68fb      	ldr	r3, [r7, #12]
 8003b66:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b68:	b29a      	uxth	r2, r3
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	851a      	strh	r2, [r3, #40]	; 0x28
 8003b6e:	68fb      	ldr	r3, [r7, #12]
 8003b70:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003b72:	b2da      	uxtb	r2, r3
 8003b74:	2380      	movs	r3, #128	; 0x80
 8003b76:	049c      	lsls	r4, r3, #18
 8003b78:	230a      	movs	r3, #10
 8003b7a:	18fb      	adds	r3, r7, r3
 8003b7c:	8819      	ldrh	r1, [r3, #0]
 8003b7e:	68f8      	ldr	r0, [r7, #12]
 8003b80:	2300      	movs	r3, #0
 8003b82:	9300      	str	r3, [sp, #0]
 8003b84:	0023      	movs	r3, r4
 8003b86:	f000 fc25 	bl	80043d4 <I2C_TransferConfig>
 8003b8a:	68fb      	ldr	r3, [r7, #12]
 8003b8c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003b8e:	b29b      	uxth	r3, r3
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	d198      	bne.n	8003ac6 <HAL_I2C_Mem_Write+0x136>
 8003b94:	697a      	ldr	r2, [r7, #20]
 8003b96:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003b98:	68fb      	ldr	r3, [r7, #12]
 8003b9a:	0018      	movs	r0, r3
 8003b9c:	f000 fad6 	bl	800414c <I2C_WaitOnSTOPFlagUntilTimeout>
 8003ba0:	1e03      	subs	r3, r0, #0
 8003ba2:	d001      	beq.n	8003ba8 <HAL_I2C_Mem_Write+0x218>
 8003ba4:	2301      	movs	r3, #1
 8003ba6:	e01a      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	2220      	movs	r2, #32
 8003bae:	61da      	str	r2, [r3, #28]
 8003bb0:	68fb      	ldr	r3, [r7, #12]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	685a      	ldr	r2, [r3, #4]
 8003bb6:	68fb      	ldr	r3, [r7, #12]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	490b      	ldr	r1, [pc, #44]	; (8003be8 <HAL_I2C_Mem_Write+0x258>)
 8003bbc:	400a      	ands	r2, r1
 8003bbe:	605a      	str	r2, [r3, #4]
 8003bc0:	68fb      	ldr	r3, [r7, #12]
 8003bc2:	2241      	movs	r2, #65	; 0x41
 8003bc4:	2120      	movs	r1, #32
 8003bc6:	5499      	strb	r1, [r3, r2]
 8003bc8:	68fb      	ldr	r3, [r7, #12]
 8003bca:	2242      	movs	r2, #66	; 0x42
 8003bcc:	2100      	movs	r1, #0
 8003bce:	5499      	strb	r1, [r3, r2]
 8003bd0:	68fb      	ldr	r3, [r7, #12]
 8003bd2:	2240      	movs	r2, #64	; 0x40
 8003bd4:	2100      	movs	r1, #0
 8003bd6:	5499      	strb	r1, [r3, r2]
 8003bd8:	2300      	movs	r3, #0
 8003bda:	e000      	b.n	8003bde <HAL_I2C_Mem_Write+0x24e>
 8003bdc:	2302      	movs	r3, #2
 8003bde:	0018      	movs	r0, r3
 8003be0:	46bd      	mov	sp, r7
 8003be2:	b007      	add	sp, #28
 8003be4:	bd90      	pop	{r4, r7, pc}
 8003be6:	46c0      	nop			; (mov r8, r8)
 8003be8:	fe00e800 	.word	0xfe00e800

08003bec <HAL_I2C_Mem_Read>:
 8003bec:	b590      	push	{r4, r7, lr}
 8003bee:	b089      	sub	sp, #36	; 0x24
 8003bf0:	af02      	add	r7, sp, #8
 8003bf2:	60f8      	str	r0, [r7, #12]
 8003bf4:	000c      	movs	r4, r1
 8003bf6:	0010      	movs	r0, r2
 8003bf8:	0019      	movs	r1, r3
 8003bfa:	230a      	movs	r3, #10
 8003bfc:	18fb      	adds	r3, r7, r3
 8003bfe:	1c22      	adds	r2, r4, #0
 8003c00:	801a      	strh	r2, [r3, #0]
 8003c02:	2308      	movs	r3, #8
 8003c04:	18fb      	adds	r3, r7, r3
 8003c06:	1c02      	adds	r2, r0, #0
 8003c08:	801a      	strh	r2, [r3, #0]
 8003c0a:	1dbb      	adds	r3, r7, #6
 8003c0c:	1c0a      	adds	r2, r1, #0
 8003c0e:	801a      	strh	r2, [r3, #0]
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	2241      	movs	r2, #65	; 0x41
 8003c14:	5c9b      	ldrb	r3, [r3, r2]
 8003c16:	b2db      	uxtb	r3, r3
 8003c18:	2b20      	cmp	r3, #32
 8003c1a:	d000      	beq.n	8003c1e <HAL_I2C_Mem_Read+0x32>
 8003c1c:	e110      	b.n	8003e40 <HAL_I2C_Mem_Read+0x254>
 8003c1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d004      	beq.n	8003c2e <HAL_I2C_Mem_Read+0x42>
 8003c24:	232c      	movs	r3, #44	; 0x2c
 8003c26:	18fb      	adds	r3, r7, r3
 8003c28:	881b      	ldrh	r3, [r3, #0]
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	d105      	bne.n	8003c3a <HAL_I2C_Mem_Read+0x4e>
 8003c2e:	68fb      	ldr	r3, [r7, #12]
 8003c30:	2280      	movs	r2, #128	; 0x80
 8003c32:	0092      	lsls	r2, r2, #2
 8003c34:	645a      	str	r2, [r3, #68]	; 0x44
 8003c36:	2301      	movs	r3, #1
 8003c38:	e103      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003c3a:	68fb      	ldr	r3, [r7, #12]
 8003c3c:	2240      	movs	r2, #64	; 0x40
 8003c3e:	5c9b      	ldrb	r3, [r3, r2]
 8003c40:	2b01      	cmp	r3, #1
 8003c42:	d101      	bne.n	8003c48 <HAL_I2C_Mem_Read+0x5c>
 8003c44:	2302      	movs	r3, #2
 8003c46:	e0fc      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003c48:	68fb      	ldr	r3, [r7, #12]
 8003c4a:	2240      	movs	r2, #64	; 0x40
 8003c4c:	2101      	movs	r1, #1
 8003c4e:	5499      	strb	r1, [r3, r2]
 8003c50:	f7ff fab8 	bl	80031c4 <HAL_GetTick>
 8003c54:	0003      	movs	r3, r0
 8003c56:	617b      	str	r3, [r7, #20]
 8003c58:	2380      	movs	r3, #128	; 0x80
 8003c5a:	0219      	lsls	r1, r3, #8
 8003c5c:	68f8      	ldr	r0, [r7, #12]
 8003c5e:	697b      	ldr	r3, [r7, #20]
 8003c60:	9300      	str	r3, [sp, #0]
 8003c62:	2319      	movs	r3, #25
 8003c64:	2201      	movs	r2, #1
 8003c66:	f000 f9dd 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003c6a:	1e03      	subs	r3, r0, #0
 8003c6c:	d001      	beq.n	8003c72 <HAL_I2C_Mem_Read+0x86>
 8003c6e:	2301      	movs	r3, #1
 8003c70:	e0e7      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003c72:	68fb      	ldr	r3, [r7, #12]
 8003c74:	2241      	movs	r2, #65	; 0x41
 8003c76:	2122      	movs	r1, #34	; 0x22
 8003c78:	5499      	strb	r1, [r3, r2]
 8003c7a:	68fb      	ldr	r3, [r7, #12]
 8003c7c:	2242      	movs	r2, #66	; 0x42
 8003c7e:	2140      	movs	r1, #64	; 0x40
 8003c80:	5499      	strb	r1, [r3, r2]
 8003c82:	68fb      	ldr	r3, [r7, #12]
 8003c84:	2200      	movs	r2, #0
 8003c86:	645a      	str	r2, [r3, #68]	; 0x44
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003c8c:	625a      	str	r2, [r3, #36]	; 0x24
 8003c8e:	68fb      	ldr	r3, [r7, #12]
 8003c90:	222c      	movs	r2, #44	; 0x2c
 8003c92:	18ba      	adds	r2, r7, r2
 8003c94:	8812      	ldrh	r2, [r2, #0]
 8003c96:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003c98:	68fb      	ldr	r3, [r7, #12]
 8003c9a:	2200      	movs	r2, #0
 8003c9c:	635a      	str	r2, [r3, #52]	; 0x34
 8003c9e:	1dbb      	adds	r3, r7, #6
 8003ca0:	881c      	ldrh	r4, [r3, #0]
 8003ca2:	2308      	movs	r3, #8
 8003ca4:	18fb      	adds	r3, r7, r3
 8003ca6:	881a      	ldrh	r2, [r3, #0]
 8003ca8:	230a      	movs	r3, #10
 8003caa:	18fb      	adds	r3, r7, r3
 8003cac:	8819      	ldrh	r1, [r3, #0]
 8003cae:	68f8      	ldr	r0, [r7, #12]
 8003cb0:	697b      	ldr	r3, [r7, #20]
 8003cb2:	9301      	str	r3, [sp, #4]
 8003cb4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003cb6:	9300      	str	r3, [sp, #0]
 8003cb8:	0023      	movs	r3, r4
 8003cba:	f000 f92f 	bl	8003f1c <I2C_RequestMemoryRead>
 8003cbe:	1e03      	subs	r3, r0, #0
 8003cc0:	d005      	beq.n	8003cce <HAL_I2C_Mem_Read+0xe2>
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	2240      	movs	r2, #64	; 0x40
 8003cc6:	2100      	movs	r1, #0
 8003cc8:	5499      	strb	r1, [r3, r2]
 8003cca:	2301      	movs	r3, #1
 8003ccc:	e0b9      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003cce:	68fb      	ldr	r3, [r7, #12]
 8003cd0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003cd2:	b29b      	uxth	r3, r3
 8003cd4:	2bff      	cmp	r3, #255	; 0xff
 8003cd6:	d911      	bls.n	8003cfc <HAL_I2C_Mem_Read+0x110>
 8003cd8:	68fb      	ldr	r3, [r7, #12]
 8003cda:	22ff      	movs	r2, #255	; 0xff
 8003cdc:	851a      	strh	r2, [r3, #40]	; 0x28
 8003cde:	68fb      	ldr	r3, [r7, #12]
 8003ce0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ce2:	b2da      	uxtb	r2, r3
 8003ce4:	2380      	movs	r3, #128	; 0x80
 8003ce6:	045c      	lsls	r4, r3, #17
 8003ce8:	230a      	movs	r3, #10
 8003cea:	18fb      	adds	r3, r7, r3
 8003cec:	8819      	ldrh	r1, [r3, #0]
 8003cee:	68f8      	ldr	r0, [r7, #12]
 8003cf0:	4b56      	ldr	r3, [pc, #344]	; (8003e4c <HAL_I2C_Mem_Read+0x260>)
 8003cf2:	9300      	str	r3, [sp, #0]
 8003cf4:	0023      	movs	r3, r4
 8003cf6:	f000 fb6d 	bl	80043d4 <I2C_TransferConfig>
 8003cfa:	e012      	b.n	8003d22 <HAL_I2C_Mem_Read+0x136>
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d00:	b29a      	uxth	r2, r3
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	851a      	strh	r2, [r3, #40]	; 0x28
 8003d06:	68fb      	ldr	r3, [r7, #12]
 8003d08:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d0a:	b2da      	uxtb	r2, r3
 8003d0c:	2380      	movs	r3, #128	; 0x80
 8003d0e:	049c      	lsls	r4, r3, #18
 8003d10:	230a      	movs	r3, #10
 8003d12:	18fb      	adds	r3, r7, r3
 8003d14:	8819      	ldrh	r1, [r3, #0]
 8003d16:	68f8      	ldr	r0, [r7, #12]
 8003d18:	4b4c      	ldr	r3, [pc, #304]	; (8003e4c <HAL_I2C_Mem_Read+0x260>)
 8003d1a:	9300      	str	r3, [sp, #0]
 8003d1c:	0023      	movs	r3, r4
 8003d1e:	f000 fb59 	bl	80043d4 <I2C_TransferConfig>
 8003d22:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003d24:	68f8      	ldr	r0, [r7, #12]
 8003d26:	697b      	ldr	r3, [r7, #20]
 8003d28:	9300      	str	r3, [sp, #0]
 8003d2a:	0013      	movs	r3, r2
 8003d2c:	2200      	movs	r2, #0
 8003d2e:	2104      	movs	r1, #4
 8003d30:	f000 f978 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003d34:	1e03      	subs	r3, r0, #0
 8003d36:	d001      	beq.n	8003d3c <HAL_I2C_Mem_Read+0x150>
 8003d38:	2301      	movs	r3, #1
 8003d3a:	e082      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003d3c:	68fb      	ldr	r3, [r7, #12]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d46:	b2d2      	uxtb	r2, r2
 8003d48:	701a      	strb	r2, [r3, #0]
 8003d4a:	68fb      	ldr	r3, [r7, #12]
 8003d4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d4e:	1c5a      	adds	r2, r3, #1
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	625a      	str	r2, [r3, #36]	; 0x24
 8003d54:	68fb      	ldr	r3, [r7, #12]
 8003d56:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d58:	3b01      	subs	r3, #1
 8003d5a:	b29a      	uxth	r2, r3
 8003d5c:	68fb      	ldr	r3, [r7, #12]
 8003d5e:	851a      	strh	r2, [r3, #40]	; 0x28
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d64:	b29b      	uxth	r3, r3
 8003d66:	3b01      	subs	r3, #1
 8003d68:	b29a      	uxth	r2, r3
 8003d6a:	68fb      	ldr	r3, [r7, #12]
 8003d6c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003d6e:	68fb      	ldr	r3, [r7, #12]
 8003d70:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d72:	b29b      	uxth	r3, r3
 8003d74:	2b00      	cmp	r3, #0
 8003d76:	d03a      	beq.n	8003dee <HAL_I2C_Mem_Read+0x202>
 8003d78:	68fb      	ldr	r3, [r7, #12]
 8003d7a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	d136      	bne.n	8003dee <HAL_I2C_Mem_Read+0x202>
 8003d80:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003d82:	68f8      	ldr	r0, [r7, #12]
 8003d84:	697b      	ldr	r3, [r7, #20]
 8003d86:	9300      	str	r3, [sp, #0]
 8003d88:	0013      	movs	r3, r2
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	2180      	movs	r1, #128	; 0x80
 8003d8e:	f000 f949 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003d92:	1e03      	subs	r3, r0, #0
 8003d94:	d001      	beq.n	8003d9a <HAL_I2C_Mem_Read+0x1ae>
 8003d96:	2301      	movs	r3, #1
 8003d98:	e053      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003d9a:	68fb      	ldr	r3, [r7, #12]
 8003d9c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d9e:	b29b      	uxth	r3, r3
 8003da0:	2bff      	cmp	r3, #255	; 0xff
 8003da2:	d911      	bls.n	8003dc8 <HAL_I2C_Mem_Read+0x1dc>
 8003da4:	68fb      	ldr	r3, [r7, #12]
 8003da6:	22ff      	movs	r2, #255	; 0xff
 8003da8:	851a      	strh	r2, [r3, #40]	; 0x28
 8003daa:	68fb      	ldr	r3, [r7, #12]
 8003dac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003dae:	b2da      	uxtb	r2, r3
 8003db0:	2380      	movs	r3, #128	; 0x80
 8003db2:	045c      	lsls	r4, r3, #17
 8003db4:	230a      	movs	r3, #10
 8003db6:	18fb      	adds	r3, r7, r3
 8003db8:	8819      	ldrh	r1, [r3, #0]
 8003dba:	68f8      	ldr	r0, [r7, #12]
 8003dbc:	2300      	movs	r3, #0
 8003dbe:	9300      	str	r3, [sp, #0]
 8003dc0:	0023      	movs	r3, r4
 8003dc2:	f000 fb07 	bl	80043d4 <I2C_TransferConfig>
 8003dc6:	e012      	b.n	8003dee <HAL_I2C_Mem_Read+0x202>
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003dcc:	b29a      	uxth	r2, r3
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	851a      	strh	r2, [r3, #40]	; 0x28
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003dd6:	b2da      	uxtb	r2, r3
 8003dd8:	2380      	movs	r3, #128	; 0x80
 8003dda:	049c      	lsls	r4, r3, #18
 8003ddc:	230a      	movs	r3, #10
 8003dde:	18fb      	adds	r3, r7, r3
 8003de0:	8819      	ldrh	r1, [r3, #0]
 8003de2:	68f8      	ldr	r0, [r7, #12]
 8003de4:	2300      	movs	r3, #0
 8003de6:	9300      	str	r3, [sp, #0]
 8003de8:	0023      	movs	r3, r4
 8003dea:	f000 faf3 	bl	80043d4 <I2C_TransferConfig>
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003df2:	b29b      	uxth	r3, r3
 8003df4:	2b00      	cmp	r3, #0
 8003df6:	d194      	bne.n	8003d22 <HAL_I2C_Mem_Read+0x136>
 8003df8:	697a      	ldr	r2, [r7, #20]
 8003dfa:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	0018      	movs	r0, r3
 8003e00:	f000 f9a4 	bl	800414c <I2C_WaitOnSTOPFlagUntilTimeout>
 8003e04:	1e03      	subs	r3, r0, #0
 8003e06:	d001      	beq.n	8003e0c <HAL_I2C_Mem_Read+0x220>
 8003e08:	2301      	movs	r3, #1
 8003e0a:	e01a      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003e0c:	68fb      	ldr	r3, [r7, #12]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	2220      	movs	r2, #32
 8003e12:	61da      	str	r2, [r3, #28]
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	685a      	ldr	r2, [r3, #4]
 8003e1a:	68fb      	ldr	r3, [r7, #12]
 8003e1c:	681b      	ldr	r3, [r3, #0]
 8003e1e:	490c      	ldr	r1, [pc, #48]	; (8003e50 <HAL_I2C_Mem_Read+0x264>)
 8003e20:	400a      	ands	r2, r1
 8003e22:	605a      	str	r2, [r3, #4]
 8003e24:	68fb      	ldr	r3, [r7, #12]
 8003e26:	2241      	movs	r2, #65	; 0x41
 8003e28:	2120      	movs	r1, #32
 8003e2a:	5499      	strb	r1, [r3, r2]
 8003e2c:	68fb      	ldr	r3, [r7, #12]
 8003e2e:	2242      	movs	r2, #66	; 0x42
 8003e30:	2100      	movs	r1, #0
 8003e32:	5499      	strb	r1, [r3, r2]
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	2240      	movs	r2, #64	; 0x40
 8003e38:	2100      	movs	r1, #0
 8003e3a:	5499      	strb	r1, [r3, r2]
 8003e3c:	2300      	movs	r3, #0
 8003e3e:	e000      	b.n	8003e42 <HAL_I2C_Mem_Read+0x256>
 8003e40:	2302      	movs	r3, #2
 8003e42:	0018      	movs	r0, r3
 8003e44:	46bd      	mov	sp, r7
 8003e46:	b007      	add	sp, #28
 8003e48:	bd90      	pop	{r4, r7, pc}
 8003e4a:	46c0      	nop			; (mov r8, r8)
 8003e4c:	80002400 	.word	0x80002400
 8003e50:	fe00e800 	.word	0xfe00e800

08003e54 <I2C_RequestMemoryWrite>:
 8003e54:	b5b0      	push	{r4, r5, r7, lr}
 8003e56:	b086      	sub	sp, #24
 8003e58:	af02      	add	r7, sp, #8
 8003e5a:	60f8      	str	r0, [r7, #12]
 8003e5c:	000c      	movs	r4, r1
 8003e5e:	0010      	movs	r0, r2
 8003e60:	0019      	movs	r1, r3
 8003e62:	250a      	movs	r5, #10
 8003e64:	197b      	adds	r3, r7, r5
 8003e66:	1c22      	adds	r2, r4, #0
 8003e68:	801a      	strh	r2, [r3, #0]
 8003e6a:	2308      	movs	r3, #8
 8003e6c:	18fb      	adds	r3, r7, r3
 8003e6e:	1c02      	adds	r2, r0, #0
 8003e70:	801a      	strh	r2, [r3, #0]
 8003e72:	1dbb      	adds	r3, r7, #6
 8003e74:	1c0a      	adds	r2, r1, #0
 8003e76:	801a      	strh	r2, [r3, #0]
 8003e78:	1dbb      	adds	r3, r7, #6
 8003e7a:	881b      	ldrh	r3, [r3, #0]
 8003e7c:	b2da      	uxtb	r2, r3
 8003e7e:	2380      	movs	r3, #128	; 0x80
 8003e80:	045c      	lsls	r4, r3, #17
 8003e82:	197b      	adds	r3, r7, r5
 8003e84:	8819      	ldrh	r1, [r3, #0]
 8003e86:	68f8      	ldr	r0, [r7, #12]
 8003e88:	4b23      	ldr	r3, [pc, #140]	; (8003f18 <I2C_RequestMemoryWrite+0xc4>)
 8003e8a:	9300      	str	r3, [sp, #0]
 8003e8c:	0023      	movs	r3, r4
 8003e8e:	f000 faa1 	bl	80043d4 <I2C_TransferConfig>
 8003e92:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003e94:	6a39      	ldr	r1, [r7, #32]
 8003e96:	68fb      	ldr	r3, [r7, #12]
 8003e98:	0018      	movs	r0, r3
 8003e9a:	f000 f911 	bl	80040c0 <I2C_WaitOnTXISFlagUntilTimeout>
 8003e9e:	1e03      	subs	r3, r0, #0
 8003ea0:	d001      	beq.n	8003ea6 <I2C_RequestMemoryWrite+0x52>
 8003ea2:	2301      	movs	r3, #1
 8003ea4:	e033      	b.n	8003f0e <I2C_RequestMemoryWrite+0xba>
 8003ea6:	1dbb      	adds	r3, r7, #6
 8003ea8:	881b      	ldrh	r3, [r3, #0]
 8003eaa:	2b01      	cmp	r3, #1
 8003eac:	d107      	bne.n	8003ebe <I2C_RequestMemoryWrite+0x6a>
 8003eae:	2308      	movs	r3, #8
 8003eb0:	18fb      	adds	r3, r7, r3
 8003eb2:	881b      	ldrh	r3, [r3, #0]
 8003eb4:	b2da      	uxtb	r2, r3
 8003eb6:	68fb      	ldr	r3, [r7, #12]
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	629a      	str	r2, [r3, #40]	; 0x28
 8003ebc:	e019      	b.n	8003ef2 <I2C_RequestMemoryWrite+0x9e>
 8003ebe:	2308      	movs	r3, #8
 8003ec0:	18fb      	adds	r3, r7, r3
 8003ec2:	881b      	ldrh	r3, [r3, #0]
 8003ec4:	0a1b      	lsrs	r3, r3, #8
 8003ec6:	b29b      	uxth	r3, r3
 8003ec8:	b2da      	uxtb	r2, r3
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	629a      	str	r2, [r3, #40]	; 0x28
 8003ed0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ed2:	6a39      	ldr	r1, [r7, #32]
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	0018      	movs	r0, r3
 8003ed8:	f000 f8f2 	bl	80040c0 <I2C_WaitOnTXISFlagUntilTimeout>
 8003edc:	1e03      	subs	r3, r0, #0
 8003ede:	d001      	beq.n	8003ee4 <I2C_RequestMemoryWrite+0x90>
 8003ee0:	2301      	movs	r3, #1
 8003ee2:	e014      	b.n	8003f0e <I2C_RequestMemoryWrite+0xba>
 8003ee4:	2308      	movs	r3, #8
 8003ee6:	18fb      	adds	r3, r7, r3
 8003ee8:	881b      	ldrh	r3, [r3, #0]
 8003eea:	b2da      	uxtb	r2, r3
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	629a      	str	r2, [r3, #40]	; 0x28
 8003ef2:	6a3a      	ldr	r2, [r7, #32]
 8003ef4:	68f8      	ldr	r0, [r7, #12]
 8003ef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ef8:	9300      	str	r3, [sp, #0]
 8003efa:	0013      	movs	r3, r2
 8003efc:	2200      	movs	r2, #0
 8003efe:	2180      	movs	r1, #128	; 0x80
 8003f00:	f000 f890 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003f04:	1e03      	subs	r3, r0, #0
 8003f06:	d001      	beq.n	8003f0c <I2C_RequestMemoryWrite+0xb8>
 8003f08:	2301      	movs	r3, #1
 8003f0a:	e000      	b.n	8003f0e <I2C_RequestMemoryWrite+0xba>
 8003f0c:	2300      	movs	r3, #0
 8003f0e:	0018      	movs	r0, r3
 8003f10:	46bd      	mov	sp, r7
 8003f12:	b004      	add	sp, #16
 8003f14:	bdb0      	pop	{r4, r5, r7, pc}
 8003f16:	46c0      	nop			; (mov r8, r8)
 8003f18:	80002000 	.word	0x80002000

08003f1c <I2C_RequestMemoryRead>:
 8003f1c:	b5b0      	push	{r4, r5, r7, lr}
 8003f1e:	b086      	sub	sp, #24
 8003f20:	af02      	add	r7, sp, #8
 8003f22:	60f8      	str	r0, [r7, #12]
 8003f24:	000c      	movs	r4, r1
 8003f26:	0010      	movs	r0, r2
 8003f28:	0019      	movs	r1, r3
 8003f2a:	250a      	movs	r5, #10
 8003f2c:	197b      	adds	r3, r7, r5
 8003f2e:	1c22      	adds	r2, r4, #0
 8003f30:	801a      	strh	r2, [r3, #0]
 8003f32:	2308      	movs	r3, #8
 8003f34:	18fb      	adds	r3, r7, r3
 8003f36:	1c02      	adds	r2, r0, #0
 8003f38:	801a      	strh	r2, [r3, #0]
 8003f3a:	1dbb      	adds	r3, r7, #6
 8003f3c:	1c0a      	adds	r2, r1, #0
 8003f3e:	801a      	strh	r2, [r3, #0]
 8003f40:	1dbb      	adds	r3, r7, #6
 8003f42:	881b      	ldrh	r3, [r3, #0]
 8003f44:	b2da      	uxtb	r2, r3
 8003f46:	197b      	adds	r3, r7, r5
 8003f48:	8819      	ldrh	r1, [r3, #0]
 8003f4a:	68f8      	ldr	r0, [r7, #12]
 8003f4c:	4b23      	ldr	r3, [pc, #140]	; (8003fdc <I2C_RequestMemoryRead+0xc0>)
 8003f4e:	9300      	str	r3, [sp, #0]
 8003f50:	2300      	movs	r3, #0
 8003f52:	f000 fa3f 	bl	80043d4 <I2C_TransferConfig>
 8003f56:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003f58:	6a39      	ldr	r1, [r7, #32]
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	0018      	movs	r0, r3
 8003f5e:	f000 f8af 	bl	80040c0 <I2C_WaitOnTXISFlagUntilTimeout>
 8003f62:	1e03      	subs	r3, r0, #0
 8003f64:	d001      	beq.n	8003f6a <I2C_RequestMemoryRead+0x4e>
 8003f66:	2301      	movs	r3, #1
 8003f68:	e033      	b.n	8003fd2 <I2C_RequestMemoryRead+0xb6>
 8003f6a:	1dbb      	adds	r3, r7, #6
 8003f6c:	881b      	ldrh	r3, [r3, #0]
 8003f6e:	2b01      	cmp	r3, #1
 8003f70:	d107      	bne.n	8003f82 <I2C_RequestMemoryRead+0x66>
 8003f72:	2308      	movs	r3, #8
 8003f74:	18fb      	adds	r3, r7, r3
 8003f76:	881b      	ldrh	r3, [r3, #0]
 8003f78:	b2da      	uxtb	r2, r3
 8003f7a:	68fb      	ldr	r3, [r7, #12]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	629a      	str	r2, [r3, #40]	; 0x28
 8003f80:	e019      	b.n	8003fb6 <I2C_RequestMemoryRead+0x9a>
 8003f82:	2308      	movs	r3, #8
 8003f84:	18fb      	adds	r3, r7, r3
 8003f86:	881b      	ldrh	r3, [r3, #0]
 8003f88:	0a1b      	lsrs	r3, r3, #8
 8003f8a:	b29b      	uxth	r3, r3
 8003f8c:	b2da      	uxtb	r2, r3
 8003f8e:	68fb      	ldr	r3, [r7, #12]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	629a      	str	r2, [r3, #40]	; 0x28
 8003f94:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003f96:	6a39      	ldr	r1, [r7, #32]
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	0018      	movs	r0, r3
 8003f9c:	f000 f890 	bl	80040c0 <I2C_WaitOnTXISFlagUntilTimeout>
 8003fa0:	1e03      	subs	r3, r0, #0
 8003fa2:	d001      	beq.n	8003fa8 <I2C_RequestMemoryRead+0x8c>
 8003fa4:	2301      	movs	r3, #1
 8003fa6:	e014      	b.n	8003fd2 <I2C_RequestMemoryRead+0xb6>
 8003fa8:	2308      	movs	r3, #8
 8003faa:	18fb      	adds	r3, r7, r3
 8003fac:	881b      	ldrh	r3, [r3, #0]
 8003fae:	b2da      	uxtb	r2, r3
 8003fb0:	68fb      	ldr	r3, [r7, #12]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	629a      	str	r2, [r3, #40]	; 0x28
 8003fb6:	6a3a      	ldr	r2, [r7, #32]
 8003fb8:	68f8      	ldr	r0, [r7, #12]
 8003fba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003fbc:	9300      	str	r3, [sp, #0]
 8003fbe:	0013      	movs	r3, r2
 8003fc0:	2200      	movs	r2, #0
 8003fc2:	2140      	movs	r1, #64	; 0x40
 8003fc4:	f000 f82e 	bl	8004024 <I2C_WaitOnFlagUntilTimeout>
 8003fc8:	1e03      	subs	r3, r0, #0
 8003fca:	d001      	beq.n	8003fd0 <I2C_RequestMemoryRead+0xb4>
 8003fcc:	2301      	movs	r3, #1
 8003fce:	e000      	b.n	8003fd2 <I2C_RequestMemoryRead+0xb6>
 8003fd0:	2300      	movs	r3, #0
 8003fd2:	0018      	movs	r0, r3
 8003fd4:	46bd      	mov	sp, r7
 8003fd6:	b004      	add	sp, #16
 8003fd8:	bdb0      	pop	{r4, r5, r7, pc}
 8003fda:	46c0      	nop			; (mov r8, r8)
 8003fdc:	80002000 	.word	0x80002000

08003fe0 <I2C_Flush_TXDR>:
 8003fe0:	b580      	push	{r7, lr}
 8003fe2:	b082      	sub	sp, #8
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	6078      	str	r0, [r7, #4]
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	699b      	ldr	r3, [r3, #24]
 8003fee:	2202      	movs	r2, #2
 8003ff0:	4013      	ands	r3, r2
 8003ff2:	2b02      	cmp	r3, #2
 8003ff4:	d103      	bne.n	8003ffe <I2C_Flush_TXDR+0x1e>
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	2200      	movs	r2, #0
 8003ffc:	629a      	str	r2, [r3, #40]	; 0x28
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	699b      	ldr	r3, [r3, #24]
 8004004:	2201      	movs	r2, #1
 8004006:	4013      	ands	r3, r2
 8004008:	2b01      	cmp	r3, #1
 800400a:	d007      	beq.n	800401c <I2C_Flush_TXDR+0x3c>
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	699a      	ldr	r2, [r3, #24]
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	2101      	movs	r1, #1
 8004018:	430a      	orrs	r2, r1
 800401a:	619a      	str	r2, [r3, #24]
 800401c:	46c0      	nop			; (mov r8, r8)
 800401e:	46bd      	mov	sp, r7
 8004020:	b002      	add	sp, #8
 8004022:	bd80      	pop	{r7, pc}

08004024 <I2C_WaitOnFlagUntilTimeout>:
 8004024:	b580      	push	{r7, lr}
 8004026:	b084      	sub	sp, #16
 8004028:	af00      	add	r7, sp, #0
 800402a:	60f8      	str	r0, [r7, #12]
 800402c:	60b9      	str	r1, [r7, #8]
 800402e:	603b      	str	r3, [r7, #0]
 8004030:	1dfb      	adds	r3, r7, #7
 8004032:	701a      	strb	r2, [r3, #0]
 8004034:	e030      	b.n	8004098 <I2C_WaitOnFlagUntilTimeout+0x74>
 8004036:	683b      	ldr	r3, [r7, #0]
 8004038:	3301      	adds	r3, #1
 800403a:	d02d      	beq.n	8004098 <I2C_WaitOnFlagUntilTimeout+0x74>
 800403c:	f7ff f8c2 	bl	80031c4 <HAL_GetTick>
 8004040:	0002      	movs	r2, r0
 8004042:	69bb      	ldr	r3, [r7, #24]
 8004044:	1ad3      	subs	r3, r2, r3
 8004046:	683a      	ldr	r2, [r7, #0]
 8004048:	429a      	cmp	r2, r3
 800404a:	d302      	bcc.n	8004052 <I2C_WaitOnFlagUntilTimeout+0x2e>
 800404c:	683b      	ldr	r3, [r7, #0]
 800404e:	2b00      	cmp	r3, #0
 8004050:	d122      	bne.n	8004098 <I2C_WaitOnFlagUntilTimeout+0x74>
 8004052:	68fb      	ldr	r3, [r7, #12]
 8004054:	681b      	ldr	r3, [r3, #0]
 8004056:	699b      	ldr	r3, [r3, #24]
 8004058:	68ba      	ldr	r2, [r7, #8]
 800405a:	4013      	ands	r3, r2
 800405c:	68ba      	ldr	r2, [r7, #8]
 800405e:	1ad3      	subs	r3, r2, r3
 8004060:	425a      	negs	r2, r3
 8004062:	4153      	adcs	r3, r2
 8004064:	b2db      	uxtb	r3, r3
 8004066:	001a      	movs	r2, r3
 8004068:	1dfb      	adds	r3, r7, #7
 800406a:	781b      	ldrb	r3, [r3, #0]
 800406c:	429a      	cmp	r2, r3
 800406e:	d113      	bne.n	8004098 <I2C_WaitOnFlagUntilTimeout+0x74>
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004074:	2220      	movs	r2, #32
 8004076:	431a      	orrs	r2, r3
 8004078:	68fb      	ldr	r3, [r7, #12]
 800407a:	645a      	str	r2, [r3, #68]	; 0x44
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	2241      	movs	r2, #65	; 0x41
 8004080:	2120      	movs	r1, #32
 8004082:	5499      	strb	r1, [r3, r2]
 8004084:	68fb      	ldr	r3, [r7, #12]
 8004086:	2242      	movs	r2, #66	; 0x42
 8004088:	2100      	movs	r1, #0
 800408a:	5499      	strb	r1, [r3, r2]
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	2240      	movs	r2, #64	; 0x40
 8004090:	2100      	movs	r1, #0
 8004092:	5499      	strb	r1, [r3, r2]
 8004094:	2301      	movs	r3, #1
 8004096:	e00f      	b.n	80040b8 <I2C_WaitOnFlagUntilTimeout+0x94>
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	699b      	ldr	r3, [r3, #24]
 800409e:	68ba      	ldr	r2, [r7, #8]
 80040a0:	4013      	ands	r3, r2
 80040a2:	68ba      	ldr	r2, [r7, #8]
 80040a4:	1ad3      	subs	r3, r2, r3
 80040a6:	425a      	negs	r2, r3
 80040a8:	4153      	adcs	r3, r2
 80040aa:	b2db      	uxtb	r3, r3
 80040ac:	001a      	movs	r2, r3
 80040ae:	1dfb      	adds	r3, r7, #7
 80040b0:	781b      	ldrb	r3, [r3, #0]
 80040b2:	429a      	cmp	r2, r3
 80040b4:	d0bf      	beq.n	8004036 <I2C_WaitOnFlagUntilTimeout+0x12>
 80040b6:	2300      	movs	r3, #0
 80040b8:	0018      	movs	r0, r3
 80040ba:	46bd      	mov	sp, r7
 80040bc:	b004      	add	sp, #16
 80040be:	bd80      	pop	{r7, pc}

080040c0 <I2C_WaitOnTXISFlagUntilTimeout>:
 80040c0:	b580      	push	{r7, lr}
 80040c2:	b084      	sub	sp, #16
 80040c4:	af00      	add	r7, sp, #0
 80040c6:	60f8      	str	r0, [r7, #12]
 80040c8:	60b9      	str	r1, [r7, #8]
 80040ca:	607a      	str	r2, [r7, #4]
 80040cc:	e032      	b.n	8004134 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 80040ce:	687a      	ldr	r2, [r7, #4]
 80040d0:	68b9      	ldr	r1, [r7, #8]
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	0018      	movs	r0, r3
 80040d6:	f000 f87d 	bl	80041d4 <I2C_IsErrorOccurred>
 80040da:	1e03      	subs	r3, r0, #0
 80040dc:	d001      	beq.n	80040e2 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 80040de:	2301      	movs	r3, #1
 80040e0:	e030      	b.n	8004144 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
 80040e2:	68bb      	ldr	r3, [r7, #8]
 80040e4:	3301      	adds	r3, #1
 80040e6:	d025      	beq.n	8004134 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 80040e8:	f7ff f86c 	bl	80031c4 <HAL_GetTick>
 80040ec:	0002      	movs	r2, r0
 80040ee:	687b      	ldr	r3, [r7, #4]
 80040f0:	1ad3      	subs	r3, r2, r3
 80040f2:	68ba      	ldr	r2, [r7, #8]
 80040f4:	429a      	cmp	r2, r3
 80040f6:	d302      	bcc.n	80040fe <I2C_WaitOnTXISFlagUntilTimeout+0x3e>
 80040f8:	68bb      	ldr	r3, [r7, #8]
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d11a      	bne.n	8004134 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 80040fe:	68fb      	ldr	r3, [r7, #12]
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	699b      	ldr	r3, [r3, #24]
 8004104:	2202      	movs	r2, #2
 8004106:	4013      	ands	r3, r2
 8004108:	2b02      	cmp	r3, #2
 800410a:	d013      	beq.n	8004134 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 800410c:	68fb      	ldr	r3, [r7, #12]
 800410e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004110:	2220      	movs	r2, #32
 8004112:	431a      	orrs	r2, r3
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	645a      	str	r2, [r3, #68]	; 0x44
 8004118:	68fb      	ldr	r3, [r7, #12]
 800411a:	2241      	movs	r2, #65	; 0x41
 800411c:	2120      	movs	r1, #32
 800411e:	5499      	strb	r1, [r3, r2]
 8004120:	68fb      	ldr	r3, [r7, #12]
 8004122:	2242      	movs	r2, #66	; 0x42
 8004124:	2100      	movs	r1, #0
 8004126:	5499      	strb	r1, [r3, r2]
 8004128:	68fb      	ldr	r3, [r7, #12]
 800412a:	2240      	movs	r2, #64	; 0x40
 800412c:	2100      	movs	r1, #0
 800412e:	5499      	strb	r1, [r3, r2]
 8004130:	2301      	movs	r3, #1
 8004132:	e007      	b.n	8004144 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
 8004134:	68fb      	ldr	r3, [r7, #12]
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	699b      	ldr	r3, [r3, #24]
 800413a:	2202      	movs	r2, #2
 800413c:	4013      	ands	r3, r2
 800413e:	2b02      	cmp	r3, #2
 8004140:	d1c5      	bne.n	80040ce <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8004142:	2300      	movs	r3, #0
 8004144:	0018      	movs	r0, r3
 8004146:	46bd      	mov	sp, r7
 8004148:	b004      	add	sp, #16
 800414a:	bd80      	pop	{r7, pc}

0800414c <I2C_WaitOnSTOPFlagUntilTimeout>:
 800414c:	b580      	push	{r7, lr}
 800414e:	b084      	sub	sp, #16
 8004150:	af00      	add	r7, sp, #0
 8004152:	60f8      	str	r0, [r7, #12]
 8004154:	60b9      	str	r1, [r7, #8]
 8004156:	607a      	str	r2, [r7, #4]
 8004158:	e02f      	b.n	80041ba <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800415a:	687a      	ldr	r2, [r7, #4]
 800415c:	68b9      	ldr	r1, [r7, #8]
 800415e:	68fb      	ldr	r3, [r7, #12]
 8004160:	0018      	movs	r0, r3
 8004162:	f000 f837 	bl	80041d4 <I2C_IsErrorOccurred>
 8004166:	1e03      	subs	r3, r0, #0
 8004168:	d001      	beq.n	800416e <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 800416a:	2301      	movs	r3, #1
 800416c:	e02d      	b.n	80041ca <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800416e:	f7ff f829 	bl	80031c4 <HAL_GetTick>
 8004172:	0002      	movs	r2, r0
 8004174:	687b      	ldr	r3, [r7, #4]
 8004176:	1ad3      	subs	r3, r2, r3
 8004178:	68ba      	ldr	r2, [r7, #8]
 800417a:	429a      	cmp	r2, r3
 800417c:	d302      	bcc.n	8004184 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800417e:	68bb      	ldr	r3, [r7, #8]
 8004180:	2b00      	cmp	r3, #0
 8004182:	d11a      	bne.n	80041ba <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8004184:	68fb      	ldr	r3, [r7, #12]
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	699b      	ldr	r3, [r3, #24]
 800418a:	2220      	movs	r2, #32
 800418c:	4013      	ands	r3, r2
 800418e:	2b20      	cmp	r3, #32
 8004190:	d013      	beq.n	80041ba <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004196:	2220      	movs	r2, #32
 8004198:	431a      	orrs	r2, r3
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	645a      	str	r2, [r3, #68]	; 0x44
 800419e:	68fb      	ldr	r3, [r7, #12]
 80041a0:	2241      	movs	r2, #65	; 0x41
 80041a2:	2120      	movs	r1, #32
 80041a4:	5499      	strb	r1, [r3, r2]
 80041a6:	68fb      	ldr	r3, [r7, #12]
 80041a8:	2242      	movs	r2, #66	; 0x42
 80041aa:	2100      	movs	r1, #0
 80041ac:	5499      	strb	r1, [r3, r2]
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	2240      	movs	r2, #64	; 0x40
 80041b2:	2100      	movs	r1, #0
 80041b4:	5499      	strb	r1, [r3, r2]
 80041b6:	2301      	movs	r3, #1
 80041b8:	e007      	b.n	80041ca <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	699b      	ldr	r3, [r3, #24]
 80041c0:	2220      	movs	r2, #32
 80041c2:	4013      	ands	r3, r2
 80041c4:	2b20      	cmp	r3, #32
 80041c6:	d1c8      	bne.n	800415a <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 80041c8:	2300      	movs	r3, #0
 80041ca:	0018      	movs	r0, r3
 80041cc:	46bd      	mov	sp, r7
 80041ce:	b004      	add	sp, #16
 80041d0:	bd80      	pop	{r7, pc}
	...

080041d4 <I2C_IsErrorOccurred>:
 80041d4:	b590      	push	{r4, r7, lr}
 80041d6:	b08b      	sub	sp, #44	; 0x2c
 80041d8:	af00      	add	r7, sp, #0
 80041da:	60f8      	str	r0, [r7, #12]
 80041dc:	60b9      	str	r1, [r7, #8]
 80041de:	607a      	str	r2, [r7, #4]
 80041e0:	2327      	movs	r3, #39	; 0x27
 80041e2:	18fb      	adds	r3, r7, r3
 80041e4:	2200      	movs	r2, #0
 80041e6:	701a      	strb	r2, [r3, #0]
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	681b      	ldr	r3, [r3, #0]
 80041ec:	699b      	ldr	r3, [r3, #24]
 80041ee:	61bb      	str	r3, [r7, #24]
 80041f0:	2300      	movs	r3, #0
 80041f2:	623b      	str	r3, [r7, #32]
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	61fb      	str	r3, [r7, #28]
 80041f8:	69bb      	ldr	r3, [r7, #24]
 80041fa:	2210      	movs	r2, #16
 80041fc:	4013      	ands	r3, r2
 80041fe:	d100      	bne.n	8004202 <I2C_IsErrorOccurred+0x2e>
 8004200:	e082      	b.n	8004308 <I2C_IsErrorOccurred+0x134>
 8004202:	68fb      	ldr	r3, [r7, #12]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	2210      	movs	r2, #16
 8004208:	61da      	str	r2, [r3, #28]
 800420a:	e060      	b.n	80042ce <I2C_IsErrorOccurred+0xfa>
 800420c:	2427      	movs	r4, #39	; 0x27
 800420e:	193b      	adds	r3, r7, r4
 8004210:	193a      	adds	r2, r7, r4
 8004212:	7812      	ldrb	r2, [r2, #0]
 8004214:	701a      	strb	r2, [r3, #0]
 8004216:	68bb      	ldr	r3, [r7, #8]
 8004218:	3301      	adds	r3, #1
 800421a:	d058      	beq.n	80042ce <I2C_IsErrorOccurred+0xfa>
 800421c:	f7fe ffd2 	bl	80031c4 <HAL_GetTick>
 8004220:	0002      	movs	r2, r0
 8004222:	69fb      	ldr	r3, [r7, #28]
 8004224:	1ad3      	subs	r3, r2, r3
 8004226:	68ba      	ldr	r2, [r7, #8]
 8004228:	429a      	cmp	r2, r3
 800422a:	d306      	bcc.n	800423a <I2C_IsErrorOccurred+0x66>
 800422c:	193b      	adds	r3, r7, r4
 800422e:	193a      	adds	r2, r7, r4
 8004230:	7812      	ldrb	r2, [r2, #0]
 8004232:	701a      	strb	r2, [r3, #0]
 8004234:	68bb      	ldr	r3, [r7, #8]
 8004236:	2b00      	cmp	r3, #0
 8004238:	d149      	bne.n	80042ce <I2C_IsErrorOccurred+0xfa>
 800423a:	68fb      	ldr	r3, [r7, #12]
 800423c:	681b      	ldr	r3, [r3, #0]
 800423e:	685a      	ldr	r2, [r3, #4]
 8004240:	2380      	movs	r3, #128	; 0x80
 8004242:	01db      	lsls	r3, r3, #7
 8004244:	4013      	ands	r3, r2
 8004246:	617b      	str	r3, [r7, #20]
 8004248:	2013      	movs	r0, #19
 800424a:	183b      	adds	r3, r7, r0
 800424c:	68fa      	ldr	r2, [r7, #12]
 800424e:	2142      	movs	r1, #66	; 0x42
 8004250:	5c52      	ldrb	r2, [r2, r1]
 8004252:	701a      	strb	r2, [r3, #0]
 8004254:	68fb      	ldr	r3, [r7, #12]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	699a      	ldr	r2, [r3, #24]
 800425a:	2380      	movs	r3, #128	; 0x80
 800425c:	021b      	lsls	r3, r3, #8
 800425e:	401a      	ands	r2, r3
 8004260:	2380      	movs	r3, #128	; 0x80
 8004262:	021b      	lsls	r3, r3, #8
 8004264:	429a      	cmp	r2, r3
 8004266:	d126      	bne.n	80042b6 <I2C_IsErrorOccurred+0xe2>
 8004268:	697a      	ldr	r2, [r7, #20]
 800426a:	2380      	movs	r3, #128	; 0x80
 800426c:	01db      	lsls	r3, r3, #7
 800426e:	429a      	cmp	r2, r3
 8004270:	d021      	beq.n	80042b6 <I2C_IsErrorOccurred+0xe2>
 8004272:	183b      	adds	r3, r7, r0
 8004274:	781b      	ldrb	r3, [r3, #0]
 8004276:	2b20      	cmp	r3, #32
 8004278:	d01d      	beq.n	80042b6 <I2C_IsErrorOccurred+0xe2>
 800427a:	68fb      	ldr	r3, [r7, #12]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	685a      	ldr	r2, [r3, #4]
 8004280:	68fb      	ldr	r3, [r7, #12]
 8004282:	681b      	ldr	r3, [r3, #0]
 8004284:	2180      	movs	r1, #128	; 0x80
 8004286:	01c9      	lsls	r1, r1, #7
 8004288:	430a      	orrs	r2, r1
 800428a:	605a      	str	r2, [r3, #4]
 800428c:	f7fe ff9a 	bl	80031c4 <HAL_GetTick>
 8004290:	0003      	movs	r3, r0
 8004292:	61fb      	str	r3, [r7, #28]
 8004294:	e00f      	b.n	80042b6 <I2C_IsErrorOccurred+0xe2>
 8004296:	f7fe ff95 	bl	80031c4 <HAL_GetTick>
 800429a:	0002      	movs	r2, r0
 800429c:	69fb      	ldr	r3, [r7, #28]
 800429e:	1ad3      	subs	r3, r2, r3
 80042a0:	2b19      	cmp	r3, #25
 80042a2:	d908      	bls.n	80042b6 <I2C_IsErrorOccurred+0xe2>
 80042a4:	6a3b      	ldr	r3, [r7, #32]
 80042a6:	2220      	movs	r2, #32
 80042a8:	4313      	orrs	r3, r2
 80042aa:	623b      	str	r3, [r7, #32]
 80042ac:	2327      	movs	r3, #39	; 0x27
 80042ae:	18fb      	adds	r3, r7, r3
 80042b0:	2201      	movs	r2, #1
 80042b2:	701a      	strb	r2, [r3, #0]
 80042b4:	e00b      	b.n	80042ce <I2C_IsErrorOccurred+0xfa>
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	699b      	ldr	r3, [r3, #24]
 80042bc:	2220      	movs	r2, #32
 80042be:	4013      	ands	r3, r2
 80042c0:	2127      	movs	r1, #39	; 0x27
 80042c2:	187a      	adds	r2, r7, r1
 80042c4:	1879      	adds	r1, r7, r1
 80042c6:	7809      	ldrb	r1, [r1, #0]
 80042c8:	7011      	strb	r1, [r2, #0]
 80042ca:	2b20      	cmp	r3, #32
 80042cc:	d1e3      	bne.n	8004296 <I2C_IsErrorOccurred+0xc2>
 80042ce:	68fb      	ldr	r3, [r7, #12]
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	699b      	ldr	r3, [r3, #24]
 80042d4:	2220      	movs	r2, #32
 80042d6:	4013      	ands	r3, r2
 80042d8:	2b20      	cmp	r3, #32
 80042da:	d004      	beq.n	80042e6 <I2C_IsErrorOccurred+0x112>
 80042dc:	2327      	movs	r3, #39	; 0x27
 80042de:	18fb      	adds	r3, r7, r3
 80042e0:	781b      	ldrb	r3, [r3, #0]
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d092      	beq.n	800420c <I2C_IsErrorOccurred+0x38>
 80042e6:	2327      	movs	r3, #39	; 0x27
 80042e8:	18fb      	adds	r3, r7, r3
 80042ea:	781b      	ldrb	r3, [r3, #0]
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d103      	bne.n	80042f8 <I2C_IsErrorOccurred+0x124>
 80042f0:	68fb      	ldr	r3, [r7, #12]
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	2220      	movs	r2, #32
 80042f6:	61da      	str	r2, [r3, #28]
 80042f8:	6a3b      	ldr	r3, [r7, #32]
 80042fa:	2204      	movs	r2, #4
 80042fc:	4313      	orrs	r3, r2
 80042fe:	623b      	str	r3, [r7, #32]
 8004300:	2327      	movs	r3, #39	; 0x27
 8004302:	18fb      	adds	r3, r7, r3
 8004304:	2201      	movs	r2, #1
 8004306:	701a      	strb	r2, [r3, #0]
 8004308:	68fb      	ldr	r3, [r7, #12]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	699b      	ldr	r3, [r3, #24]
 800430e:	61bb      	str	r3, [r7, #24]
 8004310:	69ba      	ldr	r2, [r7, #24]
 8004312:	2380      	movs	r3, #128	; 0x80
 8004314:	005b      	lsls	r3, r3, #1
 8004316:	4013      	ands	r3, r2
 8004318:	d00c      	beq.n	8004334 <I2C_IsErrorOccurred+0x160>
 800431a:	6a3b      	ldr	r3, [r7, #32]
 800431c:	2201      	movs	r2, #1
 800431e:	4313      	orrs	r3, r2
 8004320:	623b      	str	r3, [r7, #32]
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	2280      	movs	r2, #128	; 0x80
 8004328:	0052      	lsls	r2, r2, #1
 800432a:	61da      	str	r2, [r3, #28]
 800432c:	2327      	movs	r3, #39	; 0x27
 800432e:	18fb      	adds	r3, r7, r3
 8004330:	2201      	movs	r2, #1
 8004332:	701a      	strb	r2, [r3, #0]
 8004334:	69ba      	ldr	r2, [r7, #24]
 8004336:	2380      	movs	r3, #128	; 0x80
 8004338:	00db      	lsls	r3, r3, #3
 800433a:	4013      	ands	r3, r2
 800433c:	d00c      	beq.n	8004358 <I2C_IsErrorOccurred+0x184>
 800433e:	6a3b      	ldr	r3, [r7, #32]
 8004340:	2208      	movs	r2, #8
 8004342:	4313      	orrs	r3, r2
 8004344:	623b      	str	r3, [r7, #32]
 8004346:	68fb      	ldr	r3, [r7, #12]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	2280      	movs	r2, #128	; 0x80
 800434c:	00d2      	lsls	r2, r2, #3
 800434e:	61da      	str	r2, [r3, #28]
 8004350:	2327      	movs	r3, #39	; 0x27
 8004352:	18fb      	adds	r3, r7, r3
 8004354:	2201      	movs	r2, #1
 8004356:	701a      	strb	r2, [r3, #0]
 8004358:	69ba      	ldr	r2, [r7, #24]
 800435a:	2380      	movs	r3, #128	; 0x80
 800435c:	009b      	lsls	r3, r3, #2
 800435e:	4013      	ands	r3, r2
 8004360:	d00c      	beq.n	800437c <I2C_IsErrorOccurred+0x1a8>
 8004362:	6a3b      	ldr	r3, [r7, #32]
 8004364:	2202      	movs	r2, #2
 8004366:	4313      	orrs	r3, r2
 8004368:	623b      	str	r3, [r7, #32]
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	2280      	movs	r2, #128	; 0x80
 8004370:	0092      	lsls	r2, r2, #2
 8004372:	61da      	str	r2, [r3, #28]
 8004374:	2327      	movs	r3, #39	; 0x27
 8004376:	18fb      	adds	r3, r7, r3
 8004378:	2201      	movs	r2, #1
 800437a:	701a      	strb	r2, [r3, #0]
 800437c:	2327      	movs	r3, #39	; 0x27
 800437e:	18fb      	adds	r3, r7, r3
 8004380:	781b      	ldrb	r3, [r3, #0]
 8004382:	2b00      	cmp	r3, #0
 8004384:	d01d      	beq.n	80043c2 <I2C_IsErrorOccurred+0x1ee>
 8004386:	68fb      	ldr	r3, [r7, #12]
 8004388:	0018      	movs	r0, r3
 800438a:	f7ff fe29 	bl	8003fe0 <I2C_Flush_TXDR>
 800438e:	68fb      	ldr	r3, [r7, #12]
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	685a      	ldr	r2, [r3, #4]
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	490d      	ldr	r1, [pc, #52]	; (80043d0 <I2C_IsErrorOccurred+0x1fc>)
 800439a:	400a      	ands	r2, r1
 800439c:	605a      	str	r2, [r3, #4]
 800439e:	68fb      	ldr	r3, [r7, #12]
 80043a0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80043a2:	6a3b      	ldr	r3, [r7, #32]
 80043a4:	431a      	orrs	r2, r3
 80043a6:	68fb      	ldr	r3, [r7, #12]
 80043a8:	645a      	str	r2, [r3, #68]	; 0x44
 80043aa:	68fb      	ldr	r3, [r7, #12]
 80043ac:	2241      	movs	r2, #65	; 0x41
 80043ae:	2120      	movs	r1, #32
 80043b0:	5499      	strb	r1, [r3, r2]
 80043b2:	68fb      	ldr	r3, [r7, #12]
 80043b4:	2242      	movs	r2, #66	; 0x42
 80043b6:	2100      	movs	r1, #0
 80043b8:	5499      	strb	r1, [r3, r2]
 80043ba:	68fb      	ldr	r3, [r7, #12]
 80043bc:	2240      	movs	r2, #64	; 0x40
 80043be:	2100      	movs	r1, #0
 80043c0:	5499      	strb	r1, [r3, r2]
 80043c2:	2327      	movs	r3, #39	; 0x27
 80043c4:	18fb      	adds	r3, r7, r3
 80043c6:	781b      	ldrb	r3, [r3, #0]
 80043c8:	0018      	movs	r0, r3
 80043ca:	46bd      	mov	sp, r7
 80043cc:	b00b      	add	sp, #44	; 0x2c
 80043ce:	bd90      	pop	{r4, r7, pc}
 80043d0:	fe00e800 	.word	0xfe00e800

080043d4 <I2C_TransferConfig>:
 80043d4:	b590      	push	{r4, r7, lr}
 80043d6:	b087      	sub	sp, #28
 80043d8:	af00      	add	r7, sp, #0
 80043da:	60f8      	str	r0, [r7, #12]
 80043dc:	0008      	movs	r0, r1
 80043de:	0011      	movs	r1, r2
 80043e0:	607b      	str	r3, [r7, #4]
 80043e2:	240a      	movs	r4, #10
 80043e4:	193b      	adds	r3, r7, r4
 80043e6:	1c02      	adds	r2, r0, #0
 80043e8:	801a      	strh	r2, [r3, #0]
 80043ea:	2009      	movs	r0, #9
 80043ec:	183b      	adds	r3, r7, r0
 80043ee:	1c0a      	adds	r2, r1, #0
 80043f0:	701a      	strb	r2, [r3, #0]
 80043f2:	193b      	adds	r3, r7, r4
 80043f4:	881b      	ldrh	r3, [r3, #0]
 80043f6:	059b      	lsls	r3, r3, #22
 80043f8:	0d9a      	lsrs	r2, r3, #22
 80043fa:	183b      	adds	r3, r7, r0
 80043fc:	781b      	ldrb	r3, [r3, #0]
 80043fe:	0419      	lsls	r1, r3, #16
 8004400:	23ff      	movs	r3, #255	; 0xff
 8004402:	041b      	lsls	r3, r3, #16
 8004404:	400b      	ands	r3, r1
 8004406:	431a      	orrs	r2, r3
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	431a      	orrs	r2, r3
 800440c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800440e:	4313      	orrs	r3, r2
 8004410:	005b      	lsls	r3, r3, #1
 8004412:	085b      	lsrs	r3, r3, #1
 8004414:	617b      	str	r3, [r7, #20]
 8004416:	68fb      	ldr	r3, [r7, #12]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	685b      	ldr	r3, [r3, #4]
 800441c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800441e:	0d51      	lsrs	r1, r2, #21
 8004420:	2280      	movs	r2, #128	; 0x80
 8004422:	00d2      	lsls	r2, r2, #3
 8004424:	400a      	ands	r2, r1
 8004426:	4907      	ldr	r1, [pc, #28]	; (8004444 <I2C_TransferConfig+0x70>)
 8004428:	430a      	orrs	r2, r1
 800442a:	43d2      	mvns	r2, r2
 800442c:	401a      	ands	r2, r3
 800442e:	0011      	movs	r1, r2
 8004430:	68fb      	ldr	r3, [r7, #12]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	697a      	ldr	r2, [r7, #20]
 8004436:	430a      	orrs	r2, r1
 8004438:	605a      	str	r2, [r3, #4]
 800443a:	46c0      	nop			; (mov r8, r8)
 800443c:	46bd      	mov	sp, r7
 800443e:	b007      	add	sp, #28
 8004440:	bd90      	pop	{r4, r7, pc}
 8004442:	46c0      	nop			; (mov r8, r8)
 8004444:	03ff63ff 	.word	0x03ff63ff

08004448 <HAL_I2CEx_ConfigAnalogFilter>:
 8004448:	b580      	push	{r7, lr}
 800444a:	b082      	sub	sp, #8
 800444c:	af00      	add	r7, sp, #0
 800444e:	6078      	str	r0, [r7, #4]
 8004450:	6039      	str	r1, [r7, #0]
 8004452:	687b      	ldr	r3, [r7, #4]
 8004454:	2241      	movs	r2, #65	; 0x41
 8004456:	5c9b      	ldrb	r3, [r3, r2]
 8004458:	b2db      	uxtb	r3, r3
 800445a:	2b20      	cmp	r3, #32
 800445c:	d138      	bne.n	80044d0 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	2240      	movs	r2, #64	; 0x40
 8004462:	5c9b      	ldrb	r3, [r3, r2]
 8004464:	2b01      	cmp	r3, #1
 8004466:	d101      	bne.n	800446c <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8004468:	2302      	movs	r3, #2
 800446a:	e032      	b.n	80044d2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	2240      	movs	r2, #64	; 0x40
 8004470:	2101      	movs	r1, #1
 8004472:	5499      	strb	r1, [r3, r2]
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	2241      	movs	r2, #65	; 0x41
 8004478:	2124      	movs	r1, #36	; 0x24
 800447a:	5499      	strb	r1, [r3, r2]
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	681a      	ldr	r2, [r3, #0]
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	681b      	ldr	r3, [r3, #0]
 8004486:	2101      	movs	r1, #1
 8004488:	438a      	bics	r2, r1
 800448a:	601a      	str	r2, [r3, #0]
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	681a      	ldr	r2, [r3, #0]
 8004492:	687b      	ldr	r3, [r7, #4]
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	4911      	ldr	r1, [pc, #68]	; (80044dc <HAL_I2CEx_ConfigAnalogFilter+0x94>)
 8004498:	400a      	ands	r2, r1
 800449a:	601a      	str	r2, [r3, #0]
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	681b      	ldr	r3, [r3, #0]
 80044a0:	6819      	ldr	r1, [r3, #0]
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	683a      	ldr	r2, [r7, #0]
 80044a8:	430a      	orrs	r2, r1
 80044aa:	601a      	str	r2, [r3, #0]
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	681a      	ldr	r2, [r3, #0]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	2101      	movs	r1, #1
 80044b8:	430a      	orrs	r2, r1
 80044ba:	601a      	str	r2, [r3, #0]
 80044bc:	687b      	ldr	r3, [r7, #4]
 80044be:	2241      	movs	r2, #65	; 0x41
 80044c0:	2120      	movs	r1, #32
 80044c2:	5499      	strb	r1, [r3, r2]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	2240      	movs	r2, #64	; 0x40
 80044c8:	2100      	movs	r1, #0
 80044ca:	5499      	strb	r1, [r3, r2]
 80044cc:	2300      	movs	r3, #0
 80044ce:	e000      	b.n	80044d2 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80044d0:	2302      	movs	r3, #2
 80044d2:	0018      	movs	r0, r3
 80044d4:	46bd      	mov	sp, r7
 80044d6:	b002      	add	sp, #8
 80044d8:	bd80      	pop	{r7, pc}
 80044da:	46c0      	nop			; (mov r8, r8)
 80044dc:	ffffefff 	.word	0xffffefff

080044e0 <HAL_I2CEx_ConfigDigitalFilter>:
 80044e0:	b580      	push	{r7, lr}
 80044e2:	b084      	sub	sp, #16
 80044e4:	af00      	add	r7, sp, #0
 80044e6:	6078      	str	r0, [r7, #4]
 80044e8:	6039      	str	r1, [r7, #0]
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	2241      	movs	r2, #65	; 0x41
 80044ee:	5c9b      	ldrb	r3, [r3, r2]
 80044f0:	b2db      	uxtb	r3, r3
 80044f2:	2b20      	cmp	r3, #32
 80044f4:	d139      	bne.n	800456a <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	2240      	movs	r2, #64	; 0x40
 80044fa:	5c9b      	ldrb	r3, [r3, r2]
 80044fc:	2b01      	cmp	r3, #1
 80044fe:	d101      	bne.n	8004504 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004500:	2302      	movs	r3, #2
 8004502:	e033      	b.n	800456c <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	2240      	movs	r2, #64	; 0x40
 8004508:	2101      	movs	r1, #1
 800450a:	5499      	strb	r1, [r3, r2]
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	2241      	movs	r2, #65	; 0x41
 8004510:	2124      	movs	r1, #36	; 0x24
 8004512:	5499      	strb	r1, [r3, r2]
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	681a      	ldr	r2, [r3, #0]
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	2101      	movs	r1, #1
 8004520:	438a      	bics	r2, r1
 8004522:	601a      	str	r2, [r3, #0]
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	60fb      	str	r3, [r7, #12]
 800452c:	68fb      	ldr	r3, [r7, #12]
 800452e:	4a11      	ldr	r2, [pc, #68]	; (8004574 <HAL_I2CEx_ConfigDigitalFilter+0x94>)
 8004530:	4013      	ands	r3, r2
 8004532:	60fb      	str	r3, [r7, #12]
 8004534:	683b      	ldr	r3, [r7, #0]
 8004536:	021b      	lsls	r3, r3, #8
 8004538:	68fa      	ldr	r2, [r7, #12]
 800453a:	4313      	orrs	r3, r2
 800453c:	60fb      	str	r3, [r7, #12]
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	68fa      	ldr	r2, [r7, #12]
 8004544:	601a      	str	r2, [r3, #0]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	681a      	ldr	r2, [r3, #0]
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	2101      	movs	r1, #1
 8004552:	430a      	orrs	r2, r1
 8004554:	601a      	str	r2, [r3, #0]
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	2241      	movs	r2, #65	; 0x41
 800455a:	2120      	movs	r1, #32
 800455c:	5499      	strb	r1, [r3, r2]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	2240      	movs	r2, #64	; 0x40
 8004562:	2100      	movs	r1, #0
 8004564:	5499      	strb	r1, [r3, r2]
 8004566:	2300      	movs	r3, #0
 8004568:	e000      	b.n	800456c <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800456a:	2302      	movs	r3, #2
 800456c:	0018      	movs	r0, r3
 800456e:	46bd      	mov	sp, r7
 8004570:	b004      	add	sp, #16
 8004572:	bd80      	pop	{r7, pc}
 8004574:	fffff0ff 	.word	0xfffff0ff

08004578 <HAL_RCC_OscConfig>:
 8004578:	b580      	push	{r7, lr}
 800457a:	b088      	sub	sp, #32
 800457c:	af00      	add	r7, sp, #0
 800457e:	6078      	str	r0, [r7, #4]
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	2b00      	cmp	r3, #0
 8004584:	d101      	bne.n	800458a <HAL_RCC_OscConfig+0x12>
 8004586:	2301      	movs	r3, #1
 8004588:	e301      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	2201      	movs	r2, #1
 8004590:	4013      	ands	r3, r2
 8004592:	d100      	bne.n	8004596 <HAL_RCC_OscConfig+0x1e>
 8004594:	e08d      	b.n	80046b2 <HAL_RCC_OscConfig+0x13a>
 8004596:	4bc3      	ldr	r3, [pc, #780]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004598:	685b      	ldr	r3, [r3, #4]
 800459a:	220c      	movs	r2, #12
 800459c:	4013      	ands	r3, r2
 800459e:	2b04      	cmp	r3, #4
 80045a0:	d00e      	beq.n	80045c0 <HAL_RCC_OscConfig+0x48>
 80045a2:	4bc0      	ldr	r3, [pc, #768]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80045a4:	685b      	ldr	r3, [r3, #4]
 80045a6:	220c      	movs	r2, #12
 80045a8:	4013      	ands	r3, r2
 80045aa:	2b08      	cmp	r3, #8
 80045ac:	d116      	bne.n	80045dc <HAL_RCC_OscConfig+0x64>
 80045ae:	4bbd      	ldr	r3, [pc, #756]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80045b0:	685a      	ldr	r2, [r3, #4]
 80045b2:	2380      	movs	r3, #128	; 0x80
 80045b4:	025b      	lsls	r3, r3, #9
 80045b6:	401a      	ands	r2, r3
 80045b8:	2380      	movs	r3, #128	; 0x80
 80045ba:	025b      	lsls	r3, r3, #9
 80045bc:	429a      	cmp	r2, r3
 80045be:	d10d      	bne.n	80045dc <HAL_RCC_OscConfig+0x64>
 80045c0:	4bb8      	ldr	r3, [pc, #736]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80045c2:	681a      	ldr	r2, [r3, #0]
 80045c4:	2380      	movs	r3, #128	; 0x80
 80045c6:	029b      	lsls	r3, r3, #10
 80045c8:	4013      	ands	r3, r2
 80045ca:	d100      	bne.n	80045ce <HAL_RCC_OscConfig+0x56>
 80045cc:	e070      	b.n	80046b0 <HAL_RCC_OscConfig+0x138>
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	685b      	ldr	r3, [r3, #4]
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d000      	beq.n	80045d8 <HAL_RCC_OscConfig+0x60>
 80045d6:	e06b      	b.n	80046b0 <HAL_RCC_OscConfig+0x138>
 80045d8:	2301      	movs	r3, #1
 80045da:	e2d8      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	685b      	ldr	r3, [r3, #4]
 80045e0:	2b01      	cmp	r3, #1
 80045e2:	d107      	bne.n	80045f4 <HAL_RCC_OscConfig+0x7c>
 80045e4:	4baf      	ldr	r3, [pc, #700]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80045e6:	681a      	ldr	r2, [r3, #0]
 80045e8:	4bae      	ldr	r3, [pc, #696]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80045ea:	2180      	movs	r1, #128	; 0x80
 80045ec:	0249      	lsls	r1, r1, #9
 80045ee:	430a      	orrs	r2, r1
 80045f0:	601a      	str	r2, [r3, #0]
 80045f2:	e02f      	b.n	8004654 <HAL_RCC_OscConfig+0xdc>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	685b      	ldr	r3, [r3, #4]
 80045f8:	2b00      	cmp	r3, #0
 80045fa:	d10c      	bne.n	8004616 <HAL_RCC_OscConfig+0x9e>
 80045fc:	4ba9      	ldr	r3, [pc, #676]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80045fe:	681a      	ldr	r2, [r3, #0]
 8004600:	4ba8      	ldr	r3, [pc, #672]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004602:	49a9      	ldr	r1, [pc, #676]	; (80048a8 <HAL_RCC_OscConfig+0x330>)
 8004604:	400a      	ands	r2, r1
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	4ba6      	ldr	r3, [pc, #664]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800460a:	681a      	ldr	r2, [r3, #0]
 800460c:	4ba5      	ldr	r3, [pc, #660]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800460e:	49a7      	ldr	r1, [pc, #668]	; (80048ac <HAL_RCC_OscConfig+0x334>)
 8004610:	400a      	ands	r2, r1
 8004612:	601a      	str	r2, [r3, #0]
 8004614:	e01e      	b.n	8004654 <HAL_RCC_OscConfig+0xdc>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	685b      	ldr	r3, [r3, #4]
 800461a:	2b05      	cmp	r3, #5
 800461c:	d10e      	bne.n	800463c <HAL_RCC_OscConfig+0xc4>
 800461e:	4ba1      	ldr	r3, [pc, #644]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004620:	681a      	ldr	r2, [r3, #0]
 8004622:	4ba0      	ldr	r3, [pc, #640]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004624:	2180      	movs	r1, #128	; 0x80
 8004626:	02c9      	lsls	r1, r1, #11
 8004628:	430a      	orrs	r2, r1
 800462a:	601a      	str	r2, [r3, #0]
 800462c:	4b9d      	ldr	r3, [pc, #628]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800462e:	681a      	ldr	r2, [r3, #0]
 8004630:	4b9c      	ldr	r3, [pc, #624]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004632:	2180      	movs	r1, #128	; 0x80
 8004634:	0249      	lsls	r1, r1, #9
 8004636:	430a      	orrs	r2, r1
 8004638:	601a      	str	r2, [r3, #0]
 800463a:	e00b      	b.n	8004654 <HAL_RCC_OscConfig+0xdc>
 800463c:	4b99      	ldr	r3, [pc, #612]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800463e:	681a      	ldr	r2, [r3, #0]
 8004640:	4b98      	ldr	r3, [pc, #608]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004642:	4999      	ldr	r1, [pc, #612]	; (80048a8 <HAL_RCC_OscConfig+0x330>)
 8004644:	400a      	ands	r2, r1
 8004646:	601a      	str	r2, [r3, #0]
 8004648:	4b96      	ldr	r3, [pc, #600]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800464a:	681a      	ldr	r2, [r3, #0]
 800464c:	4b95      	ldr	r3, [pc, #596]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800464e:	4997      	ldr	r1, [pc, #604]	; (80048ac <HAL_RCC_OscConfig+0x334>)
 8004650:	400a      	ands	r2, r1
 8004652:	601a      	str	r2, [r3, #0]
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	685b      	ldr	r3, [r3, #4]
 8004658:	2b00      	cmp	r3, #0
 800465a:	d014      	beq.n	8004686 <HAL_RCC_OscConfig+0x10e>
 800465c:	f7fe fdb2 	bl	80031c4 <HAL_GetTick>
 8004660:	0003      	movs	r3, r0
 8004662:	61bb      	str	r3, [r7, #24]
 8004664:	e008      	b.n	8004678 <HAL_RCC_OscConfig+0x100>
 8004666:	f7fe fdad 	bl	80031c4 <HAL_GetTick>
 800466a:	0002      	movs	r2, r0
 800466c:	69bb      	ldr	r3, [r7, #24]
 800466e:	1ad3      	subs	r3, r2, r3
 8004670:	2b64      	cmp	r3, #100	; 0x64
 8004672:	d901      	bls.n	8004678 <HAL_RCC_OscConfig+0x100>
 8004674:	2303      	movs	r3, #3
 8004676:	e28a      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004678:	4b8a      	ldr	r3, [pc, #552]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800467a:	681a      	ldr	r2, [r3, #0]
 800467c:	2380      	movs	r3, #128	; 0x80
 800467e:	029b      	lsls	r3, r3, #10
 8004680:	4013      	ands	r3, r2
 8004682:	d0f0      	beq.n	8004666 <HAL_RCC_OscConfig+0xee>
 8004684:	e015      	b.n	80046b2 <HAL_RCC_OscConfig+0x13a>
 8004686:	f7fe fd9d 	bl	80031c4 <HAL_GetTick>
 800468a:	0003      	movs	r3, r0
 800468c:	61bb      	str	r3, [r7, #24]
 800468e:	e008      	b.n	80046a2 <HAL_RCC_OscConfig+0x12a>
 8004690:	f7fe fd98 	bl	80031c4 <HAL_GetTick>
 8004694:	0002      	movs	r2, r0
 8004696:	69bb      	ldr	r3, [r7, #24]
 8004698:	1ad3      	subs	r3, r2, r3
 800469a:	2b64      	cmp	r3, #100	; 0x64
 800469c:	d901      	bls.n	80046a2 <HAL_RCC_OscConfig+0x12a>
 800469e:	2303      	movs	r3, #3
 80046a0:	e275      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 80046a2:	4b80      	ldr	r3, [pc, #512]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80046a4:	681a      	ldr	r2, [r3, #0]
 80046a6:	2380      	movs	r3, #128	; 0x80
 80046a8:	029b      	lsls	r3, r3, #10
 80046aa:	4013      	ands	r3, r2
 80046ac:	d1f0      	bne.n	8004690 <HAL_RCC_OscConfig+0x118>
 80046ae:	e000      	b.n	80046b2 <HAL_RCC_OscConfig+0x13a>
 80046b0:	46c0      	nop			; (mov r8, r8)
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	2202      	movs	r2, #2
 80046b8:	4013      	ands	r3, r2
 80046ba:	d100      	bne.n	80046be <HAL_RCC_OscConfig+0x146>
 80046bc:	e069      	b.n	8004792 <HAL_RCC_OscConfig+0x21a>
 80046be:	4b79      	ldr	r3, [pc, #484]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80046c0:	685b      	ldr	r3, [r3, #4]
 80046c2:	220c      	movs	r2, #12
 80046c4:	4013      	ands	r3, r2
 80046c6:	d00b      	beq.n	80046e0 <HAL_RCC_OscConfig+0x168>
 80046c8:	4b76      	ldr	r3, [pc, #472]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80046ca:	685b      	ldr	r3, [r3, #4]
 80046cc:	220c      	movs	r2, #12
 80046ce:	4013      	ands	r3, r2
 80046d0:	2b08      	cmp	r3, #8
 80046d2:	d11c      	bne.n	800470e <HAL_RCC_OscConfig+0x196>
 80046d4:	4b73      	ldr	r3, [pc, #460]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80046d6:	685a      	ldr	r2, [r3, #4]
 80046d8:	2380      	movs	r3, #128	; 0x80
 80046da:	025b      	lsls	r3, r3, #9
 80046dc:	4013      	ands	r3, r2
 80046de:	d116      	bne.n	800470e <HAL_RCC_OscConfig+0x196>
 80046e0:	4b70      	ldr	r3, [pc, #448]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80046e2:	681b      	ldr	r3, [r3, #0]
 80046e4:	2202      	movs	r2, #2
 80046e6:	4013      	ands	r3, r2
 80046e8:	d005      	beq.n	80046f6 <HAL_RCC_OscConfig+0x17e>
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	68db      	ldr	r3, [r3, #12]
 80046ee:	2b01      	cmp	r3, #1
 80046f0:	d001      	beq.n	80046f6 <HAL_RCC_OscConfig+0x17e>
 80046f2:	2301      	movs	r3, #1
 80046f4:	e24b      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 80046f6:	4b6b      	ldr	r3, [pc, #428]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	22f8      	movs	r2, #248	; 0xf8
 80046fc:	4393      	bics	r3, r2
 80046fe:	0019      	movs	r1, r3
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	691b      	ldr	r3, [r3, #16]
 8004704:	00da      	lsls	r2, r3, #3
 8004706:	4b67      	ldr	r3, [pc, #412]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004708:	430a      	orrs	r2, r1
 800470a:	601a      	str	r2, [r3, #0]
 800470c:	e041      	b.n	8004792 <HAL_RCC_OscConfig+0x21a>
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	68db      	ldr	r3, [r3, #12]
 8004712:	2b00      	cmp	r3, #0
 8004714:	d024      	beq.n	8004760 <HAL_RCC_OscConfig+0x1e8>
 8004716:	4b63      	ldr	r3, [pc, #396]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004718:	681a      	ldr	r2, [r3, #0]
 800471a:	4b62      	ldr	r3, [pc, #392]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800471c:	2101      	movs	r1, #1
 800471e:	430a      	orrs	r2, r1
 8004720:	601a      	str	r2, [r3, #0]
 8004722:	f7fe fd4f 	bl	80031c4 <HAL_GetTick>
 8004726:	0003      	movs	r3, r0
 8004728:	61bb      	str	r3, [r7, #24]
 800472a:	e008      	b.n	800473e <HAL_RCC_OscConfig+0x1c6>
 800472c:	f7fe fd4a 	bl	80031c4 <HAL_GetTick>
 8004730:	0002      	movs	r2, r0
 8004732:	69bb      	ldr	r3, [r7, #24]
 8004734:	1ad3      	subs	r3, r2, r3
 8004736:	2b02      	cmp	r3, #2
 8004738:	d901      	bls.n	800473e <HAL_RCC_OscConfig+0x1c6>
 800473a:	2303      	movs	r3, #3
 800473c:	e227      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 800473e:	4b59      	ldr	r3, [pc, #356]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	2202      	movs	r2, #2
 8004744:	4013      	ands	r3, r2
 8004746:	d0f1      	beq.n	800472c <HAL_RCC_OscConfig+0x1b4>
 8004748:	4b56      	ldr	r3, [pc, #344]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	22f8      	movs	r2, #248	; 0xf8
 800474e:	4393      	bics	r3, r2
 8004750:	0019      	movs	r1, r3
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	691b      	ldr	r3, [r3, #16]
 8004756:	00da      	lsls	r2, r3, #3
 8004758:	4b52      	ldr	r3, [pc, #328]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800475a:	430a      	orrs	r2, r1
 800475c:	601a      	str	r2, [r3, #0]
 800475e:	e018      	b.n	8004792 <HAL_RCC_OscConfig+0x21a>
 8004760:	4b50      	ldr	r3, [pc, #320]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004762:	681a      	ldr	r2, [r3, #0]
 8004764:	4b4f      	ldr	r3, [pc, #316]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004766:	2101      	movs	r1, #1
 8004768:	438a      	bics	r2, r1
 800476a:	601a      	str	r2, [r3, #0]
 800476c:	f7fe fd2a 	bl	80031c4 <HAL_GetTick>
 8004770:	0003      	movs	r3, r0
 8004772:	61bb      	str	r3, [r7, #24]
 8004774:	e008      	b.n	8004788 <HAL_RCC_OscConfig+0x210>
 8004776:	f7fe fd25 	bl	80031c4 <HAL_GetTick>
 800477a:	0002      	movs	r2, r0
 800477c:	69bb      	ldr	r3, [r7, #24]
 800477e:	1ad3      	subs	r3, r2, r3
 8004780:	2b02      	cmp	r3, #2
 8004782:	d901      	bls.n	8004788 <HAL_RCC_OscConfig+0x210>
 8004784:	2303      	movs	r3, #3
 8004786:	e202      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004788:	4b46      	ldr	r3, [pc, #280]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	2202      	movs	r2, #2
 800478e:	4013      	ands	r3, r2
 8004790:	d1f1      	bne.n	8004776 <HAL_RCC_OscConfig+0x1fe>
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	2208      	movs	r2, #8
 8004798:	4013      	ands	r3, r2
 800479a:	d036      	beq.n	800480a <HAL_RCC_OscConfig+0x292>
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	69db      	ldr	r3, [r3, #28]
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	d019      	beq.n	80047d8 <HAL_RCC_OscConfig+0x260>
 80047a4:	4b3f      	ldr	r3, [pc, #252]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80047a6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80047a8:	4b3e      	ldr	r3, [pc, #248]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80047aa:	2101      	movs	r1, #1
 80047ac:	430a      	orrs	r2, r1
 80047ae:	625a      	str	r2, [r3, #36]	; 0x24
 80047b0:	f7fe fd08 	bl	80031c4 <HAL_GetTick>
 80047b4:	0003      	movs	r3, r0
 80047b6:	61bb      	str	r3, [r7, #24]
 80047b8:	e008      	b.n	80047cc <HAL_RCC_OscConfig+0x254>
 80047ba:	f7fe fd03 	bl	80031c4 <HAL_GetTick>
 80047be:	0002      	movs	r2, r0
 80047c0:	69bb      	ldr	r3, [r7, #24]
 80047c2:	1ad3      	subs	r3, r2, r3
 80047c4:	2b02      	cmp	r3, #2
 80047c6:	d901      	bls.n	80047cc <HAL_RCC_OscConfig+0x254>
 80047c8:	2303      	movs	r3, #3
 80047ca:	e1e0      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 80047cc:	4b35      	ldr	r3, [pc, #212]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80047ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047d0:	2202      	movs	r2, #2
 80047d2:	4013      	ands	r3, r2
 80047d4:	d0f1      	beq.n	80047ba <HAL_RCC_OscConfig+0x242>
 80047d6:	e018      	b.n	800480a <HAL_RCC_OscConfig+0x292>
 80047d8:	4b32      	ldr	r3, [pc, #200]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80047da:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80047dc:	4b31      	ldr	r3, [pc, #196]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 80047de:	2101      	movs	r1, #1
 80047e0:	438a      	bics	r2, r1
 80047e2:	625a      	str	r2, [r3, #36]	; 0x24
 80047e4:	f7fe fcee 	bl	80031c4 <HAL_GetTick>
 80047e8:	0003      	movs	r3, r0
 80047ea:	61bb      	str	r3, [r7, #24]
 80047ec:	e008      	b.n	8004800 <HAL_RCC_OscConfig+0x288>
 80047ee:	f7fe fce9 	bl	80031c4 <HAL_GetTick>
 80047f2:	0002      	movs	r2, r0
 80047f4:	69bb      	ldr	r3, [r7, #24]
 80047f6:	1ad3      	subs	r3, r2, r3
 80047f8:	2b02      	cmp	r3, #2
 80047fa:	d901      	bls.n	8004800 <HAL_RCC_OscConfig+0x288>
 80047fc:	2303      	movs	r3, #3
 80047fe:	e1c6      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004800:	4b28      	ldr	r3, [pc, #160]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004804:	2202      	movs	r2, #2
 8004806:	4013      	ands	r3, r2
 8004808:	d1f1      	bne.n	80047ee <HAL_RCC_OscConfig+0x276>
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	681b      	ldr	r3, [r3, #0]
 800480e:	2204      	movs	r2, #4
 8004810:	4013      	ands	r3, r2
 8004812:	d100      	bne.n	8004816 <HAL_RCC_OscConfig+0x29e>
 8004814:	e0b4      	b.n	8004980 <HAL_RCC_OscConfig+0x408>
 8004816:	201f      	movs	r0, #31
 8004818:	183b      	adds	r3, r7, r0
 800481a:	2200      	movs	r2, #0
 800481c:	701a      	strb	r2, [r3, #0]
 800481e:	4b21      	ldr	r3, [pc, #132]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004820:	69da      	ldr	r2, [r3, #28]
 8004822:	2380      	movs	r3, #128	; 0x80
 8004824:	055b      	lsls	r3, r3, #21
 8004826:	4013      	ands	r3, r2
 8004828:	d110      	bne.n	800484c <HAL_RCC_OscConfig+0x2d4>
 800482a:	4b1e      	ldr	r3, [pc, #120]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800482c:	69da      	ldr	r2, [r3, #28]
 800482e:	4b1d      	ldr	r3, [pc, #116]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004830:	2180      	movs	r1, #128	; 0x80
 8004832:	0549      	lsls	r1, r1, #21
 8004834:	430a      	orrs	r2, r1
 8004836:	61da      	str	r2, [r3, #28]
 8004838:	4b1a      	ldr	r3, [pc, #104]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800483a:	69da      	ldr	r2, [r3, #28]
 800483c:	2380      	movs	r3, #128	; 0x80
 800483e:	055b      	lsls	r3, r3, #21
 8004840:	4013      	ands	r3, r2
 8004842:	60fb      	str	r3, [r7, #12]
 8004844:	68fb      	ldr	r3, [r7, #12]
 8004846:	183b      	adds	r3, r7, r0
 8004848:	2201      	movs	r2, #1
 800484a:	701a      	strb	r2, [r3, #0]
 800484c:	4b18      	ldr	r3, [pc, #96]	; (80048b0 <HAL_RCC_OscConfig+0x338>)
 800484e:	681a      	ldr	r2, [r3, #0]
 8004850:	2380      	movs	r3, #128	; 0x80
 8004852:	005b      	lsls	r3, r3, #1
 8004854:	4013      	ands	r3, r2
 8004856:	d11a      	bne.n	800488e <HAL_RCC_OscConfig+0x316>
 8004858:	4b15      	ldr	r3, [pc, #84]	; (80048b0 <HAL_RCC_OscConfig+0x338>)
 800485a:	681a      	ldr	r2, [r3, #0]
 800485c:	4b14      	ldr	r3, [pc, #80]	; (80048b0 <HAL_RCC_OscConfig+0x338>)
 800485e:	2180      	movs	r1, #128	; 0x80
 8004860:	0049      	lsls	r1, r1, #1
 8004862:	430a      	orrs	r2, r1
 8004864:	601a      	str	r2, [r3, #0]
 8004866:	f7fe fcad 	bl	80031c4 <HAL_GetTick>
 800486a:	0003      	movs	r3, r0
 800486c:	61bb      	str	r3, [r7, #24]
 800486e:	e008      	b.n	8004882 <HAL_RCC_OscConfig+0x30a>
 8004870:	f7fe fca8 	bl	80031c4 <HAL_GetTick>
 8004874:	0002      	movs	r2, r0
 8004876:	69bb      	ldr	r3, [r7, #24]
 8004878:	1ad3      	subs	r3, r2, r3
 800487a:	2b64      	cmp	r3, #100	; 0x64
 800487c:	d901      	bls.n	8004882 <HAL_RCC_OscConfig+0x30a>
 800487e:	2303      	movs	r3, #3
 8004880:	e185      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004882:	4b0b      	ldr	r3, [pc, #44]	; (80048b0 <HAL_RCC_OscConfig+0x338>)
 8004884:	681a      	ldr	r2, [r3, #0]
 8004886:	2380      	movs	r3, #128	; 0x80
 8004888:	005b      	lsls	r3, r3, #1
 800488a:	4013      	ands	r3, r2
 800488c:	d0f0      	beq.n	8004870 <HAL_RCC_OscConfig+0x2f8>
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	689b      	ldr	r3, [r3, #8]
 8004892:	2b01      	cmp	r3, #1
 8004894:	d10e      	bne.n	80048b4 <HAL_RCC_OscConfig+0x33c>
 8004896:	4b03      	ldr	r3, [pc, #12]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 8004898:	6a1a      	ldr	r2, [r3, #32]
 800489a:	4b02      	ldr	r3, [pc, #8]	; (80048a4 <HAL_RCC_OscConfig+0x32c>)
 800489c:	2101      	movs	r1, #1
 800489e:	430a      	orrs	r2, r1
 80048a0:	621a      	str	r2, [r3, #32]
 80048a2:	e035      	b.n	8004910 <HAL_RCC_OscConfig+0x398>
 80048a4:	40021000 	.word	0x40021000
 80048a8:	fffeffff 	.word	0xfffeffff
 80048ac:	fffbffff 	.word	0xfffbffff
 80048b0:	40007000 	.word	0x40007000
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	689b      	ldr	r3, [r3, #8]
 80048b8:	2b00      	cmp	r3, #0
 80048ba:	d10c      	bne.n	80048d6 <HAL_RCC_OscConfig+0x35e>
 80048bc:	4bb6      	ldr	r3, [pc, #728]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048be:	6a1a      	ldr	r2, [r3, #32]
 80048c0:	4bb5      	ldr	r3, [pc, #724]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048c2:	2101      	movs	r1, #1
 80048c4:	438a      	bics	r2, r1
 80048c6:	621a      	str	r2, [r3, #32]
 80048c8:	4bb3      	ldr	r3, [pc, #716]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048ca:	6a1a      	ldr	r2, [r3, #32]
 80048cc:	4bb2      	ldr	r3, [pc, #712]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048ce:	2104      	movs	r1, #4
 80048d0:	438a      	bics	r2, r1
 80048d2:	621a      	str	r2, [r3, #32]
 80048d4:	e01c      	b.n	8004910 <HAL_RCC_OscConfig+0x398>
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	689b      	ldr	r3, [r3, #8]
 80048da:	2b05      	cmp	r3, #5
 80048dc:	d10c      	bne.n	80048f8 <HAL_RCC_OscConfig+0x380>
 80048de:	4bae      	ldr	r3, [pc, #696]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048e0:	6a1a      	ldr	r2, [r3, #32]
 80048e2:	4bad      	ldr	r3, [pc, #692]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048e4:	2104      	movs	r1, #4
 80048e6:	430a      	orrs	r2, r1
 80048e8:	621a      	str	r2, [r3, #32]
 80048ea:	4bab      	ldr	r3, [pc, #684]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048ec:	6a1a      	ldr	r2, [r3, #32]
 80048ee:	4baa      	ldr	r3, [pc, #680]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048f0:	2101      	movs	r1, #1
 80048f2:	430a      	orrs	r2, r1
 80048f4:	621a      	str	r2, [r3, #32]
 80048f6:	e00b      	b.n	8004910 <HAL_RCC_OscConfig+0x398>
 80048f8:	4ba7      	ldr	r3, [pc, #668]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048fa:	6a1a      	ldr	r2, [r3, #32]
 80048fc:	4ba6      	ldr	r3, [pc, #664]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80048fe:	2101      	movs	r1, #1
 8004900:	438a      	bics	r2, r1
 8004902:	621a      	str	r2, [r3, #32]
 8004904:	4ba4      	ldr	r3, [pc, #656]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004906:	6a1a      	ldr	r2, [r3, #32]
 8004908:	4ba3      	ldr	r3, [pc, #652]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 800490a:	2104      	movs	r1, #4
 800490c:	438a      	bics	r2, r1
 800490e:	621a      	str	r2, [r3, #32]
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	689b      	ldr	r3, [r3, #8]
 8004914:	2b00      	cmp	r3, #0
 8004916:	d014      	beq.n	8004942 <HAL_RCC_OscConfig+0x3ca>
 8004918:	f7fe fc54 	bl	80031c4 <HAL_GetTick>
 800491c:	0003      	movs	r3, r0
 800491e:	61bb      	str	r3, [r7, #24]
 8004920:	e009      	b.n	8004936 <HAL_RCC_OscConfig+0x3be>
 8004922:	f7fe fc4f 	bl	80031c4 <HAL_GetTick>
 8004926:	0002      	movs	r2, r0
 8004928:	69bb      	ldr	r3, [r7, #24]
 800492a:	1ad3      	subs	r3, r2, r3
 800492c:	4a9b      	ldr	r2, [pc, #620]	; (8004b9c <HAL_RCC_OscConfig+0x624>)
 800492e:	4293      	cmp	r3, r2
 8004930:	d901      	bls.n	8004936 <HAL_RCC_OscConfig+0x3be>
 8004932:	2303      	movs	r3, #3
 8004934:	e12b      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004936:	4b98      	ldr	r3, [pc, #608]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004938:	6a1b      	ldr	r3, [r3, #32]
 800493a:	2202      	movs	r2, #2
 800493c:	4013      	ands	r3, r2
 800493e:	d0f0      	beq.n	8004922 <HAL_RCC_OscConfig+0x3aa>
 8004940:	e013      	b.n	800496a <HAL_RCC_OscConfig+0x3f2>
 8004942:	f7fe fc3f 	bl	80031c4 <HAL_GetTick>
 8004946:	0003      	movs	r3, r0
 8004948:	61bb      	str	r3, [r7, #24]
 800494a:	e009      	b.n	8004960 <HAL_RCC_OscConfig+0x3e8>
 800494c:	f7fe fc3a 	bl	80031c4 <HAL_GetTick>
 8004950:	0002      	movs	r2, r0
 8004952:	69bb      	ldr	r3, [r7, #24]
 8004954:	1ad3      	subs	r3, r2, r3
 8004956:	4a91      	ldr	r2, [pc, #580]	; (8004b9c <HAL_RCC_OscConfig+0x624>)
 8004958:	4293      	cmp	r3, r2
 800495a:	d901      	bls.n	8004960 <HAL_RCC_OscConfig+0x3e8>
 800495c:	2303      	movs	r3, #3
 800495e:	e116      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004960:	4b8d      	ldr	r3, [pc, #564]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004962:	6a1b      	ldr	r3, [r3, #32]
 8004964:	2202      	movs	r2, #2
 8004966:	4013      	ands	r3, r2
 8004968:	d1f0      	bne.n	800494c <HAL_RCC_OscConfig+0x3d4>
 800496a:	231f      	movs	r3, #31
 800496c:	18fb      	adds	r3, r7, r3
 800496e:	781b      	ldrb	r3, [r3, #0]
 8004970:	2b01      	cmp	r3, #1
 8004972:	d105      	bne.n	8004980 <HAL_RCC_OscConfig+0x408>
 8004974:	4b88      	ldr	r3, [pc, #544]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004976:	69da      	ldr	r2, [r3, #28]
 8004978:	4b87      	ldr	r3, [pc, #540]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 800497a:	4989      	ldr	r1, [pc, #548]	; (8004ba0 <HAL_RCC_OscConfig+0x628>)
 800497c:	400a      	ands	r2, r1
 800497e:	61da      	str	r2, [r3, #28]
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	2210      	movs	r2, #16
 8004986:	4013      	ands	r3, r2
 8004988:	d063      	beq.n	8004a52 <HAL_RCC_OscConfig+0x4da>
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	695b      	ldr	r3, [r3, #20]
 800498e:	2b01      	cmp	r3, #1
 8004990:	d12a      	bne.n	80049e8 <HAL_RCC_OscConfig+0x470>
 8004992:	4b81      	ldr	r3, [pc, #516]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004994:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004996:	4b80      	ldr	r3, [pc, #512]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004998:	2104      	movs	r1, #4
 800499a:	430a      	orrs	r2, r1
 800499c:	635a      	str	r2, [r3, #52]	; 0x34
 800499e:	4b7e      	ldr	r3, [pc, #504]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80049a2:	4b7d      	ldr	r3, [pc, #500]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049a4:	2101      	movs	r1, #1
 80049a6:	430a      	orrs	r2, r1
 80049a8:	635a      	str	r2, [r3, #52]	; 0x34
 80049aa:	f7fe fc0b 	bl	80031c4 <HAL_GetTick>
 80049ae:	0003      	movs	r3, r0
 80049b0:	61bb      	str	r3, [r7, #24]
 80049b2:	e008      	b.n	80049c6 <HAL_RCC_OscConfig+0x44e>
 80049b4:	f7fe fc06 	bl	80031c4 <HAL_GetTick>
 80049b8:	0002      	movs	r2, r0
 80049ba:	69bb      	ldr	r3, [r7, #24]
 80049bc:	1ad3      	subs	r3, r2, r3
 80049be:	2b02      	cmp	r3, #2
 80049c0:	d901      	bls.n	80049c6 <HAL_RCC_OscConfig+0x44e>
 80049c2:	2303      	movs	r3, #3
 80049c4:	e0e3      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 80049c6:	4b74      	ldr	r3, [pc, #464]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80049ca:	2202      	movs	r2, #2
 80049cc:	4013      	ands	r3, r2
 80049ce:	d0f1      	beq.n	80049b4 <HAL_RCC_OscConfig+0x43c>
 80049d0:	4b71      	ldr	r3, [pc, #452]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80049d4:	22f8      	movs	r2, #248	; 0xf8
 80049d6:	4393      	bics	r3, r2
 80049d8:	0019      	movs	r1, r3
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	699b      	ldr	r3, [r3, #24]
 80049de:	00da      	lsls	r2, r3, #3
 80049e0:	4b6d      	ldr	r3, [pc, #436]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049e2:	430a      	orrs	r2, r1
 80049e4:	635a      	str	r2, [r3, #52]	; 0x34
 80049e6:	e034      	b.n	8004a52 <HAL_RCC_OscConfig+0x4da>
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	695b      	ldr	r3, [r3, #20]
 80049ec:	3305      	adds	r3, #5
 80049ee:	d111      	bne.n	8004a14 <HAL_RCC_OscConfig+0x49c>
 80049f0:	4b69      	ldr	r3, [pc, #420]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049f2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80049f4:	4b68      	ldr	r3, [pc, #416]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049f6:	2104      	movs	r1, #4
 80049f8:	438a      	bics	r2, r1
 80049fa:	635a      	str	r2, [r3, #52]	; 0x34
 80049fc:	4b66      	ldr	r3, [pc, #408]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 80049fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004a00:	22f8      	movs	r2, #248	; 0xf8
 8004a02:	4393      	bics	r3, r2
 8004a04:	0019      	movs	r1, r3
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	699b      	ldr	r3, [r3, #24]
 8004a0a:	00da      	lsls	r2, r3, #3
 8004a0c:	4b62      	ldr	r3, [pc, #392]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a0e:	430a      	orrs	r2, r1
 8004a10:	635a      	str	r2, [r3, #52]	; 0x34
 8004a12:	e01e      	b.n	8004a52 <HAL_RCC_OscConfig+0x4da>
 8004a14:	4b60      	ldr	r3, [pc, #384]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004a18:	4b5f      	ldr	r3, [pc, #380]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a1a:	2104      	movs	r1, #4
 8004a1c:	430a      	orrs	r2, r1
 8004a1e:	635a      	str	r2, [r3, #52]	; 0x34
 8004a20:	4b5d      	ldr	r3, [pc, #372]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a22:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004a24:	4b5c      	ldr	r3, [pc, #368]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a26:	2101      	movs	r1, #1
 8004a28:	438a      	bics	r2, r1
 8004a2a:	635a      	str	r2, [r3, #52]	; 0x34
 8004a2c:	f7fe fbca 	bl	80031c4 <HAL_GetTick>
 8004a30:	0003      	movs	r3, r0
 8004a32:	61bb      	str	r3, [r7, #24]
 8004a34:	e008      	b.n	8004a48 <HAL_RCC_OscConfig+0x4d0>
 8004a36:	f7fe fbc5 	bl	80031c4 <HAL_GetTick>
 8004a3a:	0002      	movs	r2, r0
 8004a3c:	69bb      	ldr	r3, [r7, #24]
 8004a3e:	1ad3      	subs	r3, r2, r3
 8004a40:	2b02      	cmp	r3, #2
 8004a42:	d901      	bls.n	8004a48 <HAL_RCC_OscConfig+0x4d0>
 8004a44:	2303      	movs	r3, #3
 8004a46:	e0a2      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004a48:	4b53      	ldr	r3, [pc, #332]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004a4c:	2202      	movs	r2, #2
 8004a4e:	4013      	ands	r3, r2
 8004a50:	d1f1      	bne.n	8004a36 <HAL_RCC_OscConfig+0x4be>
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	6a1b      	ldr	r3, [r3, #32]
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d100      	bne.n	8004a5c <HAL_RCC_OscConfig+0x4e4>
 8004a5a:	e097      	b.n	8004b8c <HAL_RCC_OscConfig+0x614>
 8004a5c:	4b4e      	ldr	r3, [pc, #312]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a5e:	685b      	ldr	r3, [r3, #4]
 8004a60:	220c      	movs	r2, #12
 8004a62:	4013      	ands	r3, r2
 8004a64:	2b08      	cmp	r3, #8
 8004a66:	d100      	bne.n	8004a6a <HAL_RCC_OscConfig+0x4f2>
 8004a68:	e06b      	b.n	8004b42 <HAL_RCC_OscConfig+0x5ca>
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	6a1b      	ldr	r3, [r3, #32]
 8004a6e:	2b02      	cmp	r3, #2
 8004a70:	d14c      	bne.n	8004b0c <HAL_RCC_OscConfig+0x594>
 8004a72:	4b49      	ldr	r3, [pc, #292]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a74:	681a      	ldr	r2, [r3, #0]
 8004a76:	4b48      	ldr	r3, [pc, #288]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a78:	494a      	ldr	r1, [pc, #296]	; (8004ba4 <HAL_RCC_OscConfig+0x62c>)
 8004a7a:	400a      	ands	r2, r1
 8004a7c:	601a      	str	r2, [r3, #0]
 8004a7e:	f7fe fba1 	bl	80031c4 <HAL_GetTick>
 8004a82:	0003      	movs	r3, r0
 8004a84:	61bb      	str	r3, [r7, #24]
 8004a86:	e008      	b.n	8004a9a <HAL_RCC_OscConfig+0x522>
 8004a88:	f7fe fb9c 	bl	80031c4 <HAL_GetTick>
 8004a8c:	0002      	movs	r2, r0
 8004a8e:	69bb      	ldr	r3, [r7, #24]
 8004a90:	1ad3      	subs	r3, r2, r3
 8004a92:	2b02      	cmp	r3, #2
 8004a94:	d901      	bls.n	8004a9a <HAL_RCC_OscConfig+0x522>
 8004a96:	2303      	movs	r3, #3
 8004a98:	e079      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004a9a:	4b3f      	ldr	r3, [pc, #252]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004a9c:	681a      	ldr	r2, [r3, #0]
 8004a9e:	2380      	movs	r3, #128	; 0x80
 8004aa0:	049b      	lsls	r3, r3, #18
 8004aa2:	4013      	ands	r3, r2
 8004aa4:	d1f0      	bne.n	8004a88 <HAL_RCC_OscConfig+0x510>
 8004aa6:	4b3c      	ldr	r3, [pc, #240]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004aa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004aaa:	220f      	movs	r2, #15
 8004aac:	4393      	bics	r3, r2
 8004aae:	0019      	movs	r1, r3
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004ab4:	4b38      	ldr	r3, [pc, #224]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004ab6:	430a      	orrs	r2, r1
 8004ab8:	62da      	str	r2, [r3, #44]	; 0x2c
 8004aba:	4b37      	ldr	r3, [pc, #220]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004abc:	685b      	ldr	r3, [r3, #4]
 8004abe:	4a3a      	ldr	r2, [pc, #232]	; (8004ba8 <HAL_RCC_OscConfig+0x630>)
 8004ac0:	4013      	ands	r3, r2
 8004ac2:	0019      	movs	r1, r3
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004acc:	431a      	orrs	r2, r3
 8004ace:	4b32      	ldr	r3, [pc, #200]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004ad0:	430a      	orrs	r2, r1
 8004ad2:	605a      	str	r2, [r3, #4]
 8004ad4:	4b30      	ldr	r3, [pc, #192]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004ad6:	681a      	ldr	r2, [r3, #0]
 8004ad8:	4b2f      	ldr	r3, [pc, #188]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004ada:	2180      	movs	r1, #128	; 0x80
 8004adc:	0449      	lsls	r1, r1, #17
 8004ade:	430a      	orrs	r2, r1
 8004ae0:	601a      	str	r2, [r3, #0]
 8004ae2:	f7fe fb6f 	bl	80031c4 <HAL_GetTick>
 8004ae6:	0003      	movs	r3, r0
 8004ae8:	61bb      	str	r3, [r7, #24]
 8004aea:	e008      	b.n	8004afe <HAL_RCC_OscConfig+0x586>
 8004aec:	f7fe fb6a 	bl	80031c4 <HAL_GetTick>
 8004af0:	0002      	movs	r2, r0
 8004af2:	69bb      	ldr	r3, [r7, #24]
 8004af4:	1ad3      	subs	r3, r2, r3
 8004af6:	2b02      	cmp	r3, #2
 8004af8:	d901      	bls.n	8004afe <HAL_RCC_OscConfig+0x586>
 8004afa:	2303      	movs	r3, #3
 8004afc:	e047      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004afe:	4b26      	ldr	r3, [pc, #152]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004b00:	681a      	ldr	r2, [r3, #0]
 8004b02:	2380      	movs	r3, #128	; 0x80
 8004b04:	049b      	lsls	r3, r3, #18
 8004b06:	4013      	ands	r3, r2
 8004b08:	d0f0      	beq.n	8004aec <HAL_RCC_OscConfig+0x574>
 8004b0a:	e03f      	b.n	8004b8c <HAL_RCC_OscConfig+0x614>
 8004b0c:	4b22      	ldr	r3, [pc, #136]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004b0e:	681a      	ldr	r2, [r3, #0]
 8004b10:	4b21      	ldr	r3, [pc, #132]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004b12:	4924      	ldr	r1, [pc, #144]	; (8004ba4 <HAL_RCC_OscConfig+0x62c>)
 8004b14:	400a      	ands	r2, r1
 8004b16:	601a      	str	r2, [r3, #0]
 8004b18:	f7fe fb54 	bl	80031c4 <HAL_GetTick>
 8004b1c:	0003      	movs	r3, r0
 8004b1e:	61bb      	str	r3, [r7, #24]
 8004b20:	e008      	b.n	8004b34 <HAL_RCC_OscConfig+0x5bc>
 8004b22:	f7fe fb4f 	bl	80031c4 <HAL_GetTick>
 8004b26:	0002      	movs	r2, r0
 8004b28:	69bb      	ldr	r3, [r7, #24]
 8004b2a:	1ad3      	subs	r3, r2, r3
 8004b2c:	2b02      	cmp	r3, #2
 8004b2e:	d901      	bls.n	8004b34 <HAL_RCC_OscConfig+0x5bc>
 8004b30:	2303      	movs	r3, #3
 8004b32:	e02c      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004b34:	4b18      	ldr	r3, [pc, #96]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004b36:	681a      	ldr	r2, [r3, #0]
 8004b38:	2380      	movs	r3, #128	; 0x80
 8004b3a:	049b      	lsls	r3, r3, #18
 8004b3c:	4013      	ands	r3, r2
 8004b3e:	d1f0      	bne.n	8004b22 <HAL_RCC_OscConfig+0x5aa>
 8004b40:	e024      	b.n	8004b8c <HAL_RCC_OscConfig+0x614>
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	6a1b      	ldr	r3, [r3, #32]
 8004b46:	2b01      	cmp	r3, #1
 8004b48:	d101      	bne.n	8004b4e <HAL_RCC_OscConfig+0x5d6>
 8004b4a:	2301      	movs	r3, #1
 8004b4c:	e01f      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004b4e:	4b12      	ldr	r3, [pc, #72]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004b50:	685b      	ldr	r3, [r3, #4]
 8004b52:	617b      	str	r3, [r7, #20]
 8004b54:	4b10      	ldr	r3, [pc, #64]	; (8004b98 <HAL_RCC_OscConfig+0x620>)
 8004b56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b58:	613b      	str	r3, [r7, #16]
 8004b5a:	697a      	ldr	r2, [r7, #20]
 8004b5c:	2380      	movs	r3, #128	; 0x80
 8004b5e:	025b      	lsls	r3, r3, #9
 8004b60:	401a      	ands	r2, r3
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b66:	429a      	cmp	r2, r3
 8004b68:	d10e      	bne.n	8004b88 <HAL_RCC_OscConfig+0x610>
 8004b6a:	693b      	ldr	r3, [r7, #16]
 8004b6c:	220f      	movs	r2, #15
 8004b6e:	401a      	ands	r2, r3
 8004b70:	687b      	ldr	r3, [r7, #4]
 8004b72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b74:	429a      	cmp	r2, r3
 8004b76:	d107      	bne.n	8004b88 <HAL_RCC_OscConfig+0x610>
 8004b78:	697a      	ldr	r2, [r7, #20]
 8004b7a:	23f0      	movs	r3, #240	; 0xf0
 8004b7c:	039b      	lsls	r3, r3, #14
 8004b7e:	401a      	ands	r2, r3
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b84:	429a      	cmp	r2, r3
 8004b86:	d001      	beq.n	8004b8c <HAL_RCC_OscConfig+0x614>
 8004b88:	2301      	movs	r3, #1
 8004b8a:	e000      	b.n	8004b8e <HAL_RCC_OscConfig+0x616>
 8004b8c:	2300      	movs	r3, #0
 8004b8e:	0018      	movs	r0, r3
 8004b90:	46bd      	mov	sp, r7
 8004b92:	b008      	add	sp, #32
 8004b94:	bd80      	pop	{r7, pc}
 8004b96:	46c0      	nop			; (mov r8, r8)
 8004b98:	40021000 	.word	0x40021000
 8004b9c:	00001388 	.word	0x00001388
 8004ba0:	efffffff 	.word	0xefffffff
 8004ba4:	feffffff 	.word	0xfeffffff
 8004ba8:	ffc2ffff 	.word	0xffc2ffff

08004bac <HAL_RCC_ClockConfig>:
 8004bac:	b580      	push	{r7, lr}
 8004bae:	b084      	sub	sp, #16
 8004bb0:	af00      	add	r7, sp, #0
 8004bb2:	6078      	str	r0, [r7, #4]
 8004bb4:	6039      	str	r1, [r7, #0]
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	2b00      	cmp	r3, #0
 8004bba:	d101      	bne.n	8004bc0 <HAL_RCC_ClockConfig+0x14>
 8004bbc:	2301      	movs	r3, #1
 8004bbe:	e0b3      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004bc0:	4b5b      	ldr	r3, [pc, #364]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	2201      	movs	r2, #1
 8004bc6:	4013      	ands	r3, r2
 8004bc8:	683a      	ldr	r2, [r7, #0]
 8004bca:	429a      	cmp	r2, r3
 8004bcc:	d911      	bls.n	8004bf2 <HAL_RCC_ClockConfig+0x46>
 8004bce:	4b58      	ldr	r3, [pc, #352]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	2201      	movs	r2, #1
 8004bd4:	4393      	bics	r3, r2
 8004bd6:	0019      	movs	r1, r3
 8004bd8:	4b55      	ldr	r3, [pc, #340]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004bda:	683a      	ldr	r2, [r7, #0]
 8004bdc:	430a      	orrs	r2, r1
 8004bde:	601a      	str	r2, [r3, #0]
 8004be0:	4b53      	ldr	r3, [pc, #332]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	2201      	movs	r2, #1
 8004be6:	4013      	ands	r3, r2
 8004be8:	683a      	ldr	r2, [r7, #0]
 8004bea:	429a      	cmp	r2, r3
 8004bec:	d001      	beq.n	8004bf2 <HAL_RCC_ClockConfig+0x46>
 8004bee:	2301      	movs	r3, #1
 8004bf0:	e09a      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	681b      	ldr	r3, [r3, #0]
 8004bf6:	2202      	movs	r2, #2
 8004bf8:	4013      	ands	r3, r2
 8004bfa:	d015      	beq.n	8004c28 <HAL_RCC_ClockConfig+0x7c>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	2204      	movs	r2, #4
 8004c02:	4013      	ands	r3, r2
 8004c04:	d006      	beq.n	8004c14 <HAL_RCC_ClockConfig+0x68>
 8004c06:	4b4b      	ldr	r3, [pc, #300]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c08:	685a      	ldr	r2, [r3, #4]
 8004c0a:	4b4a      	ldr	r3, [pc, #296]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c0c:	21e0      	movs	r1, #224	; 0xe0
 8004c0e:	00c9      	lsls	r1, r1, #3
 8004c10:	430a      	orrs	r2, r1
 8004c12:	605a      	str	r2, [r3, #4]
 8004c14:	4b47      	ldr	r3, [pc, #284]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c16:	685b      	ldr	r3, [r3, #4]
 8004c18:	22f0      	movs	r2, #240	; 0xf0
 8004c1a:	4393      	bics	r3, r2
 8004c1c:	0019      	movs	r1, r3
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	689a      	ldr	r2, [r3, #8]
 8004c22:	4b44      	ldr	r3, [pc, #272]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c24:	430a      	orrs	r2, r1
 8004c26:	605a      	str	r2, [r3, #4]
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	2201      	movs	r2, #1
 8004c2e:	4013      	ands	r3, r2
 8004c30:	d040      	beq.n	8004cb4 <HAL_RCC_ClockConfig+0x108>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	685b      	ldr	r3, [r3, #4]
 8004c36:	2b01      	cmp	r3, #1
 8004c38:	d107      	bne.n	8004c4a <HAL_RCC_ClockConfig+0x9e>
 8004c3a:	4b3e      	ldr	r3, [pc, #248]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c3c:	681a      	ldr	r2, [r3, #0]
 8004c3e:	2380      	movs	r3, #128	; 0x80
 8004c40:	029b      	lsls	r3, r3, #10
 8004c42:	4013      	ands	r3, r2
 8004c44:	d114      	bne.n	8004c70 <HAL_RCC_ClockConfig+0xc4>
 8004c46:	2301      	movs	r3, #1
 8004c48:	e06e      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004c4a:	687b      	ldr	r3, [r7, #4]
 8004c4c:	685b      	ldr	r3, [r3, #4]
 8004c4e:	2b02      	cmp	r3, #2
 8004c50:	d107      	bne.n	8004c62 <HAL_RCC_ClockConfig+0xb6>
 8004c52:	4b38      	ldr	r3, [pc, #224]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c54:	681a      	ldr	r2, [r3, #0]
 8004c56:	2380      	movs	r3, #128	; 0x80
 8004c58:	049b      	lsls	r3, r3, #18
 8004c5a:	4013      	ands	r3, r2
 8004c5c:	d108      	bne.n	8004c70 <HAL_RCC_ClockConfig+0xc4>
 8004c5e:	2301      	movs	r3, #1
 8004c60:	e062      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004c62:	4b34      	ldr	r3, [pc, #208]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	2202      	movs	r2, #2
 8004c68:	4013      	ands	r3, r2
 8004c6a:	d101      	bne.n	8004c70 <HAL_RCC_ClockConfig+0xc4>
 8004c6c:	2301      	movs	r3, #1
 8004c6e:	e05b      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004c70:	4b30      	ldr	r3, [pc, #192]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c72:	685b      	ldr	r3, [r3, #4]
 8004c74:	2203      	movs	r2, #3
 8004c76:	4393      	bics	r3, r2
 8004c78:	0019      	movs	r1, r3
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	685a      	ldr	r2, [r3, #4]
 8004c7e:	4b2d      	ldr	r3, [pc, #180]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004c80:	430a      	orrs	r2, r1
 8004c82:	605a      	str	r2, [r3, #4]
 8004c84:	f7fe fa9e 	bl	80031c4 <HAL_GetTick>
 8004c88:	0003      	movs	r3, r0
 8004c8a:	60fb      	str	r3, [r7, #12]
 8004c8c:	e009      	b.n	8004ca2 <HAL_RCC_ClockConfig+0xf6>
 8004c8e:	f7fe fa99 	bl	80031c4 <HAL_GetTick>
 8004c92:	0002      	movs	r2, r0
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	1ad3      	subs	r3, r2, r3
 8004c98:	4a27      	ldr	r2, [pc, #156]	; (8004d38 <HAL_RCC_ClockConfig+0x18c>)
 8004c9a:	4293      	cmp	r3, r2
 8004c9c:	d901      	bls.n	8004ca2 <HAL_RCC_ClockConfig+0xf6>
 8004c9e:	2303      	movs	r3, #3
 8004ca0:	e042      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004ca2:	4b24      	ldr	r3, [pc, #144]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004ca4:	685b      	ldr	r3, [r3, #4]
 8004ca6:	220c      	movs	r2, #12
 8004ca8:	401a      	ands	r2, r3
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	685b      	ldr	r3, [r3, #4]
 8004cae:	009b      	lsls	r3, r3, #2
 8004cb0:	429a      	cmp	r2, r3
 8004cb2:	d1ec      	bne.n	8004c8e <HAL_RCC_ClockConfig+0xe2>
 8004cb4:	4b1e      	ldr	r3, [pc, #120]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	2201      	movs	r2, #1
 8004cba:	4013      	ands	r3, r2
 8004cbc:	683a      	ldr	r2, [r7, #0]
 8004cbe:	429a      	cmp	r2, r3
 8004cc0:	d211      	bcs.n	8004ce6 <HAL_RCC_ClockConfig+0x13a>
 8004cc2:	4b1b      	ldr	r3, [pc, #108]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	2201      	movs	r2, #1
 8004cc8:	4393      	bics	r3, r2
 8004cca:	0019      	movs	r1, r3
 8004ccc:	4b18      	ldr	r3, [pc, #96]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004cce:	683a      	ldr	r2, [r7, #0]
 8004cd0:	430a      	orrs	r2, r1
 8004cd2:	601a      	str	r2, [r3, #0]
 8004cd4:	4b16      	ldr	r3, [pc, #88]	; (8004d30 <HAL_RCC_ClockConfig+0x184>)
 8004cd6:	681b      	ldr	r3, [r3, #0]
 8004cd8:	2201      	movs	r2, #1
 8004cda:	4013      	ands	r3, r2
 8004cdc:	683a      	ldr	r2, [r7, #0]
 8004cde:	429a      	cmp	r2, r3
 8004ce0:	d001      	beq.n	8004ce6 <HAL_RCC_ClockConfig+0x13a>
 8004ce2:	2301      	movs	r3, #1
 8004ce4:	e020      	b.n	8004d28 <HAL_RCC_ClockConfig+0x17c>
 8004ce6:	687b      	ldr	r3, [r7, #4]
 8004ce8:	681b      	ldr	r3, [r3, #0]
 8004cea:	2204      	movs	r2, #4
 8004cec:	4013      	ands	r3, r2
 8004cee:	d009      	beq.n	8004d04 <HAL_RCC_ClockConfig+0x158>
 8004cf0:	4b10      	ldr	r3, [pc, #64]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004cf2:	685b      	ldr	r3, [r3, #4]
 8004cf4:	4a11      	ldr	r2, [pc, #68]	; (8004d3c <HAL_RCC_ClockConfig+0x190>)
 8004cf6:	4013      	ands	r3, r2
 8004cf8:	0019      	movs	r1, r3
 8004cfa:	687b      	ldr	r3, [r7, #4]
 8004cfc:	68da      	ldr	r2, [r3, #12]
 8004cfe:	4b0d      	ldr	r3, [pc, #52]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004d00:	430a      	orrs	r2, r1
 8004d02:	605a      	str	r2, [r3, #4]
 8004d04:	f000 f820 	bl	8004d48 <HAL_RCC_GetSysClockFreq>
 8004d08:	0001      	movs	r1, r0
 8004d0a:	4b0a      	ldr	r3, [pc, #40]	; (8004d34 <HAL_RCC_ClockConfig+0x188>)
 8004d0c:	685b      	ldr	r3, [r3, #4]
 8004d0e:	091b      	lsrs	r3, r3, #4
 8004d10:	220f      	movs	r2, #15
 8004d12:	4013      	ands	r3, r2
 8004d14:	4a0a      	ldr	r2, [pc, #40]	; (8004d40 <HAL_RCC_ClockConfig+0x194>)
 8004d16:	5cd3      	ldrb	r3, [r2, r3]
 8004d18:	000a      	movs	r2, r1
 8004d1a:	40da      	lsrs	r2, r3
 8004d1c:	4b09      	ldr	r3, [pc, #36]	; (8004d44 <HAL_RCC_ClockConfig+0x198>)
 8004d1e:	601a      	str	r2, [r3, #0]
 8004d20:	2003      	movs	r0, #3
 8004d22:	f7fe fa09 	bl	8003138 <HAL_InitTick>
 8004d26:	2300      	movs	r3, #0
 8004d28:	0018      	movs	r0, r3
 8004d2a:	46bd      	mov	sp, r7
 8004d2c:	b004      	add	sp, #16
 8004d2e:	bd80      	pop	{r7, pc}
 8004d30:	40022000 	.word	0x40022000
 8004d34:	40021000 	.word	0x40021000
 8004d38:	00001388 	.word	0x00001388
 8004d3c:	fffff8ff 	.word	0xfffff8ff
 8004d40:	08007514 	.word	0x08007514
 8004d44:	2000000c 	.word	0x2000000c

08004d48 <HAL_RCC_GetSysClockFreq>:
 8004d48:	b580      	push	{r7, lr}
 8004d4a:	b086      	sub	sp, #24
 8004d4c:	af00      	add	r7, sp, #0
 8004d4e:	2300      	movs	r3, #0
 8004d50:	60fb      	str	r3, [r7, #12]
 8004d52:	2300      	movs	r3, #0
 8004d54:	60bb      	str	r3, [r7, #8]
 8004d56:	2300      	movs	r3, #0
 8004d58:	617b      	str	r3, [r7, #20]
 8004d5a:	2300      	movs	r3, #0
 8004d5c:	607b      	str	r3, [r7, #4]
 8004d5e:	2300      	movs	r3, #0
 8004d60:	613b      	str	r3, [r7, #16]
 8004d62:	4b20      	ldr	r3, [pc, #128]	; (8004de4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004d64:	685b      	ldr	r3, [r3, #4]
 8004d66:	60fb      	str	r3, [r7, #12]
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	220c      	movs	r2, #12
 8004d6c:	4013      	ands	r3, r2
 8004d6e:	2b04      	cmp	r3, #4
 8004d70:	d002      	beq.n	8004d78 <HAL_RCC_GetSysClockFreq+0x30>
 8004d72:	2b08      	cmp	r3, #8
 8004d74:	d003      	beq.n	8004d7e <HAL_RCC_GetSysClockFreq+0x36>
 8004d76:	e02c      	b.n	8004dd2 <HAL_RCC_GetSysClockFreq+0x8a>
 8004d78:	4b1b      	ldr	r3, [pc, #108]	; (8004de8 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004d7a:	613b      	str	r3, [r7, #16]
 8004d7c:	e02c      	b.n	8004dd8 <HAL_RCC_GetSysClockFreq+0x90>
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	0c9b      	lsrs	r3, r3, #18
 8004d82:	220f      	movs	r2, #15
 8004d84:	4013      	ands	r3, r2
 8004d86:	4a19      	ldr	r2, [pc, #100]	; (8004dec <HAL_RCC_GetSysClockFreq+0xa4>)
 8004d88:	5cd3      	ldrb	r3, [r2, r3]
 8004d8a:	607b      	str	r3, [r7, #4]
 8004d8c:	4b15      	ldr	r3, [pc, #84]	; (8004de4 <HAL_RCC_GetSysClockFreq+0x9c>)
 8004d8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d90:	220f      	movs	r2, #15
 8004d92:	4013      	ands	r3, r2
 8004d94:	4a16      	ldr	r2, [pc, #88]	; (8004df0 <HAL_RCC_GetSysClockFreq+0xa8>)
 8004d96:	5cd3      	ldrb	r3, [r2, r3]
 8004d98:	60bb      	str	r3, [r7, #8]
 8004d9a:	68fa      	ldr	r2, [r7, #12]
 8004d9c:	2380      	movs	r3, #128	; 0x80
 8004d9e:	025b      	lsls	r3, r3, #9
 8004da0:	4013      	ands	r3, r2
 8004da2:	d009      	beq.n	8004db8 <HAL_RCC_GetSysClockFreq+0x70>
 8004da4:	68b9      	ldr	r1, [r7, #8]
 8004da6:	4810      	ldr	r0, [pc, #64]	; (8004de8 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004da8:	f7fb f9b8 	bl	800011c <__udivsi3>
 8004dac:	0003      	movs	r3, r0
 8004dae:	001a      	movs	r2, r3
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	4353      	muls	r3, r2
 8004db4:	617b      	str	r3, [r7, #20]
 8004db6:	e009      	b.n	8004dcc <HAL_RCC_GetSysClockFreq+0x84>
 8004db8:	6879      	ldr	r1, [r7, #4]
 8004dba:	000a      	movs	r2, r1
 8004dbc:	0152      	lsls	r2, r2, #5
 8004dbe:	1a52      	subs	r2, r2, r1
 8004dc0:	0193      	lsls	r3, r2, #6
 8004dc2:	1a9b      	subs	r3, r3, r2
 8004dc4:	00db      	lsls	r3, r3, #3
 8004dc6:	185b      	adds	r3, r3, r1
 8004dc8:	021b      	lsls	r3, r3, #8
 8004dca:	617b      	str	r3, [r7, #20]
 8004dcc:	697b      	ldr	r3, [r7, #20]
 8004dce:	613b      	str	r3, [r7, #16]
 8004dd0:	e002      	b.n	8004dd8 <HAL_RCC_GetSysClockFreq+0x90>
 8004dd2:	4b05      	ldr	r3, [pc, #20]	; (8004de8 <HAL_RCC_GetSysClockFreq+0xa0>)
 8004dd4:	613b      	str	r3, [r7, #16]
 8004dd6:	46c0      	nop			; (mov r8, r8)
 8004dd8:	693b      	ldr	r3, [r7, #16]
 8004dda:	0018      	movs	r0, r3
 8004ddc:	46bd      	mov	sp, r7
 8004dde:	b006      	add	sp, #24
 8004de0:	bd80      	pop	{r7, pc}
 8004de2:	46c0      	nop			; (mov r8, r8)
 8004de4:	40021000 	.word	0x40021000
 8004de8:	007a1200 	.word	0x007a1200
 8004dec:	0800752c 	.word	0x0800752c
 8004df0:	0800753c 	.word	0x0800753c

08004df4 <HAL_RCC_GetHCLKFreq>:
 8004df4:	b580      	push	{r7, lr}
 8004df6:	af00      	add	r7, sp, #0
 8004df8:	4b02      	ldr	r3, [pc, #8]	; (8004e04 <HAL_RCC_GetHCLKFreq+0x10>)
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	0018      	movs	r0, r3
 8004dfe:	46bd      	mov	sp, r7
 8004e00:	bd80      	pop	{r7, pc}
 8004e02:	46c0      	nop			; (mov r8, r8)
 8004e04:	2000000c 	.word	0x2000000c

08004e08 <HAL_RCC_GetPCLK1Freq>:
 8004e08:	b580      	push	{r7, lr}
 8004e0a:	af00      	add	r7, sp, #0
 8004e0c:	f7ff fff2 	bl	8004df4 <HAL_RCC_GetHCLKFreq>
 8004e10:	0001      	movs	r1, r0
 8004e12:	4b06      	ldr	r3, [pc, #24]	; (8004e2c <HAL_RCC_GetPCLK1Freq+0x24>)
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	0a1b      	lsrs	r3, r3, #8
 8004e18:	2207      	movs	r2, #7
 8004e1a:	4013      	ands	r3, r2
 8004e1c:	4a04      	ldr	r2, [pc, #16]	; (8004e30 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004e1e:	5cd3      	ldrb	r3, [r2, r3]
 8004e20:	40d9      	lsrs	r1, r3
 8004e22:	000b      	movs	r3, r1
 8004e24:	0018      	movs	r0, r3
 8004e26:	46bd      	mov	sp, r7
 8004e28:	bd80      	pop	{r7, pc}
 8004e2a:	46c0      	nop			; (mov r8, r8)
 8004e2c:	40021000 	.word	0x40021000
 8004e30:	08007524 	.word	0x08007524

08004e34 <HAL_RCCEx_PeriphCLKConfig>:
 8004e34:	b580      	push	{r7, lr}
 8004e36:	b086      	sub	sp, #24
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	6078      	str	r0, [r7, #4]
 8004e3c:	2300      	movs	r3, #0
 8004e3e:	613b      	str	r3, [r7, #16]
 8004e40:	2300      	movs	r3, #0
 8004e42:	60fb      	str	r3, [r7, #12]
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	681a      	ldr	r2, [r3, #0]
 8004e48:	2380      	movs	r3, #128	; 0x80
 8004e4a:	025b      	lsls	r3, r3, #9
 8004e4c:	4013      	ands	r3, r2
 8004e4e:	d100      	bne.n	8004e52 <HAL_RCCEx_PeriphCLKConfig+0x1e>
 8004e50:	e08e      	b.n	8004f70 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8004e52:	2017      	movs	r0, #23
 8004e54:	183b      	adds	r3, r7, r0
 8004e56:	2200      	movs	r2, #0
 8004e58:	701a      	strb	r2, [r3, #0]
 8004e5a:	4b57      	ldr	r3, [pc, #348]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004e5c:	69da      	ldr	r2, [r3, #28]
 8004e5e:	2380      	movs	r3, #128	; 0x80
 8004e60:	055b      	lsls	r3, r3, #21
 8004e62:	4013      	ands	r3, r2
 8004e64:	d110      	bne.n	8004e88 <HAL_RCCEx_PeriphCLKConfig+0x54>
 8004e66:	4b54      	ldr	r3, [pc, #336]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004e68:	69da      	ldr	r2, [r3, #28]
 8004e6a:	4b53      	ldr	r3, [pc, #332]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004e6c:	2180      	movs	r1, #128	; 0x80
 8004e6e:	0549      	lsls	r1, r1, #21
 8004e70:	430a      	orrs	r2, r1
 8004e72:	61da      	str	r2, [r3, #28]
 8004e74:	4b50      	ldr	r3, [pc, #320]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004e76:	69da      	ldr	r2, [r3, #28]
 8004e78:	2380      	movs	r3, #128	; 0x80
 8004e7a:	055b      	lsls	r3, r3, #21
 8004e7c:	4013      	ands	r3, r2
 8004e7e:	60bb      	str	r3, [r7, #8]
 8004e80:	68bb      	ldr	r3, [r7, #8]
 8004e82:	183b      	adds	r3, r7, r0
 8004e84:	2201      	movs	r2, #1
 8004e86:	701a      	strb	r2, [r3, #0]
 8004e88:	4b4c      	ldr	r3, [pc, #304]	; (8004fbc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004e8a:	681a      	ldr	r2, [r3, #0]
 8004e8c:	2380      	movs	r3, #128	; 0x80
 8004e8e:	005b      	lsls	r3, r3, #1
 8004e90:	4013      	ands	r3, r2
 8004e92:	d11a      	bne.n	8004eca <HAL_RCCEx_PeriphCLKConfig+0x96>
 8004e94:	4b49      	ldr	r3, [pc, #292]	; (8004fbc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004e96:	681a      	ldr	r2, [r3, #0]
 8004e98:	4b48      	ldr	r3, [pc, #288]	; (8004fbc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004e9a:	2180      	movs	r1, #128	; 0x80
 8004e9c:	0049      	lsls	r1, r1, #1
 8004e9e:	430a      	orrs	r2, r1
 8004ea0:	601a      	str	r2, [r3, #0]
 8004ea2:	f7fe f98f 	bl	80031c4 <HAL_GetTick>
 8004ea6:	0003      	movs	r3, r0
 8004ea8:	613b      	str	r3, [r7, #16]
 8004eaa:	e008      	b.n	8004ebe <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8004eac:	f7fe f98a 	bl	80031c4 <HAL_GetTick>
 8004eb0:	0002      	movs	r2, r0
 8004eb2:	693b      	ldr	r3, [r7, #16]
 8004eb4:	1ad3      	subs	r3, r2, r3
 8004eb6:	2b64      	cmp	r3, #100	; 0x64
 8004eb8:	d901      	bls.n	8004ebe <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8004eba:	2303      	movs	r3, #3
 8004ebc:	e077      	b.n	8004fae <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8004ebe:	4b3f      	ldr	r3, [pc, #252]	; (8004fbc <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8004ec0:	681a      	ldr	r2, [r3, #0]
 8004ec2:	2380      	movs	r3, #128	; 0x80
 8004ec4:	005b      	lsls	r3, r3, #1
 8004ec6:	4013      	ands	r3, r2
 8004ec8:	d0f0      	beq.n	8004eac <HAL_RCCEx_PeriphCLKConfig+0x78>
 8004eca:	4b3b      	ldr	r3, [pc, #236]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004ecc:	6a1a      	ldr	r2, [r3, #32]
 8004ece:	23c0      	movs	r3, #192	; 0xc0
 8004ed0:	009b      	lsls	r3, r3, #2
 8004ed2:	4013      	ands	r3, r2
 8004ed4:	60fb      	str	r3, [r7, #12]
 8004ed6:	68fb      	ldr	r3, [r7, #12]
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d034      	beq.n	8004f46 <HAL_RCCEx_PeriphCLKConfig+0x112>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	685a      	ldr	r2, [r3, #4]
 8004ee0:	23c0      	movs	r3, #192	; 0xc0
 8004ee2:	009b      	lsls	r3, r3, #2
 8004ee4:	4013      	ands	r3, r2
 8004ee6:	68fa      	ldr	r2, [r7, #12]
 8004ee8:	429a      	cmp	r2, r3
 8004eea:	d02c      	beq.n	8004f46 <HAL_RCCEx_PeriphCLKConfig+0x112>
 8004eec:	4b32      	ldr	r3, [pc, #200]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004eee:	6a1b      	ldr	r3, [r3, #32]
 8004ef0:	4a33      	ldr	r2, [pc, #204]	; (8004fc0 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8004ef2:	4013      	ands	r3, r2
 8004ef4:	60fb      	str	r3, [r7, #12]
 8004ef6:	4b30      	ldr	r3, [pc, #192]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004ef8:	6a1a      	ldr	r2, [r3, #32]
 8004efa:	4b2f      	ldr	r3, [pc, #188]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004efc:	2180      	movs	r1, #128	; 0x80
 8004efe:	0249      	lsls	r1, r1, #9
 8004f00:	430a      	orrs	r2, r1
 8004f02:	621a      	str	r2, [r3, #32]
 8004f04:	4b2c      	ldr	r3, [pc, #176]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f06:	6a1a      	ldr	r2, [r3, #32]
 8004f08:	4b2b      	ldr	r3, [pc, #172]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f0a:	492e      	ldr	r1, [pc, #184]	; (8004fc4 <HAL_RCCEx_PeriphCLKConfig+0x190>)
 8004f0c:	400a      	ands	r2, r1
 8004f0e:	621a      	str	r2, [r3, #32]
 8004f10:	4b29      	ldr	r3, [pc, #164]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f12:	68fa      	ldr	r2, [r7, #12]
 8004f14:	621a      	str	r2, [r3, #32]
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	2201      	movs	r2, #1
 8004f1a:	4013      	ands	r3, r2
 8004f1c:	d013      	beq.n	8004f46 <HAL_RCCEx_PeriphCLKConfig+0x112>
 8004f1e:	f7fe f951 	bl	80031c4 <HAL_GetTick>
 8004f22:	0003      	movs	r3, r0
 8004f24:	613b      	str	r3, [r7, #16]
 8004f26:	e009      	b.n	8004f3c <HAL_RCCEx_PeriphCLKConfig+0x108>
 8004f28:	f7fe f94c 	bl	80031c4 <HAL_GetTick>
 8004f2c:	0002      	movs	r2, r0
 8004f2e:	693b      	ldr	r3, [r7, #16]
 8004f30:	1ad3      	subs	r3, r2, r3
 8004f32:	4a25      	ldr	r2, [pc, #148]	; (8004fc8 <HAL_RCCEx_PeriphCLKConfig+0x194>)
 8004f34:	4293      	cmp	r3, r2
 8004f36:	d901      	bls.n	8004f3c <HAL_RCCEx_PeriphCLKConfig+0x108>
 8004f38:	2303      	movs	r3, #3
 8004f3a:	e038      	b.n	8004fae <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8004f3c:	4b1e      	ldr	r3, [pc, #120]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f3e:	6a1b      	ldr	r3, [r3, #32]
 8004f40:	2202      	movs	r2, #2
 8004f42:	4013      	ands	r3, r2
 8004f44:	d0f0      	beq.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004f46:	4b1c      	ldr	r3, [pc, #112]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f48:	6a1b      	ldr	r3, [r3, #32]
 8004f4a:	4a1d      	ldr	r2, [pc, #116]	; (8004fc0 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8004f4c:	4013      	ands	r3, r2
 8004f4e:	0019      	movs	r1, r3
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	685a      	ldr	r2, [r3, #4]
 8004f54:	4b18      	ldr	r3, [pc, #96]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f56:	430a      	orrs	r2, r1
 8004f58:	621a      	str	r2, [r3, #32]
 8004f5a:	2317      	movs	r3, #23
 8004f5c:	18fb      	adds	r3, r7, r3
 8004f5e:	781b      	ldrb	r3, [r3, #0]
 8004f60:	2b01      	cmp	r3, #1
 8004f62:	d105      	bne.n	8004f70 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8004f64:	4b14      	ldr	r3, [pc, #80]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f66:	69da      	ldr	r2, [r3, #28]
 8004f68:	4b13      	ldr	r3, [pc, #76]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f6a:	4918      	ldr	r1, [pc, #96]	; (8004fcc <HAL_RCCEx_PeriphCLKConfig+0x198>)
 8004f6c:	400a      	ands	r2, r1
 8004f6e:	61da      	str	r2, [r3, #28]
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	2201      	movs	r2, #1
 8004f76:	4013      	ands	r3, r2
 8004f78:	d009      	beq.n	8004f8e <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8004f7a:	4b0f      	ldr	r3, [pc, #60]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f7e:	2203      	movs	r2, #3
 8004f80:	4393      	bics	r3, r2
 8004f82:	0019      	movs	r1, r3
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	689a      	ldr	r2, [r3, #8]
 8004f88:	4b0b      	ldr	r3, [pc, #44]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f8a:	430a      	orrs	r2, r1
 8004f8c:	631a      	str	r2, [r3, #48]	; 0x30
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	2220      	movs	r2, #32
 8004f94:	4013      	ands	r3, r2
 8004f96:	d009      	beq.n	8004fac <HAL_RCCEx_PeriphCLKConfig+0x178>
 8004f98:	4b07      	ldr	r3, [pc, #28]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004f9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f9c:	2210      	movs	r2, #16
 8004f9e:	4393      	bics	r3, r2
 8004fa0:	0019      	movs	r1, r3
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	68da      	ldr	r2, [r3, #12]
 8004fa6:	4b04      	ldr	r3, [pc, #16]	; (8004fb8 <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8004fa8:	430a      	orrs	r2, r1
 8004faa:	631a      	str	r2, [r3, #48]	; 0x30
 8004fac:	2300      	movs	r3, #0
 8004fae:	0018      	movs	r0, r3
 8004fb0:	46bd      	mov	sp, r7
 8004fb2:	b006      	add	sp, #24
 8004fb4:	bd80      	pop	{r7, pc}
 8004fb6:	46c0      	nop			; (mov r8, r8)
 8004fb8:	40021000 	.word	0x40021000
 8004fbc:	40007000 	.word	0x40007000
 8004fc0:	fffffcff 	.word	0xfffffcff
 8004fc4:	fffeffff 	.word	0xfffeffff
 8004fc8:	00001388 	.word	0x00001388
 8004fcc:	efffffff 	.word	0xefffffff

08004fd0 <HAL_TIM_Base_Init>:
 8004fd0:	b580      	push	{r7, lr}
 8004fd2:	b082      	sub	sp, #8
 8004fd4:	af00      	add	r7, sp, #0
 8004fd6:	6078      	str	r0, [r7, #4]
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d101      	bne.n	8004fe2 <HAL_TIM_Base_Init+0x12>
 8004fde:	2301      	movs	r3, #1
 8004fe0:	e042      	b.n	8005068 <HAL_TIM_Base_Init+0x98>
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	223d      	movs	r2, #61	; 0x3d
 8004fe6:	5c9b      	ldrb	r3, [r3, r2]
 8004fe8:	b2db      	uxtb	r3, r3
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d107      	bne.n	8004ffe <HAL_TIM_Base_Init+0x2e>
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	223c      	movs	r2, #60	; 0x3c
 8004ff2:	2100      	movs	r1, #0
 8004ff4:	5499      	strb	r1, [r3, r2]
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	0018      	movs	r0, r3
 8004ffa:	f7fd ff01 	bl	8002e00 <HAL_TIM_Base_MspInit>
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	223d      	movs	r2, #61	; 0x3d
 8005002:	2102      	movs	r1, #2
 8005004:	5499      	strb	r1, [r3, r2]
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	681a      	ldr	r2, [r3, #0]
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	3304      	adds	r3, #4
 800500e:	0019      	movs	r1, r3
 8005010:	0010      	movs	r0, r2
 8005012:	f000 f9dd 	bl	80053d0 <TIM_Base_SetConfig>
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	2246      	movs	r2, #70	; 0x46
 800501a:	2101      	movs	r1, #1
 800501c:	5499      	strb	r1, [r3, r2]
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	223e      	movs	r2, #62	; 0x3e
 8005022:	2101      	movs	r1, #1
 8005024:	5499      	strb	r1, [r3, r2]
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	223f      	movs	r2, #63	; 0x3f
 800502a:	2101      	movs	r1, #1
 800502c:	5499      	strb	r1, [r3, r2]
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	2240      	movs	r2, #64	; 0x40
 8005032:	2101      	movs	r1, #1
 8005034:	5499      	strb	r1, [r3, r2]
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	2241      	movs	r2, #65	; 0x41
 800503a:	2101      	movs	r1, #1
 800503c:	5499      	strb	r1, [r3, r2]
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	2242      	movs	r2, #66	; 0x42
 8005042:	2101      	movs	r1, #1
 8005044:	5499      	strb	r1, [r3, r2]
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	2243      	movs	r2, #67	; 0x43
 800504a:	2101      	movs	r1, #1
 800504c:	5499      	strb	r1, [r3, r2]
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	2244      	movs	r2, #68	; 0x44
 8005052:	2101      	movs	r1, #1
 8005054:	5499      	strb	r1, [r3, r2]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	2245      	movs	r2, #69	; 0x45
 800505a:	2101      	movs	r1, #1
 800505c:	5499      	strb	r1, [r3, r2]
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	223d      	movs	r2, #61	; 0x3d
 8005062:	2101      	movs	r1, #1
 8005064:	5499      	strb	r1, [r3, r2]
 8005066:	2300      	movs	r3, #0
 8005068:	0018      	movs	r0, r3
 800506a:	46bd      	mov	sp, r7
 800506c:	b002      	add	sp, #8
 800506e:	bd80      	pop	{r7, pc}

08005070 <HAL_TIM_Base_Start_IT>:
 8005070:	b580      	push	{r7, lr}
 8005072:	b084      	sub	sp, #16
 8005074:	af00      	add	r7, sp, #0
 8005076:	6078      	str	r0, [r7, #4]
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	223d      	movs	r2, #61	; 0x3d
 800507c:	5c9b      	ldrb	r3, [r3, r2]
 800507e:	b2db      	uxtb	r3, r3
 8005080:	2b01      	cmp	r3, #1
 8005082:	d001      	beq.n	8005088 <HAL_TIM_Base_Start_IT+0x18>
 8005084:	2301      	movs	r3, #1
 8005086:	e035      	b.n	80050f4 <HAL_TIM_Base_Start_IT+0x84>
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	223d      	movs	r2, #61	; 0x3d
 800508c:	2102      	movs	r1, #2
 800508e:	5499      	strb	r1, [r3, r2]
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	68da      	ldr	r2, [r3, #12]
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	2101      	movs	r1, #1
 800509c:	430a      	orrs	r2, r1
 800509e:	60da      	str	r2, [r3, #12]
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	4a15      	ldr	r2, [pc, #84]	; (80050fc <HAL_TIM_Base_Start_IT+0x8c>)
 80050a6:	4293      	cmp	r3, r2
 80050a8:	d009      	beq.n	80050be <HAL_TIM_Base_Start_IT+0x4e>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	4a14      	ldr	r2, [pc, #80]	; (8005100 <HAL_TIM_Base_Start_IT+0x90>)
 80050b0:	4293      	cmp	r3, r2
 80050b2:	d004      	beq.n	80050be <HAL_TIM_Base_Start_IT+0x4e>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	4a12      	ldr	r2, [pc, #72]	; (8005104 <HAL_TIM_Base_Start_IT+0x94>)
 80050ba:	4293      	cmp	r3, r2
 80050bc:	d111      	bne.n	80050e2 <HAL_TIM_Base_Start_IT+0x72>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	689b      	ldr	r3, [r3, #8]
 80050c4:	2207      	movs	r2, #7
 80050c6:	4013      	ands	r3, r2
 80050c8:	60fb      	str	r3, [r7, #12]
 80050ca:	68fb      	ldr	r3, [r7, #12]
 80050cc:	2b06      	cmp	r3, #6
 80050ce:	d010      	beq.n	80050f2 <HAL_TIM_Base_Start_IT+0x82>
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	681a      	ldr	r2, [r3, #0]
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	2101      	movs	r1, #1
 80050dc:	430a      	orrs	r2, r1
 80050de:	601a      	str	r2, [r3, #0]
 80050e0:	e007      	b.n	80050f2 <HAL_TIM_Base_Start_IT+0x82>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	681a      	ldr	r2, [r3, #0]
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	2101      	movs	r1, #1
 80050ee:	430a      	orrs	r2, r1
 80050f0:	601a      	str	r2, [r3, #0]
 80050f2:	2300      	movs	r3, #0
 80050f4:	0018      	movs	r0, r3
 80050f6:	46bd      	mov	sp, r7
 80050f8:	b004      	add	sp, #16
 80050fa:	bd80      	pop	{r7, pc}
 80050fc:	40012c00 	.word	0x40012c00
 8005100:	40000400 	.word	0x40000400
 8005104:	40014000 	.word	0x40014000

08005108 <HAL_TIM_Base_Stop_IT>:
 8005108:	b580      	push	{r7, lr}
 800510a:	b082      	sub	sp, #8
 800510c:	af00      	add	r7, sp, #0
 800510e:	6078      	str	r0, [r7, #4]
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	68da      	ldr	r2, [r3, #12]
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	2101      	movs	r1, #1
 800511c:	438a      	bics	r2, r1
 800511e:	60da      	str	r2, [r3, #12]
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	6a1b      	ldr	r3, [r3, #32]
 8005126:	4a0d      	ldr	r2, [pc, #52]	; (800515c <HAL_TIM_Base_Stop_IT+0x54>)
 8005128:	4013      	ands	r3, r2
 800512a:	d10d      	bne.n	8005148 <HAL_TIM_Base_Stop_IT+0x40>
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	6a1b      	ldr	r3, [r3, #32]
 8005132:	4a0b      	ldr	r2, [pc, #44]	; (8005160 <HAL_TIM_Base_Stop_IT+0x58>)
 8005134:	4013      	ands	r3, r2
 8005136:	d107      	bne.n	8005148 <HAL_TIM_Base_Stop_IT+0x40>
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	681a      	ldr	r2, [r3, #0]
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	681b      	ldr	r3, [r3, #0]
 8005142:	2101      	movs	r1, #1
 8005144:	438a      	bics	r2, r1
 8005146:	601a      	str	r2, [r3, #0]
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	223d      	movs	r2, #61	; 0x3d
 800514c:	2101      	movs	r1, #1
 800514e:	5499      	strb	r1, [r3, r2]
 8005150:	2300      	movs	r3, #0
 8005152:	0018      	movs	r0, r3
 8005154:	46bd      	mov	sp, r7
 8005156:	b002      	add	sp, #8
 8005158:	bd80      	pop	{r7, pc}
 800515a:	46c0      	nop			; (mov r8, r8)
 800515c:	00001111 	.word	0x00001111
 8005160:	00000444 	.word	0x00000444

08005164 <HAL_TIM_IRQHandler>:
 8005164:	b580      	push	{r7, lr}
 8005166:	b082      	sub	sp, #8
 8005168:	af00      	add	r7, sp, #0
 800516a:	6078      	str	r0, [r7, #4]
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	691b      	ldr	r3, [r3, #16]
 8005172:	2202      	movs	r2, #2
 8005174:	4013      	ands	r3, r2
 8005176:	2b02      	cmp	r3, #2
 8005178:	d124      	bne.n	80051c4 <HAL_TIM_IRQHandler+0x60>
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	68db      	ldr	r3, [r3, #12]
 8005180:	2202      	movs	r2, #2
 8005182:	4013      	ands	r3, r2
 8005184:	2b02      	cmp	r3, #2
 8005186:	d11d      	bne.n	80051c4 <HAL_TIM_IRQHandler+0x60>
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	681b      	ldr	r3, [r3, #0]
 800518c:	2203      	movs	r2, #3
 800518e:	4252      	negs	r2, r2
 8005190:	611a      	str	r2, [r3, #16]
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	2201      	movs	r2, #1
 8005196:	771a      	strb	r2, [r3, #28]
 8005198:	687b      	ldr	r3, [r7, #4]
 800519a:	681b      	ldr	r3, [r3, #0]
 800519c:	699b      	ldr	r3, [r3, #24]
 800519e:	2203      	movs	r2, #3
 80051a0:	4013      	ands	r3, r2
 80051a2:	d004      	beq.n	80051ae <HAL_TIM_IRQHandler+0x4a>
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	0018      	movs	r0, r3
 80051a8:	f000 f8fa 	bl	80053a0 <HAL_TIM_IC_CaptureCallback>
 80051ac:	e007      	b.n	80051be <HAL_TIM_IRQHandler+0x5a>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	0018      	movs	r0, r3
 80051b2:	f000 f8ed 	bl	8005390 <HAL_TIM_OC_DelayElapsedCallback>
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	0018      	movs	r0, r3
 80051ba:	f000 f8f9 	bl	80053b0 <HAL_TIM_PWM_PulseFinishedCallback>
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	2200      	movs	r2, #0
 80051c2:	771a      	strb	r2, [r3, #28]
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	691b      	ldr	r3, [r3, #16]
 80051ca:	2204      	movs	r2, #4
 80051cc:	4013      	ands	r3, r2
 80051ce:	2b04      	cmp	r3, #4
 80051d0:	d125      	bne.n	800521e <HAL_TIM_IRQHandler+0xba>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	681b      	ldr	r3, [r3, #0]
 80051d6:	68db      	ldr	r3, [r3, #12]
 80051d8:	2204      	movs	r2, #4
 80051da:	4013      	ands	r3, r2
 80051dc:	2b04      	cmp	r3, #4
 80051de:	d11e      	bne.n	800521e <HAL_TIM_IRQHandler+0xba>
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	2205      	movs	r2, #5
 80051e6:	4252      	negs	r2, r2
 80051e8:	611a      	str	r2, [r3, #16]
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	2202      	movs	r2, #2
 80051ee:	771a      	strb	r2, [r3, #28]
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	699a      	ldr	r2, [r3, #24]
 80051f6:	23c0      	movs	r3, #192	; 0xc0
 80051f8:	009b      	lsls	r3, r3, #2
 80051fa:	4013      	ands	r3, r2
 80051fc:	d004      	beq.n	8005208 <HAL_TIM_IRQHandler+0xa4>
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	0018      	movs	r0, r3
 8005202:	f000 f8cd 	bl	80053a0 <HAL_TIM_IC_CaptureCallback>
 8005206:	e007      	b.n	8005218 <HAL_TIM_IRQHandler+0xb4>
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	0018      	movs	r0, r3
 800520c:	f000 f8c0 	bl	8005390 <HAL_TIM_OC_DelayElapsedCallback>
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	0018      	movs	r0, r3
 8005214:	f000 f8cc 	bl	80053b0 <HAL_TIM_PWM_PulseFinishedCallback>
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	2200      	movs	r2, #0
 800521c:	771a      	strb	r2, [r3, #28]
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	691b      	ldr	r3, [r3, #16]
 8005224:	2208      	movs	r2, #8
 8005226:	4013      	ands	r3, r2
 8005228:	2b08      	cmp	r3, #8
 800522a:	d124      	bne.n	8005276 <HAL_TIM_IRQHandler+0x112>
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	68db      	ldr	r3, [r3, #12]
 8005232:	2208      	movs	r2, #8
 8005234:	4013      	ands	r3, r2
 8005236:	2b08      	cmp	r3, #8
 8005238:	d11d      	bne.n	8005276 <HAL_TIM_IRQHandler+0x112>
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	2209      	movs	r2, #9
 8005240:	4252      	negs	r2, r2
 8005242:	611a      	str	r2, [r3, #16]
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	2204      	movs	r2, #4
 8005248:	771a      	strb	r2, [r3, #28]
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	69db      	ldr	r3, [r3, #28]
 8005250:	2203      	movs	r2, #3
 8005252:	4013      	ands	r3, r2
 8005254:	d004      	beq.n	8005260 <HAL_TIM_IRQHandler+0xfc>
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	0018      	movs	r0, r3
 800525a:	f000 f8a1 	bl	80053a0 <HAL_TIM_IC_CaptureCallback>
 800525e:	e007      	b.n	8005270 <HAL_TIM_IRQHandler+0x10c>
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	0018      	movs	r0, r3
 8005264:	f000 f894 	bl	8005390 <HAL_TIM_OC_DelayElapsedCallback>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	0018      	movs	r0, r3
 800526c:	f000 f8a0 	bl	80053b0 <HAL_TIM_PWM_PulseFinishedCallback>
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	2200      	movs	r2, #0
 8005274:	771a      	strb	r2, [r3, #28]
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	691b      	ldr	r3, [r3, #16]
 800527c:	2210      	movs	r2, #16
 800527e:	4013      	ands	r3, r2
 8005280:	2b10      	cmp	r3, #16
 8005282:	d125      	bne.n	80052d0 <HAL_TIM_IRQHandler+0x16c>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	681b      	ldr	r3, [r3, #0]
 8005288:	68db      	ldr	r3, [r3, #12]
 800528a:	2210      	movs	r2, #16
 800528c:	4013      	ands	r3, r2
 800528e:	2b10      	cmp	r3, #16
 8005290:	d11e      	bne.n	80052d0 <HAL_TIM_IRQHandler+0x16c>
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	2211      	movs	r2, #17
 8005298:	4252      	negs	r2, r2
 800529a:	611a      	str	r2, [r3, #16]
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	2208      	movs	r2, #8
 80052a0:	771a      	strb	r2, [r3, #28]
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	69da      	ldr	r2, [r3, #28]
 80052a8:	23c0      	movs	r3, #192	; 0xc0
 80052aa:	009b      	lsls	r3, r3, #2
 80052ac:	4013      	ands	r3, r2
 80052ae:	d004      	beq.n	80052ba <HAL_TIM_IRQHandler+0x156>
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	0018      	movs	r0, r3
 80052b4:	f000 f874 	bl	80053a0 <HAL_TIM_IC_CaptureCallback>
 80052b8:	e007      	b.n	80052ca <HAL_TIM_IRQHandler+0x166>
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	0018      	movs	r0, r3
 80052be:	f000 f867 	bl	8005390 <HAL_TIM_OC_DelayElapsedCallback>
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	0018      	movs	r0, r3
 80052c6:	f000 f873 	bl	80053b0 <HAL_TIM_PWM_PulseFinishedCallback>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	2200      	movs	r2, #0
 80052ce:	771a      	strb	r2, [r3, #28]
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	691b      	ldr	r3, [r3, #16]
 80052d6:	2201      	movs	r2, #1
 80052d8:	4013      	ands	r3, r2
 80052da:	2b01      	cmp	r3, #1
 80052dc:	d10f      	bne.n	80052fe <HAL_TIM_IRQHandler+0x19a>
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	68db      	ldr	r3, [r3, #12]
 80052e4:	2201      	movs	r2, #1
 80052e6:	4013      	ands	r3, r2
 80052e8:	2b01      	cmp	r3, #1
 80052ea:	d108      	bne.n	80052fe <HAL_TIM_IRQHandler+0x19a>
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	681b      	ldr	r3, [r3, #0]
 80052f0:	2202      	movs	r2, #2
 80052f2:	4252      	negs	r2, r2
 80052f4:	611a      	str	r2, [r3, #16]
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	0018      	movs	r0, r3
 80052fa:	f7fb fd8b 	bl	8000e14 <HAL_TIM_PeriodElapsedCallback>
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	691b      	ldr	r3, [r3, #16]
 8005304:	2280      	movs	r2, #128	; 0x80
 8005306:	4013      	ands	r3, r2
 8005308:	2b80      	cmp	r3, #128	; 0x80
 800530a:	d10f      	bne.n	800532c <HAL_TIM_IRQHandler+0x1c8>
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	68db      	ldr	r3, [r3, #12]
 8005312:	2280      	movs	r2, #128	; 0x80
 8005314:	4013      	ands	r3, r2
 8005316:	2b80      	cmp	r3, #128	; 0x80
 8005318:	d108      	bne.n	800532c <HAL_TIM_IRQHandler+0x1c8>
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	681b      	ldr	r3, [r3, #0]
 800531e:	2281      	movs	r2, #129	; 0x81
 8005320:	4252      	negs	r2, r2
 8005322:	611a      	str	r2, [r3, #16]
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	0018      	movs	r0, r3
 8005328:	f000 f8d0 	bl	80054cc <HAL_TIMEx_BreakCallback>
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	691b      	ldr	r3, [r3, #16]
 8005332:	2240      	movs	r2, #64	; 0x40
 8005334:	4013      	ands	r3, r2
 8005336:	2b40      	cmp	r3, #64	; 0x40
 8005338:	d10f      	bne.n	800535a <HAL_TIM_IRQHandler+0x1f6>
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	681b      	ldr	r3, [r3, #0]
 800533e:	68db      	ldr	r3, [r3, #12]
 8005340:	2240      	movs	r2, #64	; 0x40
 8005342:	4013      	ands	r3, r2
 8005344:	2b40      	cmp	r3, #64	; 0x40
 8005346:	d108      	bne.n	800535a <HAL_TIM_IRQHandler+0x1f6>
 8005348:	687b      	ldr	r3, [r7, #4]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	2241      	movs	r2, #65	; 0x41
 800534e:	4252      	negs	r2, r2
 8005350:	611a      	str	r2, [r3, #16]
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	0018      	movs	r0, r3
 8005356:	f000 f833 	bl	80053c0 <HAL_TIM_TriggerCallback>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	681b      	ldr	r3, [r3, #0]
 800535e:	691b      	ldr	r3, [r3, #16]
 8005360:	2220      	movs	r2, #32
 8005362:	4013      	ands	r3, r2
 8005364:	2b20      	cmp	r3, #32
 8005366:	d10f      	bne.n	8005388 <HAL_TIM_IRQHandler+0x224>
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	68db      	ldr	r3, [r3, #12]
 800536e:	2220      	movs	r2, #32
 8005370:	4013      	ands	r3, r2
 8005372:	2b20      	cmp	r3, #32
 8005374:	d108      	bne.n	8005388 <HAL_TIM_IRQHandler+0x224>
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	2221      	movs	r2, #33	; 0x21
 800537c:	4252      	negs	r2, r2
 800537e:	611a      	str	r2, [r3, #16]
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	0018      	movs	r0, r3
 8005384:	f000 f89a 	bl	80054bc <HAL_TIMEx_CommutCallback>
 8005388:	46c0      	nop			; (mov r8, r8)
 800538a:	46bd      	mov	sp, r7
 800538c:	b002      	add	sp, #8
 800538e:	bd80      	pop	{r7, pc}

08005390 <HAL_TIM_OC_DelayElapsedCallback>:
 8005390:	b580      	push	{r7, lr}
 8005392:	b082      	sub	sp, #8
 8005394:	af00      	add	r7, sp, #0
 8005396:	6078      	str	r0, [r7, #4]
 8005398:	46c0      	nop			; (mov r8, r8)
 800539a:	46bd      	mov	sp, r7
 800539c:	b002      	add	sp, #8
 800539e:	bd80      	pop	{r7, pc}

080053a0 <HAL_TIM_IC_CaptureCallback>:
 80053a0:	b580      	push	{r7, lr}
 80053a2:	b082      	sub	sp, #8
 80053a4:	af00      	add	r7, sp, #0
 80053a6:	6078      	str	r0, [r7, #4]
 80053a8:	46c0      	nop			; (mov r8, r8)
 80053aa:	46bd      	mov	sp, r7
 80053ac:	b002      	add	sp, #8
 80053ae:	bd80      	pop	{r7, pc}

080053b0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80053b0:	b580      	push	{r7, lr}
 80053b2:	b082      	sub	sp, #8
 80053b4:	af00      	add	r7, sp, #0
 80053b6:	6078      	str	r0, [r7, #4]
 80053b8:	46c0      	nop			; (mov r8, r8)
 80053ba:	46bd      	mov	sp, r7
 80053bc:	b002      	add	sp, #8
 80053be:	bd80      	pop	{r7, pc}

080053c0 <HAL_TIM_TriggerCallback>:
 80053c0:	b580      	push	{r7, lr}
 80053c2:	b082      	sub	sp, #8
 80053c4:	af00      	add	r7, sp, #0
 80053c6:	6078      	str	r0, [r7, #4]
 80053c8:	46c0      	nop			; (mov r8, r8)
 80053ca:	46bd      	mov	sp, r7
 80053cc:	b002      	add	sp, #8
 80053ce:	bd80      	pop	{r7, pc}

080053d0 <TIM_Base_SetConfig>:
 80053d0:	b580      	push	{r7, lr}
 80053d2:	b084      	sub	sp, #16
 80053d4:	af00      	add	r7, sp, #0
 80053d6:	6078      	str	r0, [r7, #4]
 80053d8:	6039      	str	r1, [r7, #0]
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	60fb      	str	r3, [r7, #12]
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	4a2f      	ldr	r2, [pc, #188]	; (80054a0 <TIM_Base_SetConfig+0xd0>)
 80053e4:	4293      	cmp	r3, r2
 80053e6:	d003      	beq.n	80053f0 <TIM_Base_SetConfig+0x20>
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	4a2e      	ldr	r2, [pc, #184]	; (80054a4 <TIM_Base_SetConfig+0xd4>)
 80053ec:	4293      	cmp	r3, r2
 80053ee:	d108      	bne.n	8005402 <TIM_Base_SetConfig+0x32>
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	2270      	movs	r2, #112	; 0x70
 80053f4:	4393      	bics	r3, r2
 80053f6:	60fb      	str	r3, [r7, #12]
 80053f8:	683b      	ldr	r3, [r7, #0]
 80053fa:	685b      	ldr	r3, [r3, #4]
 80053fc:	68fa      	ldr	r2, [r7, #12]
 80053fe:	4313      	orrs	r3, r2
 8005400:	60fb      	str	r3, [r7, #12]
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	4a26      	ldr	r2, [pc, #152]	; (80054a0 <TIM_Base_SetConfig+0xd0>)
 8005406:	4293      	cmp	r3, r2
 8005408:	d013      	beq.n	8005432 <TIM_Base_SetConfig+0x62>
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	4a25      	ldr	r2, [pc, #148]	; (80054a4 <TIM_Base_SetConfig+0xd4>)
 800540e:	4293      	cmp	r3, r2
 8005410:	d00f      	beq.n	8005432 <TIM_Base_SetConfig+0x62>
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	4a24      	ldr	r2, [pc, #144]	; (80054a8 <TIM_Base_SetConfig+0xd8>)
 8005416:	4293      	cmp	r3, r2
 8005418:	d00b      	beq.n	8005432 <TIM_Base_SetConfig+0x62>
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	4a23      	ldr	r2, [pc, #140]	; (80054ac <TIM_Base_SetConfig+0xdc>)
 800541e:	4293      	cmp	r3, r2
 8005420:	d007      	beq.n	8005432 <TIM_Base_SetConfig+0x62>
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	4a22      	ldr	r2, [pc, #136]	; (80054b0 <TIM_Base_SetConfig+0xe0>)
 8005426:	4293      	cmp	r3, r2
 8005428:	d003      	beq.n	8005432 <TIM_Base_SetConfig+0x62>
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	4a21      	ldr	r2, [pc, #132]	; (80054b4 <TIM_Base_SetConfig+0xe4>)
 800542e:	4293      	cmp	r3, r2
 8005430:	d108      	bne.n	8005444 <TIM_Base_SetConfig+0x74>
 8005432:	68fb      	ldr	r3, [r7, #12]
 8005434:	4a20      	ldr	r2, [pc, #128]	; (80054b8 <TIM_Base_SetConfig+0xe8>)
 8005436:	4013      	ands	r3, r2
 8005438:	60fb      	str	r3, [r7, #12]
 800543a:	683b      	ldr	r3, [r7, #0]
 800543c:	68db      	ldr	r3, [r3, #12]
 800543e:	68fa      	ldr	r2, [r7, #12]
 8005440:	4313      	orrs	r3, r2
 8005442:	60fb      	str	r3, [r7, #12]
 8005444:	68fb      	ldr	r3, [r7, #12]
 8005446:	2280      	movs	r2, #128	; 0x80
 8005448:	4393      	bics	r3, r2
 800544a:	001a      	movs	r2, r3
 800544c:	683b      	ldr	r3, [r7, #0]
 800544e:	695b      	ldr	r3, [r3, #20]
 8005450:	4313      	orrs	r3, r2
 8005452:	60fb      	str	r3, [r7, #12]
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	68fa      	ldr	r2, [r7, #12]
 8005458:	601a      	str	r2, [r3, #0]
 800545a:	683b      	ldr	r3, [r7, #0]
 800545c:	689a      	ldr	r2, [r3, #8]
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	62da      	str	r2, [r3, #44]	; 0x2c
 8005462:	683b      	ldr	r3, [r7, #0]
 8005464:	681a      	ldr	r2, [r3, #0]
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	629a      	str	r2, [r3, #40]	; 0x28
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	4a0c      	ldr	r2, [pc, #48]	; (80054a0 <TIM_Base_SetConfig+0xd0>)
 800546e:	4293      	cmp	r3, r2
 8005470:	d00b      	beq.n	800548a <TIM_Base_SetConfig+0xba>
 8005472:	687b      	ldr	r3, [r7, #4]
 8005474:	4a0d      	ldr	r2, [pc, #52]	; (80054ac <TIM_Base_SetConfig+0xdc>)
 8005476:	4293      	cmp	r3, r2
 8005478:	d007      	beq.n	800548a <TIM_Base_SetConfig+0xba>
 800547a:	687b      	ldr	r3, [r7, #4]
 800547c:	4a0c      	ldr	r2, [pc, #48]	; (80054b0 <TIM_Base_SetConfig+0xe0>)
 800547e:	4293      	cmp	r3, r2
 8005480:	d003      	beq.n	800548a <TIM_Base_SetConfig+0xba>
 8005482:	687b      	ldr	r3, [r7, #4]
 8005484:	4a0b      	ldr	r2, [pc, #44]	; (80054b4 <TIM_Base_SetConfig+0xe4>)
 8005486:	4293      	cmp	r3, r2
 8005488:	d103      	bne.n	8005492 <TIM_Base_SetConfig+0xc2>
 800548a:	683b      	ldr	r3, [r7, #0]
 800548c:	691a      	ldr	r2, [r3, #16]
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	631a      	str	r2, [r3, #48]	; 0x30
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	2201      	movs	r2, #1
 8005496:	615a      	str	r2, [r3, #20]
 8005498:	46c0      	nop			; (mov r8, r8)
 800549a:	46bd      	mov	sp, r7
 800549c:	b004      	add	sp, #16
 800549e:	bd80      	pop	{r7, pc}
 80054a0:	40012c00 	.word	0x40012c00
 80054a4:	40000400 	.word	0x40000400
 80054a8:	40002000 	.word	0x40002000
 80054ac:	40014000 	.word	0x40014000
 80054b0:	40014400 	.word	0x40014400
 80054b4:	40014800 	.word	0x40014800
 80054b8:	fffffcff 	.word	0xfffffcff

080054bc <HAL_TIMEx_CommutCallback>:
 80054bc:	b580      	push	{r7, lr}
 80054be:	b082      	sub	sp, #8
 80054c0:	af00      	add	r7, sp, #0
 80054c2:	6078      	str	r0, [r7, #4]
 80054c4:	46c0      	nop			; (mov r8, r8)
 80054c6:	46bd      	mov	sp, r7
 80054c8:	b002      	add	sp, #8
 80054ca:	bd80      	pop	{r7, pc}

080054cc <HAL_TIMEx_BreakCallback>:
 80054cc:	b580      	push	{r7, lr}
 80054ce:	b082      	sub	sp, #8
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	6078      	str	r0, [r7, #4]
 80054d4:	46c0      	nop			; (mov r8, r8)
 80054d6:	46bd      	mov	sp, r7
 80054d8:	b002      	add	sp, #8
 80054da:	bd80      	pop	{r7, pc}

080054dc <HAL_UART_Init>:
 80054dc:	b580      	push	{r7, lr}
 80054de:	b082      	sub	sp, #8
 80054e0:	af00      	add	r7, sp, #0
 80054e2:	6078      	str	r0, [r7, #4]
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	2b00      	cmp	r3, #0
 80054e8:	d101      	bne.n	80054ee <HAL_UART_Init+0x12>
 80054ea:	2301      	movs	r3, #1
 80054ec:	e044      	b.n	8005578 <HAL_UART_Init+0x9c>
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80054f2:	2b00      	cmp	r3, #0
 80054f4:	d107      	bne.n	8005506 <HAL_UART_Init+0x2a>
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	2278      	movs	r2, #120	; 0x78
 80054fa:	2100      	movs	r1, #0
 80054fc:	5499      	strb	r1, [r3, r2]
 80054fe:	687b      	ldr	r3, [r7, #4]
 8005500:	0018      	movs	r0, r3
 8005502:	f7fd fcc1 	bl	8002e88 <HAL_UART_MspInit>
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	2224      	movs	r2, #36	; 0x24
 800550a:	67da      	str	r2, [r3, #124]	; 0x7c
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	681b      	ldr	r3, [r3, #0]
 8005510:	681a      	ldr	r2, [r3, #0]
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	681b      	ldr	r3, [r3, #0]
 8005516:	2101      	movs	r1, #1
 8005518:	438a      	bics	r2, r1
 800551a:	601a      	str	r2, [r3, #0]
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	0018      	movs	r0, r3
 8005520:	f000 fc0c 	bl	8005d3c <UART_SetConfig>
 8005524:	0003      	movs	r3, r0
 8005526:	2b01      	cmp	r3, #1
 8005528:	d101      	bne.n	800552e <HAL_UART_Init+0x52>
 800552a:	2301      	movs	r3, #1
 800552c:	e024      	b.n	8005578 <HAL_UART_Init+0x9c>
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005532:	2b00      	cmp	r3, #0
 8005534:	d003      	beq.n	800553e <HAL_UART_Init+0x62>
 8005536:	687b      	ldr	r3, [r7, #4]
 8005538:	0018      	movs	r0, r3
 800553a:	f000 fd3f 	bl	8005fbc <UART_AdvFeatureConfig>
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	681b      	ldr	r3, [r3, #0]
 8005542:	685a      	ldr	r2, [r3, #4]
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	490d      	ldr	r1, [pc, #52]	; (8005580 <HAL_UART_Init+0xa4>)
 800554a:	400a      	ands	r2, r1
 800554c:	605a      	str	r2, [r3, #4]
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	689a      	ldr	r2, [r3, #8]
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	2108      	movs	r1, #8
 800555a:	438a      	bics	r2, r1
 800555c:	609a      	str	r2, [r3, #8]
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	681a      	ldr	r2, [r3, #0]
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	2101      	movs	r1, #1
 800556a:	430a      	orrs	r2, r1
 800556c:	601a      	str	r2, [r3, #0]
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	0018      	movs	r0, r3
 8005572:	f000 fdd7 	bl	8006124 <UART_CheckIdleState>
 8005576:	0003      	movs	r3, r0
 8005578:	0018      	movs	r0, r3
 800557a:	46bd      	mov	sp, r7
 800557c:	b002      	add	sp, #8
 800557e:	bd80      	pop	{r7, pc}
 8005580:	fffff7ff 	.word	0xfffff7ff

08005584 <HAL_UART_Transmit>:
 8005584:	b580      	push	{r7, lr}
 8005586:	b08a      	sub	sp, #40	; 0x28
 8005588:	af02      	add	r7, sp, #8
 800558a:	60f8      	str	r0, [r7, #12]
 800558c:	60b9      	str	r1, [r7, #8]
 800558e:	603b      	str	r3, [r7, #0]
 8005590:	1dbb      	adds	r3, r7, #6
 8005592:	801a      	strh	r2, [r3, #0]
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005598:	2b20      	cmp	r3, #32
 800559a:	d000      	beq.n	800559e <HAL_UART_Transmit+0x1a>
 800559c:	e08d      	b.n	80056ba <HAL_UART_Transmit+0x136>
 800559e:	68bb      	ldr	r3, [r7, #8]
 80055a0:	2b00      	cmp	r3, #0
 80055a2:	d003      	beq.n	80055ac <HAL_UART_Transmit+0x28>
 80055a4:	1dbb      	adds	r3, r7, #6
 80055a6:	881b      	ldrh	r3, [r3, #0]
 80055a8:	2b00      	cmp	r3, #0
 80055aa:	d101      	bne.n	80055b0 <HAL_UART_Transmit+0x2c>
 80055ac:	2301      	movs	r3, #1
 80055ae:	e085      	b.n	80056bc <HAL_UART_Transmit+0x138>
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	689a      	ldr	r2, [r3, #8]
 80055b4:	2380      	movs	r3, #128	; 0x80
 80055b6:	015b      	lsls	r3, r3, #5
 80055b8:	429a      	cmp	r2, r3
 80055ba:	d109      	bne.n	80055d0 <HAL_UART_Transmit+0x4c>
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	691b      	ldr	r3, [r3, #16]
 80055c0:	2b00      	cmp	r3, #0
 80055c2:	d105      	bne.n	80055d0 <HAL_UART_Transmit+0x4c>
 80055c4:	68bb      	ldr	r3, [r7, #8]
 80055c6:	2201      	movs	r2, #1
 80055c8:	4013      	ands	r3, r2
 80055ca:	d001      	beq.n	80055d0 <HAL_UART_Transmit+0x4c>
 80055cc:	2301      	movs	r3, #1
 80055ce:	e075      	b.n	80056bc <HAL_UART_Transmit+0x138>
 80055d0:	68fb      	ldr	r3, [r7, #12]
 80055d2:	2284      	movs	r2, #132	; 0x84
 80055d4:	2100      	movs	r1, #0
 80055d6:	5099      	str	r1, [r3, r2]
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	2221      	movs	r2, #33	; 0x21
 80055dc:	67da      	str	r2, [r3, #124]	; 0x7c
 80055de:	f7fd fdf1 	bl	80031c4 <HAL_GetTick>
 80055e2:	0003      	movs	r3, r0
 80055e4:	617b      	str	r3, [r7, #20]
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	1dba      	adds	r2, r7, #6
 80055ea:	2150      	movs	r1, #80	; 0x50
 80055ec:	8812      	ldrh	r2, [r2, #0]
 80055ee:	525a      	strh	r2, [r3, r1]
 80055f0:	68fb      	ldr	r3, [r7, #12]
 80055f2:	1dba      	adds	r2, r7, #6
 80055f4:	2152      	movs	r1, #82	; 0x52
 80055f6:	8812      	ldrh	r2, [r2, #0]
 80055f8:	525a      	strh	r2, [r3, r1]
 80055fa:	68fb      	ldr	r3, [r7, #12]
 80055fc:	689a      	ldr	r2, [r3, #8]
 80055fe:	2380      	movs	r3, #128	; 0x80
 8005600:	015b      	lsls	r3, r3, #5
 8005602:	429a      	cmp	r2, r3
 8005604:	d108      	bne.n	8005618 <HAL_UART_Transmit+0x94>
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	691b      	ldr	r3, [r3, #16]
 800560a:	2b00      	cmp	r3, #0
 800560c:	d104      	bne.n	8005618 <HAL_UART_Transmit+0x94>
 800560e:	2300      	movs	r3, #0
 8005610:	61fb      	str	r3, [r7, #28]
 8005612:	68bb      	ldr	r3, [r7, #8]
 8005614:	61bb      	str	r3, [r7, #24]
 8005616:	e003      	b.n	8005620 <HAL_UART_Transmit+0x9c>
 8005618:	68bb      	ldr	r3, [r7, #8]
 800561a:	61fb      	str	r3, [r7, #28]
 800561c:	2300      	movs	r3, #0
 800561e:	61bb      	str	r3, [r7, #24]
 8005620:	e030      	b.n	8005684 <HAL_UART_Transmit+0x100>
 8005622:	697a      	ldr	r2, [r7, #20]
 8005624:	68f8      	ldr	r0, [r7, #12]
 8005626:	683b      	ldr	r3, [r7, #0]
 8005628:	9300      	str	r3, [sp, #0]
 800562a:	0013      	movs	r3, r2
 800562c:	2200      	movs	r2, #0
 800562e:	2180      	movs	r1, #128	; 0x80
 8005630:	f000 fe20 	bl	8006274 <UART_WaitOnFlagUntilTimeout>
 8005634:	1e03      	subs	r3, r0, #0
 8005636:	d004      	beq.n	8005642 <HAL_UART_Transmit+0xbe>
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	2220      	movs	r2, #32
 800563c:	67da      	str	r2, [r3, #124]	; 0x7c
 800563e:	2303      	movs	r3, #3
 8005640:	e03c      	b.n	80056bc <HAL_UART_Transmit+0x138>
 8005642:	69fb      	ldr	r3, [r7, #28]
 8005644:	2b00      	cmp	r3, #0
 8005646:	d10b      	bne.n	8005660 <HAL_UART_Transmit+0xdc>
 8005648:	69bb      	ldr	r3, [r7, #24]
 800564a:	881a      	ldrh	r2, [r3, #0]
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	05d2      	lsls	r2, r2, #23
 8005652:	0dd2      	lsrs	r2, r2, #23
 8005654:	b292      	uxth	r2, r2
 8005656:	851a      	strh	r2, [r3, #40]	; 0x28
 8005658:	69bb      	ldr	r3, [r7, #24]
 800565a:	3302      	adds	r3, #2
 800565c:	61bb      	str	r3, [r7, #24]
 800565e:	e008      	b.n	8005672 <HAL_UART_Transmit+0xee>
 8005660:	69fb      	ldr	r3, [r7, #28]
 8005662:	781a      	ldrb	r2, [r3, #0]
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	b292      	uxth	r2, r2
 800566a:	851a      	strh	r2, [r3, #40]	; 0x28
 800566c:	69fb      	ldr	r3, [r7, #28]
 800566e:	3301      	adds	r3, #1
 8005670:	61fb      	str	r3, [r7, #28]
 8005672:	68fb      	ldr	r3, [r7, #12]
 8005674:	2252      	movs	r2, #82	; 0x52
 8005676:	5a9b      	ldrh	r3, [r3, r2]
 8005678:	b29b      	uxth	r3, r3
 800567a:	3b01      	subs	r3, #1
 800567c:	b299      	uxth	r1, r3
 800567e:	68fb      	ldr	r3, [r7, #12]
 8005680:	2252      	movs	r2, #82	; 0x52
 8005682:	5299      	strh	r1, [r3, r2]
 8005684:	68fb      	ldr	r3, [r7, #12]
 8005686:	2252      	movs	r2, #82	; 0x52
 8005688:	5a9b      	ldrh	r3, [r3, r2]
 800568a:	b29b      	uxth	r3, r3
 800568c:	2b00      	cmp	r3, #0
 800568e:	d1c8      	bne.n	8005622 <HAL_UART_Transmit+0x9e>
 8005690:	697a      	ldr	r2, [r7, #20]
 8005692:	68f8      	ldr	r0, [r7, #12]
 8005694:	683b      	ldr	r3, [r7, #0]
 8005696:	9300      	str	r3, [sp, #0]
 8005698:	0013      	movs	r3, r2
 800569a:	2200      	movs	r2, #0
 800569c:	2140      	movs	r1, #64	; 0x40
 800569e:	f000 fde9 	bl	8006274 <UART_WaitOnFlagUntilTimeout>
 80056a2:	1e03      	subs	r3, r0, #0
 80056a4:	d004      	beq.n	80056b0 <HAL_UART_Transmit+0x12c>
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	2220      	movs	r2, #32
 80056aa:	67da      	str	r2, [r3, #124]	; 0x7c
 80056ac:	2303      	movs	r3, #3
 80056ae:	e005      	b.n	80056bc <HAL_UART_Transmit+0x138>
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	2220      	movs	r2, #32
 80056b4:	67da      	str	r2, [r3, #124]	; 0x7c
 80056b6:	2300      	movs	r3, #0
 80056b8:	e000      	b.n	80056bc <HAL_UART_Transmit+0x138>
 80056ba:	2302      	movs	r3, #2
 80056bc:	0018      	movs	r0, r3
 80056be:	46bd      	mov	sp, r7
 80056c0:	b008      	add	sp, #32
 80056c2:	bd80      	pop	{r7, pc}

080056c4 <HAL_UART_Receive_IT>:
 80056c4:	b580      	push	{r7, lr}
 80056c6:	b088      	sub	sp, #32
 80056c8:	af00      	add	r7, sp, #0
 80056ca:	60f8      	str	r0, [r7, #12]
 80056cc:	60b9      	str	r1, [r7, #8]
 80056ce:	1dbb      	adds	r3, r7, #6
 80056d0:	801a      	strh	r2, [r3, #0]
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	2280      	movs	r2, #128	; 0x80
 80056d6:	589b      	ldr	r3, [r3, r2]
 80056d8:	2b20      	cmp	r3, #32
 80056da:	d145      	bne.n	8005768 <HAL_UART_Receive_IT+0xa4>
 80056dc:	68bb      	ldr	r3, [r7, #8]
 80056de:	2b00      	cmp	r3, #0
 80056e0:	d003      	beq.n	80056ea <HAL_UART_Receive_IT+0x26>
 80056e2:	1dbb      	adds	r3, r7, #6
 80056e4:	881b      	ldrh	r3, [r3, #0]
 80056e6:	2b00      	cmp	r3, #0
 80056e8:	d101      	bne.n	80056ee <HAL_UART_Receive_IT+0x2a>
 80056ea:	2301      	movs	r3, #1
 80056ec:	e03d      	b.n	800576a <HAL_UART_Receive_IT+0xa6>
 80056ee:	68fb      	ldr	r3, [r7, #12]
 80056f0:	689a      	ldr	r2, [r3, #8]
 80056f2:	2380      	movs	r3, #128	; 0x80
 80056f4:	015b      	lsls	r3, r3, #5
 80056f6:	429a      	cmp	r2, r3
 80056f8:	d109      	bne.n	800570e <HAL_UART_Receive_IT+0x4a>
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	691b      	ldr	r3, [r3, #16]
 80056fe:	2b00      	cmp	r3, #0
 8005700:	d105      	bne.n	800570e <HAL_UART_Receive_IT+0x4a>
 8005702:	68bb      	ldr	r3, [r7, #8]
 8005704:	2201      	movs	r2, #1
 8005706:	4013      	ands	r3, r2
 8005708:	d001      	beq.n	800570e <HAL_UART_Receive_IT+0x4a>
 800570a:	2301      	movs	r3, #1
 800570c:	e02d      	b.n	800576a <HAL_UART_Receive_IT+0xa6>
 800570e:	68fb      	ldr	r3, [r7, #12]
 8005710:	2200      	movs	r2, #0
 8005712:	661a      	str	r2, [r3, #96]	; 0x60
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	685a      	ldr	r2, [r3, #4]
 800571a:	2380      	movs	r3, #128	; 0x80
 800571c:	041b      	lsls	r3, r3, #16
 800571e:	4013      	ands	r3, r2
 8005720:	d019      	beq.n	8005756 <HAL_UART_Receive_IT+0x92>
 8005722:	f3ef 8310 	mrs	r3, PRIMASK
 8005726:	613b      	str	r3, [r7, #16]
 8005728:	693b      	ldr	r3, [r7, #16]
 800572a:	61fb      	str	r3, [r7, #28]
 800572c:	2301      	movs	r3, #1
 800572e:	617b      	str	r3, [r7, #20]
 8005730:	697b      	ldr	r3, [r7, #20]
 8005732:	f383 8810 	msr	PRIMASK, r3
 8005736:	46c0      	nop			; (mov r8, r8)
 8005738:	68fb      	ldr	r3, [r7, #12]
 800573a:	681b      	ldr	r3, [r3, #0]
 800573c:	681a      	ldr	r2, [r3, #0]
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	681b      	ldr	r3, [r3, #0]
 8005742:	2180      	movs	r1, #128	; 0x80
 8005744:	04c9      	lsls	r1, r1, #19
 8005746:	430a      	orrs	r2, r1
 8005748:	601a      	str	r2, [r3, #0]
 800574a:	69fb      	ldr	r3, [r7, #28]
 800574c:	61bb      	str	r3, [r7, #24]
 800574e:	69bb      	ldr	r3, [r7, #24]
 8005750:	f383 8810 	msr	PRIMASK, r3
 8005754:	46c0      	nop			; (mov r8, r8)
 8005756:	1dbb      	adds	r3, r7, #6
 8005758:	881a      	ldrh	r2, [r3, #0]
 800575a:	68b9      	ldr	r1, [r7, #8]
 800575c:	68fb      	ldr	r3, [r7, #12]
 800575e:	0018      	movs	r0, r3
 8005760:	f000 fdf2 	bl	8006348 <UART_Start_Receive_IT>
 8005764:	0003      	movs	r3, r0
 8005766:	e000      	b.n	800576a <HAL_UART_Receive_IT+0xa6>
 8005768:	2302      	movs	r3, #2
 800576a:	0018      	movs	r0, r3
 800576c:	46bd      	mov	sp, r7
 800576e:	b008      	add	sp, #32
 8005770:	bd80      	pop	{r7, pc}
	...

08005774 <HAL_UART_IRQHandler>:
 8005774:	b590      	push	{r4, r7, lr}
 8005776:	b0ab      	sub	sp, #172	; 0xac
 8005778:	af00      	add	r7, sp, #0
 800577a:	6078      	str	r0, [r7, #4]
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	681b      	ldr	r3, [r3, #0]
 8005780:	69db      	ldr	r3, [r3, #28]
 8005782:	22a4      	movs	r2, #164	; 0xa4
 8005784:	18b9      	adds	r1, r7, r2
 8005786:	600b      	str	r3, [r1, #0]
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	681b      	ldr	r3, [r3, #0]
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	20a0      	movs	r0, #160	; 0xa0
 8005790:	1839      	adds	r1, r7, r0
 8005792:	600b      	str	r3, [r1, #0]
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	689b      	ldr	r3, [r3, #8]
 800579a:	219c      	movs	r1, #156	; 0x9c
 800579c:	1879      	adds	r1, r7, r1
 800579e:	600b      	str	r3, [r1, #0]
 80057a0:	0011      	movs	r1, r2
 80057a2:	18bb      	adds	r3, r7, r2
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	4a99      	ldr	r2, [pc, #612]	; (8005a0c <HAL_UART_IRQHandler+0x298>)
 80057a8:	4013      	ands	r3, r2
 80057aa:	2298      	movs	r2, #152	; 0x98
 80057ac:	18bc      	adds	r4, r7, r2
 80057ae:	6023      	str	r3, [r4, #0]
 80057b0:	18bb      	adds	r3, r7, r2
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	2b00      	cmp	r3, #0
 80057b6:	d114      	bne.n	80057e2 <HAL_UART_IRQHandler+0x6e>
 80057b8:	187b      	adds	r3, r7, r1
 80057ba:	681b      	ldr	r3, [r3, #0]
 80057bc:	2220      	movs	r2, #32
 80057be:	4013      	ands	r3, r2
 80057c0:	d00f      	beq.n	80057e2 <HAL_UART_IRQHandler+0x6e>
 80057c2:	183b      	adds	r3, r7, r0
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	2220      	movs	r2, #32
 80057c8:	4013      	ands	r3, r2
 80057ca:	d00a      	beq.n	80057e2 <HAL_UART_IRQHandler+0x6e>
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80057d0:	2b00      	cmp	r3, #0
 80057d2:	d100      	bne.n	80057d6 <HAL_UART_IRQHandler+0x62>
 80057d4:	e286      	b.n	8005ce4 <HAL_UART_IRQHandler+0x570>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80057da:	687a      	ldr	r2, [r7, #4]
 80057dc:	0010      	movs	r0, r2
 80057de:	4798      	blx	r3
 80057e0:	e280      	b.n	8005ce4 <HAL_UART_IRQHandler+0x570>
 80057e2:	2398      	movs	r3, #152	; 0x98
 80057e4:	18fb      	adds	r3, r7, r3
 80057e6:	681b      	ldr	r3, [r3, #0]
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d100      	bne.n	80057ee <HAL_UART_IRQHandler+0x7a>
 80057ec:	e114      	b.n	8005a18 <HAL_UART_IRQHandler+0x2a4>
 80057ee:	239c      	movs	r3, #156	; 0x9c
 80057f0:	18fb      	adds	r3, r7, r3
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	2201      	movs	r2, #1
 80057f6:	4013      	ands	r3, r2
 80057f8:	d106      	bne.n	8005808 <HAL_UART_IRQHandler+0x94>
 80057fa:	23a0      	movs	r3, #160	; 0xa0
 80057fc:	18fb      	adds	r3, r7, r3
 80057fe:	681b      	ldr	r3, [r3, #0]
 8005800:	4a83      	ldr	r2, [pc, #524]	; (8005a10 <HAL_UART_IRQHandler+0x29c>)
 8005802:	4013      	ands	r3, r2
 8005804:	d100      	bne.n	8005808 <HAL_UART_IRQHandler+0x94>
 8005806:	e107      	b.n	8005a18 <HAL_UART_IRQHandler+0x2a4>
 8005808:	23a4      	movs	r3, #164	; 0xa4
 800580a:	18fb      	adds	r3, r7, r3
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	2201      	movs	r2, #1
 8005810:	4013      	ands	r3, r2
 8005812:	d012      	beq.n	800583a <HAL_UART_IRQHandler+0xc6>
 8005814:	23a0      	movs	r3, #160	; 0xa0
 8005816:	18fb      	adds	r3, r7, r3
 8005818:	681a      	ldr	r2, [r3, #0]
 800581a:	2380      	movs	r3, #128	; 0x80
 800581c:	005b      	lsls	r3, r3, #1
 800581e:	4013      	ands	r3, r2
 8005820:	d00b      	beq.n	800583a <HAL_UART_IRQHandler+0xc6>
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	2201      	movs	r2, #1
 8005828:	621a      	str	r2, [r3, #32]
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	2284      	movs	r2, #132	; 0x84
 800582e:	589b      	ldr	r3, [r3, r2]
 8005830:	2201      	movs	r2, #1
 8005832:	431a      	orrs	r2, r3
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	2184      	movs	r1, #132	; 0x84
 8005838:	505a      	str	r2, [r3, r1]
 800583a:	23a4      	movs	r3, #164	; 0xa4
 800583c:	18fb      	adds	r3, r7, r3
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	2202      	movs	r2, #2
 8005842:	4013      	ands	r3, r2
 8005844:	d011      	beq.n	800586a <HAL_UART_IRQHandler+0xf6>
 8005846:	239c      	movs	r3, #156	; 0x9c
 8005848:	18fb      	adds	r3, r7, r3
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	2201      	movs	r2, #1
 800584e:	4013      	ands	r3, r2
 8005850:	d00b      	beq.n	800586a <HAL_UART_IRQHandler+0xf6>
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	2202      	movs	r2, #2
 8005858:	621a      	str	r2, [r3, #32]
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	2284      	movs	r2, #132	; 0x84
 800585e:	589b      	ldr	r3, [r3, r2]
 8005860:	2204      	movs	r2, #4
 8005862:	431a      	orrs	r2, r3
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	2184      	movs	r1, #132	; 0x84
 8005868:	505a      	str	r2, [r3, r1]
 800586a:	23a4      	movs	r3, #164	; 0xa4
 800586c:	18fb      	adds	r3, r7, r3
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	2204      	movs	r2, #4
 8005872:	4013      	ands	r3, r2
 8005874:	d011      	beq.n	800589a <HAL_UART_IRQHandler+0x126>
 8005876:	239c      	movs	r3, #156	; 0x9c
 8005878:	18fb      	adds	r3, r7, r3
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	2201      	movs	r2, #1
 800587e:	4013      	ands	r3, r2
 8005880:	d00b      	beq.n	800589a <HAL_UART_IRQHandler+0x126>
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	2204      	movs	r2, #4
 8005888:	621a      	str	r2, [r3, #32]
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	2284      	movs	r2, #132	; 0x84
 800588e:	589b      	ldr	r3, [r3, r2]
 8005890:	2202      	movs	r2, #2
 8005892:	431a      	orrs	r2, r3
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	2184      	movs	r1, #132	; 0x84
 8005898:	505a      	str	r2, [r3, r1]
 800589a:	23a4      	movs	r3, #164	; 0xa4
 800589c:	18fb      	adds	r3, r7, r3
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	2208      	movs	r2, #8
 80058a2:	4013      	ands	r3, r2
 80058a4:	d017      	beq.n	80058d6 <HAL_UART_IRQHandler+0x162>
 80058a6:	23a0      	movs	r3, #160	; 0xa0
 80058a8:	18fb      	adds	r3, r7, r3
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	2220      	movs	r2, #32
 80058ae:	4013      	ands	r3, r2
 80058b0:	d105      	bne.n	80058be <HAL_UART_IRQHandler+0x14a>
 80058b2:	239c      	movs	r3, #156	; 0x9c
 80058b4:	18fb      	adds	r3, r7, r3
 80058b6:	681b      	ldr	r3, [r3, #0]
 80058b8:	2201      	movs	r2, #1
 80058ba:	4013      	ands	r3, r2
 80058bc:	d00b      	beq.n	80058d6 <HAL_UART_IRQHandler+0x162>
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	681b      	ldr	r3, [r3, #0]
 80058c2:	2208      	movs	r2, #8
 80058c4:	621a      	str	r2, [r3, #32]
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	2284      	movs	r2, #132	; 0x84
 80058ca:	589b      	ldr	r3, [r3, r2]
 80058cc:	2208      	movs	r2, #8
 80058ce:	431a      	orrs	r2, r3
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	2184      	movs	r1, #132	; 0x84
 80058d4:	505a      	str	r2, [r3, r1]
 80058d6:	23a4      	movs	r3, #164	; 0xa4
 80058d8:	18fb      	adds	r3, r7, r3
 80058da:	681a      	ldr	r2, [r3, #0]
 80058dc:	2380      	movs	r3, #128	; 0x80
 80058de:	011b      	lsls	r3, r3, #4
 80058e0:	4013      	ands	r3, r2
 80058e2:	d013      	beq.n	800590c <HAL_UART_IRQHandler+0x198>
 80058e4:	23a0      	movs	r3, #160	; 0xa0
 80058e6:	18fb      	adds	r3, r7, r3
 80058e8:	681a      	ldr	r2, [r3, #0]
 80058ea:	2380      	movs	r3, #128	; 0x80
 80058ec:	04db      	lsls	r3, r3, #19
 80058ee:	4013      	ands	r3, r2
 80058f0:	d00c      	beq.n	800590c <HAL_UART_IRQHandler+0x198>
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	2280      	movs	r2, #128	; 0x80
 80058f8:	0112      	lsls	r2, r2, #4
 80058fa:	621a      	str	r2, [r3, #32]
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	2284      	movs	r2, #132	; 0x84
 8005900:	589b      	ldr	r3, [r3, r2]
 8005902:	2220      	movs	r2, #32
 8005904:	431a      	orrs	r2, r3
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	2184      	movs	r1, #132	; 0x84
 800590a:	505a      	str	r2, [r3, r1]
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	2284      	movs	r2, #132	; 0x84
 8005910:	589b      	ldr	r3, [r3, r2]
 8005912:	2b00      	cmp	r3, #0
 8005914:	d100      	bne.n	8005918 <HAL_UART_IRQHandler+0x1a4>
 8005916:	e1e7      	b.n	8005ce8 <HAL_UART_IRQHandler+0x574>
 8005918:	23a4      	movs	r3, #164	; 0xa4
 800591a:	18fb      	adds	r3, r7, r3
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	2220      	movs	r2, #32
 8005920:	4013      	ands	r3, r2
 8005922:	d00e      	beq.n	8005942 <HAL_UART_IRQHandler+0x1ce>
 8005924:	23a0      	movs	r3, #160	; 0xa0
 8005926:	18fb      	adds	r3, r7, r3
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	2220      	movs	r2, #32
 800592c:	4013      	ands	r3, r2
 800592e:	d008      	beq.n	8005942 <HAL_UART_IRQHandler+0x1ce>
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005934:	2b00      	cmp	r3, #0
 8005936:	d004      	beq.n	8005942 <HAL_UART_IRQHandler+0x1ce>
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800593c:	687a      	ldr	r2, [r7, #4]
 800593e:	0010      	movs	r0, r2
 8005940:	4798      	blx	r3
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	2284      	movs	r2, #132	; 0x84
 8005946:	589b      	ldr	r3, [r3, r2]
 8005948:	2194      	movs	r1, #148	; 0x94
 800594a:	187a      	adds	r2, r7, r1
 800594c:	6013      	str	r3, [r2, #0]
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	681b      	ldr	r3, [r3, #0]
 8005952:	689b      	ldr	r3, [r3, #8]
 8005954:	2240      	movs	r2, #64	; 0x40
 8005956:	4013      	ands	r3, r2
 8005958:	2b40      	cmp	r3, #64	; 0x40
 800595a:	d004      	beq.n	8005966 <HAL_UART_IRQHandler+0x1f2>
 800595c:	187b      	adds	r3, r7, r1
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	2228      	movs	r2, #40	; 0x28
 8005962:	4013      	ands	r3, r2
 8005964:	d047      	beq.n	80059f6 <HAL_UART_IRQHandler+0x282>
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	0018      	movs	r0, r3
 800596a:	f000 fda3 	bl	80064b4 <UART_EndRxTransfer>
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	689b      	ldr	r3, [r3, #8]
 8005974:	2240      	movs	r2, #64	; 0x40
 8005976:	4013      	ands	r3, r2
 8005978:	2b40      	cmp	r3, #64	; 0x40
 800597a:	d137      	bne.n	80059ec <HAL_UART_IRQHandler+0x278>
 800597c:	f3ef 8310 	mrs	r3, PRIMASK
 8005980:	663b      	str	r3, [r7, #96]	; 0x60
 8005982:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8005984:	2090      	movs	r0, #144	; 0x90
 8005986:	183a      	adds	r2, r7, r0
 8005988:	6013      	str	r3, [r2, #0]
 800598a:	2301      	movs	r3, #1
 800598c:	667b      	str	r3, [r7, #100]	; 0x64
 800598e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005990:	f383 8810 	msr	PRIMASK, r3
 8005994:	46c0      	nop			; (mov r8, r8)
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	689a      	ldr	r2, [r3, #8]
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	681b      	ldr	r3, [r3, #0]
 80059a0:	2140      	movs	r1, #64	; 0x40
 80059a2:	438a      	bics	r2, r1
 80059a4:	609a      	str	r2, [r3, #8]
 80059a6:	183b      	adds	r3, r7, r0
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	66bb      	str	r3, [r7, #104]	; 0x68
 80059ac:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80059ae:	f383 8810 	msr	PRIMASK, r3
 80059b2:	46c0      	nop			; (mov r8, r8)
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80059b8:	2b00      	cmp	r3, #0
 80059ba:	d012      	beq.n	80059e2 <HAL_UART_IRQHandler+0x26e>
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80059c0:	4a14      	ldr	r2, [pc, #80]	; (8005a14 <HAL_UART_IRQHandler+0x2a0>)
 80059c2:	635a      	str	r2, [r3, #52]	; 0x34
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80059c8:	0018      	movs	r0, r3
 80059ca:	f7fd fd3f 	bl	800344c <HAL_DMA_Abort_IT>
 80059ce:	1e03      	subs	r3, r0, #0
 80059d0:	d01a      	beq.n	8005a08 <HAL_UART_IRQHandler+0x294>
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80059d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80059dc:	0018      	movs	r0, r3
 80059de:	4790      	blx	r2
 80059e0:	e012      	b.n	8005a08 <HAL_UART_IRQHandler+0x294>
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	0018      	movs	r0, r3
 80059e6:	f000 f995 	bl	8005d14 <HAL_UART_ErrorCallback>
 80059ea:	e00d      	b.n	8005a08 <HAL_UART_IRQHandler+0x294>
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	0018      	movs	r0, r3
 80059f0:	f000 f990 	bl	8005d14 <HAL_UART_ErrorCallback>
 80059f4:	e008      	b.n	8005a08 <HAL_UART_IRQHandler+0x294>
 80059f6:	687b      	ldr	r3, [r7, #4]
 80059f8:	0018      	movs	r0, r3
 80059fa:	f000 f98b 	bl	8005d14 <HAL_UART_ErrorCallback>
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	2284      	movs	r2, #132	; 0x84
 8005a02:	2100      	movs	r1, #0
 8005a04:	5099      	str	r1, [r3, r2]
 8005a06:	e16f      	b.n	8005ce8 <HAL_UART_IRQHandler+0x574>
 8005a08:	46c0      	nop			; (mov r8, r8)
 8005a0a:	e16d      	b.n	8005ce8 <HAL_UART_IRQHandler+0x574>
 8005a0c:	0000080f 	.word	0x0000080f
 8005a10:	04000120 	.word	0x04000120
 8005a14:	0800657d 	.word	0x0800657d
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005a1c:	2b01      	cmp	r3, #1
 8005a1e:	d000      	beq.n	8005a22 <HAL_UART_IRQHandler+0x2ae>
 8005a20:	e139      	b.n	8005c96 <HAL_UART_IRQHandler+0x522>
 8005a22:	23a4      	movs	r3, #164	; 0xa4
 8005a24:	18fb      	adds	r3, r7, r3
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	2210      	movs	r2, #16
 8005a2a:	4013      	ands	r3, r2
 8005a2c:	d100      	bne.n	8005a30 <HAL_UART_IRQHandler+0x2bc>
 8005a2e:	e132      	b.n	8005c96 <HAL_UART_IRQHandler+0x522>
 8005a30:	23a0      	movs	r3, #160	; 0xa0
 8005a32:	18fb      	adds	r3, r7, r3
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	2210      	movs	r2, #16
 8005a38:	4013      	ands	r3, r2
 8005a3a:	d100      	bne.n	8005a3e <HAL_UART_IRQHandler+0x2ca>
 8005a3c:	e12b      	b.n	8005c96 <HAL_UART_IRQHandler+0x522>
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	681b      	ldr	r3, [r3, #0]
 8005a42:	2210      	movs	r2, #16
 8005a44:	621a      	str	r2, [r3, #32]
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	689b      	ldr	r3, [r3, #8]
 8005a4c:	2240      	movs	r2, #64	; 0x40
 8005a4e:	4013      	ands	r3, r2
 8005a50:	2b40      	cmp	r3, #64	; 0x40
 8005a52:	d000      	beq.n	8005a56 <HAL_UART_IRQHandler+0x2e2>
 8005a54:	e09f      	b.n	8005b96 <HAL_UART_IRQHandler+0x422>
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	685a      	ldr	r2, [r3, #4]
 8005a5e:	217e      	movs	r1, #126	; 0x7e
 8005a60:	187b      	adds	r3, r7, r1
 8005a62:	801a      	strh	r2, [r3, #0]
 8005a64:	187b      	adds	r3, r7, r1
 8005a66:	881b      	ldrh	r3, [r3, #0]
 8005a68:	2b00      	cmp	r3, #0
 8005a6a:	d100      	bne.n	8005a6e <HAL_UART_IRQHandler+0x2fa>
 8005a6c:	e13e      	b.n	8005cec <HAL_UART_IRQHandler+0x578>
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	2258      	movs	r2, #88	; 0x58
 8005a72:	5a9b      	ldrh	r3, [r3, r2]
 8005a74:	187a      	adds	r2, r7, r1
 8005a76:	8812      	ldrh	r2, [r2, #0]
 8005a78:	429a      	cmp	r2, r3
 8005a7a:	d300      	bcc.n	8005a7e <HAL_UART_IRQHandler+0x30a>
 8005a7c:	e136      	b.n	8005cec <HAL_UART_IRQHandler+0x578>
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	187a      	adds	r2, r7, r1
 8005a82:	215a      	movs	r1, #90	; 0x5a
 8005a84:	8812      	ldrh	r2, [r2, #0]
 8005a86:	525a      	strh	r2, [r3, r1]
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a8c:	699b      	ldr	r3, [r3, #24]
 8005a8e:	2b20      	cmp	r3, #32
 8005a90:	d06f      	beq.n	8005b72 <HAL_UART_IRQHandler+0x3fe>
 8005a92:	f3ef 8310 	mrs	r3, PRIMASK
 8005a96:	633b      	str	r3, [r7, #48]	; 0x30
 8005a98:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005a9a:	67bb      	str	r3, [r7, #120]	; 0x78
 8005a9c:	2301      	movs	r3, #1
 8005a9e:	637b      	str	r3, [r7, #52]	; 0x34
 8005aa0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005aa2:	f383 8810 	msr	PRIMASK, r3
 8005aa6:	46c0      	nop			; (mov r8, r8)
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	681a      	ldr	r2, [r3, #0]
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	4992      	ldr	r1, [pc, #584]	; (8005cfc <HAL_UART_IRQHandler+0x588>)
 8005ab4:	400a      	ands	r2, r1
 8005ab6:	601a      	str	r2, [r3, #0]
 8005ab8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005aba:	63bb      	str	r3, [r7, #56]	; 0x38
 8005abc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005abe:	f383 8810 	msr	PRIMASK, r3
 8005ac2:	46c0      	nop			; (mov r8, r8)
 8005ac4:	f3ef 8310 	mrs	r3, PRIMASK
 8005ac8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005aca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005acc:	677b      	str	r3, [r7, #116]	; 0x74
 8005ace:	2301      	movs	r3, #1
 8005ad0:	643b      	str	r3, [r7, #64]	; 0x40
 8005ad2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005ad4:	f383 8810 	msr	PRIMASK, r3
 8005ad8:	46c0      	nop			; (mov r8, r8)
 8005ada:	687b      	ldr	r3, [r7, #4]
 8005adc:	681b      	ldr	r3, [r3, #0]
 8005ade:	689a      	ldr	r2, [r3, #8]
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	2101      	movs	r1, #1
 8005ae6:	438a      	bics	r2, r1
 8005ae8:	609a      	str	r2, [r3, #8]
 8005aea:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005aec:	647b      	str	r3, [r7, #68]	; 0x44
 8005aee:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005af0:	f383 8810 	msr	PRIMASK, r3
 8005af4:	46c0      	nop			; (mov r8, r8)
 8005af6:	f3ef 8310 	mrs	r3, PRIMASK
 8005afa:	64bb      	str	r3, [r7, #72]	; 0x48
 8005afc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005afe:	673b      	str	r3, [r7, #112]	; 0x70
 8005b00:	2301      	movs	r3, #1
 8005b02:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005b04:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005b06:	f383 8810 	msr	PRIMASK, r3
 8005b0a:	46c0      	nop			; (mov r8, r8)
 8005b0c:	687b      	ldr	r3, [r7, #4]
 8005b0e:	681b      	ldr	r3, [r3, #0]
 8005b10:	689a      	ldr	r2, [r3, #8]
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	2140      	movs	r1, #64	; 0x40
 8005b18:	438a      	bics	r2, r1
 8005b1a:	609a      	str	r2, [r3, #8]
 8005b1c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005b1e:	653b      	str	r3, [r7, #80]	; 0x50
 8005b20:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8005b22:	f383 8810 	msr	PRIMASK, r3
 8005b26:	46c0      	nop			; (mov r8, r8)
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	2280      	movs	r2, #128	; 0x80
 8005b2c:	2120      	movs	r1, #32
 8005b2e:	5099      	str	r1, [r3, r2]
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	2200      	movs	r2, #0
 8005b34:	661a      	str	r2, [r3, #96]	; 0x60
 8005b36:	f3ef 8310 	mrs	r3, PRIMASK
 8005b3a:	657b      	str	r3, [r7, #84]	; 0x54
 8005b3c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8005b3e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8005b40:	2301      	movs	r3, #1
 8005b42:	65bb      	str	r3, [r7, #88]	; 0x58
 8005b44:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8005b46:	f383 8810 	msr	PRIMASK, r3
 8005b4a:	46c0      	nop			; (mov r8, r8)
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	681b      	ldr	r3, [r3, #0]
 8005b50:	681a      	ldr	r2, [r3, #0]
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	2110      	movs	r1, #16
 8005b58:	438a      	bics	r2, r1
 8005b5a:	601a      	str	r2, [r3, #0]
 8005b5c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8005b5e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8005b60:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8005b62:	f383 8810 	msr	PRIMASK, r3
 8005b66:	46c0      	nop			; (mov r8, r8)
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005b6c:	0018      	movs	r0, r3
 8005b6e:	f7fd fc35 	bl	80033dc <HAL_DMA_Abort>
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	2202      	movs	r2, #2
 8005b76:	665a      	str	r2, [r3, #100]	; 0x64
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	2258      	movs	r2, #88	; 0x58
 8005b7c:	5a9a      	ldrh	r2, [r3, r2]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	215a      	movs	r1, #90	; 0x5a
 8005b82:	5a5b      	ldrh	r3, [r3, r1]
 8005b84:	b29b      	uxth	r3, r3
 8005b86:	1ad3      	subs	r3, r2, r3
 8005b88:	b29a      	uxth	r2, r3
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	0011      	movs	r1, r2
 8005b8e:	0018      	movs	r0, r3
 8005b90:	f000 f8c8 	bl	8005d24 <HAL_UARTEx_RxEventCallback>
 8005b94:	e0aa      	b.n	8005cec <HAL_UART_IRQHandler+0x578>
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	2258      	movs	r2, #88	; 0x58
 8005b9a:	5a99      	ldrh	r1, [r3, r2]
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	225a      	movs	r2, #90	; 0x5a
 8005ba0:	5a9b      	ldrh	r3, [r3, r2]
 8005ba2:	b29a      	uxth	r2, r3
 8005ba4:	208e      	movs	r0, #142	; 0x8e
 8005ba6:	183b      	adds	r3, r7, r0
 8005ba8:	1a8a      	subs	r2, r1, r2
 8005baa:	801a      	strh	r2, [r3, #0]
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	225a      	movs	r2, #90	; 0x5a
 8005bb0:	5a9b      	ldrh	r3, [r3, r2]
 8005bb2:	b29b      	uxth	r3, r3
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d100      	bne.n	8005bba <HAL_UART_IRQHandler+0x446>
 8005bb8:	e09a      	b.n	8005cf0 <HAL_UART_IRQHandler+0x57c>
 8005bba:	183b      	adds	r3, r7, r0
 8005bbc:	881b      	ldrh	r3, [r3, #0]
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d100      	bne.n	8005bc4 <HAL_UART_IRQHandler+0x450>
 8005bc2:	e095      	b.n	8005cf0 <HAL_UART_IRQHandler+0x57c>
 8005bc4:	f3ef 8310 	mrs	r3, PRIMASK
 8005bc8:	60fb      	str	r3, [r7, #12]
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	2488      	movs	r4, #136	; 0x88
 8005bce:	193a      	adds	r2, r7, r4
 8005bd0:	6013      	str	r3, [r2, #0]
 8005bd2:	2301      	movs	r3, #1
 8005bd4:	613b      	str	r3, [r7, #16]
 8005bd6:	693b      	ldr	r3, [r7, #16]
 8005bd8:	f383 8810 	msr	PRIMASK, r3
 8005bdc:	46c0      	nop			; (mov r8, r8)
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	681a      	ldr	r2, [r3, #0]
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	4945      	ldr	r1, [pc, #276]	; (8005d00 <HAL_UART_IRQHandler+0x58c>)
 8005bea:	400a      	ands	r2, r1
 8005bec:	601a      	str	r2, [r3, #0]
 8005bee:	193b      	adds	r3, r7, r4
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	617b      	str	r3, [r7, #20]
 8005bf4:	697b      	ldr	r3, [r7, #20]
 8005bf6:	f383 8810 	msr	PRIMASK, r3
 8005bfa:	46c0      	nop			; (mov r8, r8)
 8005bfc:	f3ef 8310 	mrs	r3, PRIMASK
 8005c00:	61bb      	str	r3, [r7, #24]
 8005c02:	69bb      	ldr	r3, [r7, #24]
 8005c04:	2484      	movs	r4, #132	; 0x84
 8005c06:	193a      	adds	r2, r7, r4
 8005c08:	6013      	str	r3, [r2, #0]
 8005c0a:	2301      	movs	r3, #1
 8005c0c:	61fb      	str	r3, [r7, #28]
 8005c0e:	69fb      	ldr	r3, [r7, #28]
 8005c10:	f383 8810 	msr	PRIMASK, r3
 8005c14:	46c0      	nop			; (mov r8, r8)
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	689a      	ldr	r2, [r3, #8]
 8005c1c:	687b      	ldr	r3, [r7, #4]
 8005c1e:	681b      	ldr	r3, [r3, #0]
 8005c20:	2101      	movs	r1, #1
 8005c22:	438a      	bics	r2, r1
 8005c24:	609a      	str	r2, [r3, #8]
 8005c26:	193b      	adds	r3, r7, r4
 8005c28:	681b      	ldr	r3, [r3, #0]
 8005c2a:	623b      	str	r3, [r7, #32]
 8005c2c:	6a3b      	ldr	r3, [r7, #32]
 8005c2e:	f383 8810 	msr	PRIMASK, r3
 8005c32:	46c0      	nop			; (mov r8, r8)
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	2280      	movs	r2, #128	; 0x80
 8005c38:	2120      	movs	r1, #32
 8005c3a:	5099      	str	r1, [r3, r2]
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	2200      	movs	r2, #0
 8005c40:	661a      	str	r2, [r3, #96]	; 0x60
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	2200      	movs	r2, #0
 8005c46:	669a      	str	r2, [r3, #104]	; 0x68
 8005c48:	f3ef 8310 	mrs	r3, PRIMASK
 8005c4c:	627b      	str	r3, [r7, #36]	; 0x24
 8005c4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005c50:	2480      	movs	r4, #128	; 0x80
 8005c52:	193a      	adds	r2, r7, r4
 8005c54:	6013      	str	r3, [r2, #0]
 8005c56:	2301      	movs	r3, #1
 8005c58:	62bb      	str	r3, [r7, #40]	; 0x28
 8005c5a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005c5c:	f383 8810 	msr	PRIMASK, r3
 8005c60:	46c0      	nop			; (mov r8, r8)
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	681a      	ldr	r2, [r3, #0]
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	681b      	ldr	r3, [r3, #0]
 8005c6c:	2110      	movs	r1, #16
 8005c6e:	438a      	bics	r2, r1
 8005c70:	601a      	str	r2, [r3, #0]
 8005c72:	193b      	adds	r3, r7, r4
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005c78:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005c7a:	f383 8810 	msr	PRIMASK, r3
 8005c7e:	46c0      	nop			; (mov r8, r8)
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	2202      	movs	r2, #2
 8005c84:	665a      	str	r2, [r3, #100]	; 0x64
 8005c86:	183b      	adds	r3, r7, r0
 8005c88:	881a      	ldrh	r2, [r3, #0]
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	0011      	movs	r1, r2
 8005c8e:	0018      	movs	r0, r3
 8005c90:	f000 f848 	bl	8005d24 <HAL_UARTEx_RxEventCallback>
 8005c94:	e02c      	b.n	8005cf0 <HAL_UART_IRQHandler+0x57c>
 8005c96:	23a4      	movs	r3, #164	; 0xa4
 8005c98:	18fb      	adds	r3, r7, r3
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	2280      	movs	r2, #128	; 0x80
 8005c9e:	4013      	ands	r3, r2
 8005ca0:	d00f      	beq.n	8005cc2 <HAL_UART_IRQHandler+0x54e>
 8005ca2:	23a0      	movs	r3, #160	; 0xa0
 8005ca4:	18fb      	adds	r3, r7, r3
 8005ca6:	681b      	ldr	r3, [r3, #0]
 8005ca8:	2280      	movs	r2, #128	; 0x80
 8005caa:	4013      	ands	r3, r2
 8005cac:	d009      	beq.n	8005cc2 <HAL_UART_IRQHandler+0x54e>
 8005cae:	687b      	ldr	r3, [r7, #4]
 8005cb0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005cb2:	2b00      	cmp	r3, #0
 8005cb4:	d01e      	beq.n	8005cf4 <HAL_UART_IRQHandler+0x580>
 8005cb6:	687b      	ldr	r3, [r7, #4]
 8005cb8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005cba:	687a      	ldr	r2, [r7, #4]
 8005cbc:	0010      	movs	r0, r2
 8005cbe:	4798      	blx	r3
 8005cc0:	e018      	b.n	8005cf4 <HAL_UART_IRQHandler+0x580>
 8005cc2:	23a4      	movs	r3, #164	; 0xa4
 8005cc4:	18fb      	adds	r3, r7, r3
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	2240      	movs	r2, #64	; 0x40
 8005cca:	4013      	ands	r3, r2
 8005ccc:	d013      	beq.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005cce:	23a0      	movs	r3, #160	; 0xa0
 8005cd0:	18fb      	adds	r3, r7, r3
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	2240      	movs	r2, #64	; 0x40
 8005cd6:	4013      	ands	r3, r2
 8005cd8:	d00d      	beq.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	0018      	movs	r0, r3
 8005cde:	f000 fc64 	bl	80065aa <UART_EndTransmit_IT>
 8005ce2:	e008      	b.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005ce4:	46c0      	nop			; (mov r8, r8)
 8005ce6:	e006      	b.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005ce8:	46c0      	nop			; (mov r8, r8)
 8005cea:	e004      	b.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005cec:	46c0      	nop			; (mov r8, r8)
 8005cee:	e002      	b.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005cf0:	46c0      	nop			; (mov r8, r8)
 8005cf2:	e000      	b.n	8005cf6 <HAL_UART_IRQHandler+0x582>
 8005cf4:	46c0      	nop			; (mov r8, r8)
 8005cf6:	46bd      	mov	sp, r7
 8005cf8:	b02b      	add	sp, #172	; 0xac
 8005cfa:	bd90      	pop	{r4, r7, pc}
 8005cfc:	fffffeff 	.word	0xfffffeff
 8005d00:	fffffedf 	.word	0xfffffedf

08005d04 <HAL_UART_TxCpltCallback>:
 8005d04:	b580      	push	{r7, lr}
 8005d06:	b082      	sub	sp, #8
 8005d08:	af00      	add	r7, sp, #0
 8005d0a:	6078      	str	r0, [r7, #4]
 8005d0c:	46c0      	nop			; (mov r8, r8)
 8005d0e:	46bd      	mov	sp, r7
 8005d10:	b002      	add	sp, #8
 8005d12:	bd80      	pop	{r7, pc}

08005d14 <HAL_UART_ErrorCallback>:
 8005d14:	b580      	push	{r7, lr}
 8005d16:	b082      	sub	sp, #8
 8005d18:	af00      	add	r7, sp, #0
 8005d1a:	6078      	str	r0, [r7, #4]
 8005d1c:	46c0      	nop			; (mov r8, r8)
 8005d1e:	46bd      	mov	sp, r7
 8005d20:	b002      	add	sp, #8
 8005d22:	bd80      	pop	{r7, pc}

08005d24 <HAL_UARTEx_RxEventCallback>:
 8005d24:	b580      	push	{r7, lr}
 8005d26:	b082      	sub	sp, #8
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	6078      	str	r0, [r7, #4]
 8005d2c:	000a      	movs	r2, r1
 8005d2e:	1cbb      	adds	r3, r7, #2
 8005d30:	801a      	strh	r2, [r3, #0]
 8005d32:	46c0      	nop			; (mov r8, r8)
 8005d34:	46bd      	mov	sp, r7
 8005d36:	b002      	add	sp, #8
 8005d38:	bd80      	pop	{r7, pc}
	...

08005d3c <UART_SetConfig>:
 8005d3c:	b580      	push	{r7, lr}
 8005d3e:	b088      	sub	sp, #32
 8005d40:	af00      	add	r7, sp, #0
 8005d42:	6078      	str	r0, [r7, #4]
 8005d44:	231e      	movs	r3, #30
 8005d46:	18fb      	adds	r3, r7, r3
 8005d48:	2200      	movs	r2, #0
 8005d4a:	701a      	strb	r2, [r3, #0]
 8005d4c:	687b      	ldr	r3, [r7, #4]
 8005d4e:	689a      	ldr	r2, [r3, #8]
 8005d50:	687b      	ldr	r3, [r7, #4]
 8005d52:	691b      	ldr	r3, [r3, #16]
 8005d54:	431a      	orrs	r2, r3
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	695b      	ldr	r3, [r3, #20]
 8005d5a:	431a      	orrs	r2, r3
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	69db      	ldr	r3, [r3, #28]
 8005d60:	4313      	orrs	r3, r2
 8005d62:	617b      	str	r3, [r7, #20]
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	681b      	ldr	r3, [r3, #0]
 8005d6a:	4a8d      	ldr	r2, [pc, #564]	; (8005fa0 <UART_SetConfig+0x264>)
 8005d6c:	4013      	ands	r3, r2
 8005d6e:	0019      	movs	r1, r3
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	681b      	ldr	r3, [r3, #0]
 8005d74:	697a      	ldr	r2, [r7, #20]
 8005d76:	430a      	orrs	r2, r1
 8005d78:	601a      	str	r2, [r3, #0]
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	681b      	ldr	r3, [r3, #0]
 8005d7e:	685b      	ldr	r3, [r3, #4]
 8005d80:	4a88      	ldr	r2, [pc, #544]	; (8005fa4 <UART_SetConfig+0x268>)
 8005d82:	4013      	ands	r3, r2
 8005d84:	0019      	movs	r1, r3
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	68da      	ldr	r2, [r3, #12]
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	681b      	ldr	r3, [r3, #0]
 8005d8e:	430a      	orrs	r2, r1
 8005d90:	605a      	str	r2, [r3, #4]
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	699b      	ldr	r3, [r3, #24]
 8005d96:	617b      	str	r3, [r7, #20]
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	6a1b      	ldr	r3, [r3, #32]
 8005d9c:	697a      	ldr	r2, [r7, #20]
 8005d9e:	4313      	orrs	r3, r2
 8005da0:	617b      	str	r3, [r7, #20]
 8005da2:	687b      	ldr	r3, [r7, #4]
 8005da4:	681b      	ldr	r3, [r3, #0]
 8005da6:	689b      	ldr	r3, [r3, #8]
 8005da8:	4a7f      	ldr	r2, [pc, #508]	; (8005fa8 <UART_SetConfig+0x26c>)
 8005daa:	4013      	ands	r3, r2
 8005dac:	0019      	movs	r1, r3
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	697a      	ldr	r2, [r7, #20]
 8005db4:	430a      	orrs	r2, r1
 8005db6:	609a      	str	r2, [r3, #8]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	4a7b      	ldr	r2, [pc, #492]	; (8005fac <UART_SetConfig+0x270>)
 8005dbe:	4293      	cmp	r3, r2
 8005dc0:	d127      	bne.n	8005e12 <UART_SetConfig+0xd6>
 8005dc2:	4b7b      	ldr	r3, [pc, #492]	; (8005fb0 <UART_SetConfig+0x274>)
 8005dc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005dc6:	2203      	movs	r2, #3
 8005dc8:	4013      	ands	r3, r2
 8005dca:	2b03      	cmp	r3, #3
 8005dcc:	d00d      	beq.n	8005dea <UART_SetConfig+0xae>
 8005dce:	d81b      	bhi.n	8005e08 <UART_SetConfig+0xcc>
 8005dd0:	2b02      	cmp	r3, #2
 8005dd2:	d014      	beq.n	8005dfe <UART_SetConfig+0xc2>
 8005dd4:	d818      	bhi.n	8005e08 <UART_SetConfig+0xcc>
 8005dd6:	2b00      	cmp	r3, #0
 8005dd8:	d002      	beq.n	8005de0 <UART_SetConfig+0xa4>
 8005dda:	2b01      	cmp	r3, #1
 8005ddc:	d00a      	beq.n	8005df4 <UART_SetConfig+0xb8>
 8005dde:	e013      	b.n	8005e08 <UART_SetConfig+0xcc>
 8005de0:	231f      	movs	r3, #31
 8005de2:	18fb      	adds	r3, r7, r3
 8005de4:	2200      	movs	r2, #0
 8005de6:	701a      	strb	r2, [r3, #0]
 8005de8:	e021      	b.n	8005e2e <UART_SetConfig+0xf2>
 8005dea:	231f      	movs	r3, #31
 8005dec:	18fb      	adds	r3, r7, r3
 8005dee:	2202      	movs	r2, #2
 8005df0:	701a      	strb	r2, [r3, #0]
 8005df2:	e01c      	b.n	8005e2e <UART_SetConfig+0xf2>
 8005df4:	231f      	movs	r3, #31
 8005df6:	18fb      	adds	r3, r7, r3
 8005df8:	2204      	movs	r2, #4
 8005dfa:	701a      	strb	r2, [r3, #0]
 8005dfc:	e017      	b.n	8005e2e <UART_SetConfig+0xf2>
 8005dfe:	231f      	movs	r3, #31
 8005e00:	18fb      	adds	r3, r7, r3
 8005e02:	2208      	movs	r2, #8
 8005e04:	701a      	strb	r2, [r3, #0]
 8005e06:	e012      	b.n	8005e2e <UART_SetConfig+0xf2>
 8005e08:	231f      	movs	r3, #31
 8005e0a:	18fb      	adds	r3, r7, r3
 8005e0c:	2210      	movs	r2, #16
 8005e0e:	701a      	strb	r2, [r3, #0]
 8005e10:	e00d      	b.n	8005e2e <UART_SetConfig+0xf2>
 8005e12:	687b      	ldr	r3, [r7, #4]
 8005e14:	681b      	ldr	r3, [r3, #0]
 8005e16:	4a67      	ldr	r2, [pc, #412]	; (8005fb4 <UART_SetConfig+0x278>)
 8005e18:	4293      	cmp	r3, r2
 8005e1a:	d104      	bne.n	8005e26 <UART_SetConfig+0xea>
 8005e1c:	231f      	movs	r3, #31
 8005e1e:	18fb      	adds	r3, r7, r3
 8005e20:	2200      	movs	r2, #0
 8005e22:	701a      	strb	r2, [r3, #0]
 8005e24:	e003      	b.n	8005e2e <UART_SetConfig+0xf2>
 8005e26:	231f      	movs	r3, #31
 8005e28:	18fb      	adds	r3, r7, r3
 8005e2a:	2210      	movs	r2, #16
 8005e2c:	701a      	strb	r2, [r3, #0]
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	69da      	ldr	r2, [r3, #28]
 8005e32:	2380      	movs	r3, #128	; 0x80
 8005e34:	021b      	lsls	r3, r3, #8
 8005e36:	429a      	cmp	r2, r3
 8005e38:	d15c      	bne.n	8005ef4 <UART_SetConfig+0x1b8>
 8005e3a:	231f      	movs	r3, #31
 8005e3c:	18fb      	adds	r3, r7, r3
 8005e3e:	781b      	ldrb	r3, [r3, #0]
 8005e40:	2b08      	cmp	r3, #8
 8005e42:	d015      	beq.n	8005e70 <UART_SetConfig+0x134>
 8005e44:	dc18      	bgt.n	8005e78 <UART_SetConfig+0x13c>
 8005e46:	2b04      	cmp	r3, #4
 8005e48:	d00d      	beq.n	8005e66 <UART_SetConfig+0x12a>
 8005e4a:	dc15      	bgt.n	8005e78 <UART_SetConfig+0x13c>
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d002      	beq.n	8005e56 <UART_SetConfig+0x11a>
 8005e50:	2b02      	cmp	r3, #2
 8005e52:	d005      	beq.n	8005e60 <UART_SetConfig+0x124>
 8005e54:	e010      	b.n	8005e78 <UART_SetConfig+0x13c>
 8005e56:	f7fe ffd7 	bl	8004e08 <HAL_RCC_GetPCLK1Freq>
 8005e5a:	0003      	movs	r3, r0
 8005e5c:	61bb      	str	r3, [r7, #24]
 8005e5e:	e012      	b.n	8005e86 <UART_SetConfig+0x14a>
 8005e60:	4b55      	ldr	r3, [pc, #340]	; (8005fb8 <UART_SetConfig+0x27c>)
 8005e62:	61bb      	str	r3, [r7, #24]
 8005e64:	e00f      	b.n	8005e86 <UART_SetConfig+0x14a>
 8005e66:	f7fe ff6f 	bl	8004d48 <HAL_RCC_GetSysClockFreq>
 8005e6a:	0003      	movs	r3, r0
 8005e6c:	61bb      	str	r3, [r7, #24]
 8005e6e:	e00a      	b.n	8005e86 <UART_SetConfig+0x14a>
 8005e70:	2380      	movs	r3, #128	; 0x80
 8005e72:	021b      	lsls	r3, r3, #8
 8005e74:	61bb      	str	r3, [r7, #24]
 8005e76:	e006      	b.n	8005e86 <UART_SetConfig+0x14a>
 8005e78:	2300      	movs	r3, #0
 8005e7a:	61bb      	str	r3, [r7, #24]
 8005e7c:	231e      	movs	r3, #30
 8005e7e:	18fb      	adds	r3, r7, r3
 8005e80:	2201      	movs	r2, #1
 8005e82:	701a      	strb	r2, [r3, #0]
 8005e84:	46c0      	nop			; (mov r8, r8)
 8005e86:	69bb      	ldr	r3, [r7, #24]
 8005e88:	2b00      	cmp	r3, #0
 8005e8a:	d100      	bne.n	8005e8e <UART_SetConfig+0x152>
 8005e8c:	e07a      	b.n	8005f84 <UART_SetConfig+0x248>
 8005e8e:	69bb      	ldr	r3, [r7, #24]
 8005e90:	005a      	lsls	r2, r3, #1
 8005e92:	687b      	ldr	r3, [r7, #4]
 8005e94:	685b      	ldr	r3, [r3, #4]
 8005e96:	085b      	lsrs	r3, r3, #1
 8005e98:	18d2      	adds	r2, r2, r3
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	685b      	ldr	r3, [r3, #4]
 8005e9e:	0019      	movs	r1, r3
 8005ea0:	0010      	movs	r0, r2
 8005ea2:	f7fa f93b 	bl	800011c <__udivsi3>
 8005ea6:	0003      	movs	r3, r0
 8005ea8:	613b      	str	r3, [r7, #16]
 8005eaa:	693b      	ldr	r3, [r7, #16]
 8005eac:	2b0f      	cmp	r3, #15
 8005eae:	d91c      	bls.n	8005eea <UART_SetConfig+0x1ae>
 8005eb0:	693a      	ldr	r2, [r7, #16]
 8005eb2:	2380      	movs	r3, #128	; 0x80
 8005eb4:	025b      	lsls	r3, r3, #9
 8005eb6:	429a      	cmp	r2, r3
 8005eb8:	d217      	bcs.n	8005eea <UART_SetConfig+0x1ae>
 8005eba:	693b      	ldr	r3, [r7, #16]
 8005ebc:	b29a      	uxth	r2, r3
 8005ebe:	200e      	movs	r0, #14
 8005ec0:	183b      	adds	r3, r7, r0
 8005ec2:	210f      	movs	r1, #15
 8005ec4:	438a      	bics	r2, r1
 8005ec6:	801a      	strh	r2, [r3, #0]
 8005ec8:	693b      	ldr	r3, [r7, #16]
 8005eca:	085b      	lsrs	r3, r3, #1
 8005ecc:	b29b      	uxth	r3, r3
 8005ece:	2207      	movs	r2, #7
 8005ed0:	4013      	ands	r3, r2
 8005ed2:	b299      	uxth	r1, r3
 8005ed4:	183b      	adds	r3, r7, r0
 8005ed6:	183a      	adds	r2, r7, r0
 8005ed8:	8812      	ldrh	r2, [r2, #0]
 8005eda:	430a      	orrs	r2, r1
 8005edc:	801a      	strh	r2, [r3, #0]
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	183a      	adds	r2, r7, r0
 8005ee4:	8812      	ldrh	r2, [r2, #0]
 8005ee6:	60da      	str	r2, [r3, #12]
 8005ee8:	e04c      	b.n	8005f84 <UART_SetConfig+0x248>
 8005eea:	231e      	movs	r3, #30
 8005eec:	18fb      	adds	r3, r7, r3
 8005eee:	2201      	movs	r2, #1
 8005ef0:	701a      	strb	r2, [r3, #0]
 8005ef2:	e047      	b.n	8005f84 <UART_SetConfig+0x248>
 8005ef4:	231f      	movs	r3, #31
 8005ef6:	18fb      	adds	r3, r7, r3
 8005ef8:	781b      	ldrb	r3, [r3, #0]
 8005efa:	2b08      	cmp	r3, #8
 8005efc:	d015      	beq.n	8005f2a <UART_SetConfig+0x1ee>
 8005efe:	dc18      	bgt.n	8005f32 <UART_SetConfig+0x1f6>
 8005f00:	2b04      	cmp	r3, #4
 8005f02:	d00d      	beq.n	8005f20 <UART_SetConfig+0x1e4>
 8005f04:	dc15      	bgt.n	8005f32 <UART_SetConfig+0x1f6>
 8005f06:	2b00      	cmp	r3, #0
 8005f08:	d002      	beq.n	8005f10 <UART_SetConfig+0x1d4>
 8005f0a:	2b02      	cmp	r3, #2
 8005f0c:	d005      	beq.n	8005f1a <UART_SetConfig+0x1de>
 8005f0e:	e010      	b.n	8005f32 <UART_SetConfig+0x1f6>
 8005f10:	f7fe ff7a 	bl	8004e08 <HAL_RCC_GetPCLK1Freq>
 8005f14:	0003      	movs	r3, r0
 8005f16:	61bb      	str	r3, [r7, #24]
 8005f18:	e012      	b.n	8005f40 <UART_SetConfig+0x204>
 8005f1a:	4b27      	ldr	r3, [pc, #156]	; (8005fb8 <UART_SetConfig+0x27c>)
 8005f1c:	61bb      	str	r3, [r7, #24]
 8005f1e:	e00f      	b.n	8005f40 <UART_SetConfig+0x204>
 8005f20:	f7fe ff12 	bl	8004d48 <HAL_RCC_GetSysClockFreq>
 8005f24:	0003      	movs	r3, r0
 8005f26:	61bb      	str	r3, [r7, #24]
 8005f28:	e00a      	b.n	8005f40 <UART_SetConfig+0x204>
 8005f2a:	2380      	movs	r3, #128	; 0x80
 8005f2c:	021b      	lsls	r3, r3, #8
 8005f2e:	61bb      	str	r3, [r7, #24]
 8005f30:	e006      	b.n	8005f40 <UART_SetConfig+0x204>
 8005f32:	2300      	movs	r3, #0
 8005f34:	61bb      	str	r3, [r7, #24]
 8005f36:	231e      	movs	r3, #30
 8005f38:	18fb      	adds	r3, r7, r3
 8005f3a:	2201      	movs	r2, #1
 8005f3c:	701a      	strb	r2, [r3, #0]
 8005f3e:	46c0      	nop			; (mov r8, r8)
 8005f40:	69bb      	ldr	r3, [r7, #24]
 8005f42:	2b00      	cmp	r3, #0
 8005f44:	d01e      	beq.n	8005f84 <UART_SetConfig+0x248>
 8005f46:	687b      	ldr	r3, [r7, #4]
 8005f48:	685b      	ldr	r3, [r3, #4]
 8005f4a:	085a      	lsrs	r2, r3, #1
 8005f4c:	69bb      	ldr	r3, [r7, #24]
 8005f4e:	18d2      	adds	r2, r2, r3
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	685b      	ldr	r3, [r3, #4]
 8005f54:	0019      	movs	r1, r3
 8005f56:	0010      	movs	r0, r2
 8005f58:	f7fa f8e0 	bl	800011c <__udivsi3>
 8005f5c:	0003      	movs	r3, r0
 8005f5e:	613b      	str	r3, [r7, #16]
 8005f60:	693b      	ldr	r3, [r7, #16]
 8005f62:	2b0f      	cmp	r3, #15
 8005f64:	d90a      	bls.n	8005f7c <UART_SetConfig+0x240>
 8005f66:	693a      	ldr	r2, [r7, #16]
 8005f68:	2380      	movs	r3, #128	; 0x80
 8005f6a:	025b      	lsls	r3, r3, #9
 8005f6c:	429a      	cmp	r2, r3
 8005f6e:	d205      	bcs.n	8005f7c <UART_SetConfig+0x240>
 8005f70:	693b      	ldr	r3, [r7, #16]
 8005f72:	b29a      	uxth	r2, r3
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	60da      	str	r2, [r3, #12]
 8005f7a:	e003      	b.n	8005f84 <UART_SetConfig+0x248>
 8005f7c:	231e      	movs	r3, #30
 8005f7e:	18fb      	adds	r3, r7, r3
 8005f80:	2201      	movs	r2, #1
 8005f82:	701a      	strb	r2, [r3, #0]
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	2200      	movs	r2, #0
 8005f88:	669a      	str	r2, [r3, #104]	; 0x68
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	2200      	movs	r2, #0
 8005f8e:	66da      	str	r2, [r3, #108]	; 0x6c
 8005f90:	231e      	movs	r3, #30
 8005f92:	18fb      	adds	r3, r7, r3
 8005f94:	781b      	ldrb	r3, [r3, #0]
 8005f96:	0018      	movs	r0, r3
 8005f98:	46bd      	mov	sp, r7
 8005f9a:	b008      	add	sp, #32
 8005f9c:	bd80      	pop	{r7, pc}
 8005f9e:	46c0      	nop			; (mov r8, r8)
 8005fa0:	ffff69f3 	.word	0xffff69f3
 8005fa4:	ffffcfff 	.word	0xffffcfff
 8005fa8:	fffff4ff 	.word	0xfffff4ff
 8005fac:	40013800 	.word	0x40013800
 8005fb0:	40021000 	.word	0x40021000
 8005fb4:	40004400 	.word	0x40004400
 8005fb8:	007a1200 	.word	0x007a1200

08005fbc <UART_AdvFeatureConfig>:
 8005fbc:	b580      	push	{r7, lr}
 8005fbe:	b082      	sub	sp, #8
 8005fc0:	af00      	add	r7, sp, #0
 8005fc2:	6078      	str	r0, [r7, #4]
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fc8:	2201      	movs	r2, #1
 8005fca:	4013      	ands	r3, r2
 8005fcc:	d00b      	beq.n	8005fe6 <UART_AdvFeatureConfig+0x2a>
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	681b      	ldr	r3, [r3, #0]
 8005fd2:	685b      	ldr	r3, [r3, #4]
 8005fd4:	4a4a      	ldr	r2, [pc, #296]	; (8006100 <UART_AdvFeatureConfig+0x144>)
 8005fd6:	4013      	ands	r3, r2
 8005fd8:	0019      	movs	r1, r3
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	430a      	orrs	r2, r1
 8005fe4:	605a      	str	r2, [r3, #4]
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fea:	2202      	movs	r2, #2
 8005fec:	4013      	ands	r3, r2
 8005fee:	d00b      	beq.n	8006008 <UART_AdvFeatureConfig+0x4c>
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	685b      	ldr	r3, [r3, #4]
 8005ff6:	4a43      	ldr	r2, [pc, #268]	; (8006104 <UART_AdvFeatureConfig+0x148>)
 8005ff8:	4013      	ands	r3, r2
 8005ffa:	0019      	movs	r1, r3
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	430a      	orrs	r2, r1
 8006006:	605a      	str	r2, [r3, #4]
 8006008:	687b      	ldr	r3, [r7, #4]
 800600a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800600c:	2204      	movs	r2, #4
 800600e:	4013      	ands	r3, r2
 8006010:	d00b      	beq.n	800602a <UART_AdvFeatureConfig+0x6e>
 8006012:	687b      	ldr	r3, [r7, #4]
 8006014:	681b      	ldr	r3, [r3, #0]
 8006016:	685b      	ldr	r3, [r3, #4]
 8006018:	4a3b      	ldr	r2, [pc, #236]	; (8006108 <UART_AdvFeatureConfig+0x14c>)
 800601a:	4013      	ands	r3, r2
 800601c:	0019      	movs	r1, r3
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	430a      	orrs	r2, r1
 8006028:	605a      	str	r2, [r3, #4]
 800602a:	687b      	ldr	r3, [r7, #4]
 800602c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800602e:	2208      	movs	r2, #8
 8006030:	4013      	ands	r3, r2
 8006032:	d00b      	beq.n	800604c <UART_AdvFeatureConfig+0x90>
 8006034:	687b      	ldr	r3, [r7, #4]
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	685b      	ldr	r3, [r3, #4]
 800603a:	4a34      	ldr	r2, [pc, #208]	; (800610c <UART_AdvFeatureConfig+0x150>)
 800603c:	4013      	ands	r3, r2
 800603e:	0019      	movs	r1, r3
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006044:	687b      	ldr	r3, [r7, #4]
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	430a      	orrs	r2, r1
 800604a:	605a      	str	r2, [r3, #4]
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006050:	2210      	movs	r2, #16
 8006052:	4013      	ands	r3, r2
 8006054:	d00b      	beq.n	800606e <UART_AdvFeatureConfig+0xb2>
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	689b      	ldr	r3, [r3, #8]
 800605c:	4a2c      	ldr	r2, [pc, #176]	; (8006110 <UART_AdvFeatureConfig+0x154>)
 800605e:	4013      	ands	r3, r2
 8006060:	0019      	movs	r1, r3
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	430a      	orrs	r2, r1
 800606c:	609a      	str	r2, [r3, #8]
 800606e:	687b      	ldr	r3, [r7, #4]
 8006070:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006072:	2220      	movs	r2, #32
 8006074:	4013      	ands	r3, r2
 8006076:	d00b      	beq.n	8006090 <UART_AdvFeatureConfig+0xd4>
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	681b      	ldr	r3, [r3, #0]
 800607c:	689b      	ldr	r3, [r3, #8]
 800607e:	4a25      	ldr	r2, [pc, #148]	; (8006114 <UART_AdvFeatureConfig+0x158>)
 8006080:	4013      	ands	r3, r2
 8006082:	0019      	movs	r1, r3
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	681b      	ldr	r3, [r3, #0]
 800608c:	430a      	orrs	r2, r1
 800608e:	609a      	str	r2, [r3, #8]
 8006090:	687b      	ldr	r3, [r7, #4]
 8006092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006094:	2240      	movs	r2, #64	; 0x40
 8006096:	4013      	ands	r3, r2
 8006098:	d01d      	beq.n	80060d6 <UART_AdvFeatureConfig+0x11a>
 800609a:	687b      	ldr	r3, [r7, #4]
 800609c:	681b      	ldr	r3, [r3, #0]
 800609e:	685b      	ldr	r3, [r3, #4]
 80060a0:	4a1d      	ldr	r2, [pc, #116]	; (8006118 <UART_AdvFeatureConfig+0x15c>)
 80060a2:	4013      	ands	r3, r2
 80060a4:	0019      	movs	r1, r3
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	681b      	ldr	r3, [r3, #0]
 80060ae:	430a      	orrs	r2, r1
 80060b0:	605a      	str	r2, [r3, #4]
 80060b2:	687b      	ldr	r3, [r7, #4]
 80060b4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80060b6:	2380      	movs	r3, #128	; 0x80
 80060b8:	035b      	lsls	r3, r3, #13
 80060ba:	429a      	cmp	r2, r3
 80060bc:	d10b      	bne.n	80060d6 <UART_AdvFeatureConfig+0x11a>
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	685b      	ldr	r3, [r3, #4]
 80060c4:	4a15      	ldr	r2, [pc, #84]	; (800611c <UART_AdvFeatureConfig+0x160>)
 80060c6:	4013      	ands	r3, r2
 80060c8:	0019      	movs	r1, r3
 80060ca:	687b      	ldr	r3, [r7, #4]
 80060cc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	681b      	ldr	r3, [r3, #0]
 80060d2:	430a      	orrs	r2, r1
 80060d4:	605a      	str	r2, [r3, #4]
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060da:	2280      	movs	r2, #128	; 0x80
 80060dc:	4013      	ands	r3, r2
 80060de:	d00b      	beq.n	80060f8 <UART_AdvFeatureConfig+0x13c>
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	681b      	ldr	r3, [r3, #0]
 80060e4:	685b      	ldr	r3, [r3, #4]
 80060e6:	4a0e      	ldr	r2, [pc, #56]	; (8006120 <UART_AdvFeatureConfig+0x164>)
 80060e8:	4013      	ands	r3, r2
 80060ea:	0019      	movs	r1, r3
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	430a      	orrs	r2, r1
 80060f6:	605a      	str	r2, [r3, #4]
 80060f8:	46c0      	nop			; (mov r8, r8)
 80060fa:	46bd      	mov	sp, r7
 80060fc:	b002      	add	sp, #8
 80060fe:	bd80      	pop	{r7, pc}
 8006100:	fffdffff 	.word	0xfffdffff
 8006104:	fffeffff 	.word	0xfffeffff
 8006108:	fffbffff 	.word	0xfffbffff
 800610c:	ffff7fff 	.word	0xffff7fff
 8006110:	ffffefff 	.word	0xffffefff
 8006114:	ffffdfff 	.word	0xffffdfff
 8006118:	ffefffff 	.word	0xffefffff
 800611c:	ff9fffff 	.word	0xff9fffff
 8006120:	fff7ffff 	.word	0xfff7ffff

08006124 <UART_CheckIdleState>:
 8006124:	b580      	push	{r7, lr}
 8006126:	b092      	sub	sp, #72	; 0x48
 8006128:	af02      	add	r7, sp, #8
 800612a:	6078      	str	r0, [r7, #4]
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	2284      	movs	r2, #132	; 0x84
 8006130:	2100      	movs	r1, #0
 8006132:	5099      	str	r1, [r3, r2]
 8006134:	f7fd f846 	bl	80031c4 <HAL_GetTick>
 8006138:	0003      	movs	r3, r0
 800613a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800613c:	687b      	ldr	r3, [r7, #4]
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	681b      	ldr	r3, [r3, #0]
 8006142:	2208      	movs	r2, #8
 8006144:	4013      	ands	r3, r2
 8006146:	2b08      	cmp	r3, #8
 8006148:	d12c      	bne.n	80061a4 <UART_CheckIdleState+0x80>
 800614a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800614c:	2280      	movs	r2, #128	; 0x80
 800614e:	0391      	lsls	r1, r2, #14
 8006150:	6878      	ldr	r0, [r7, #4]
 8006152:	4a46      	ldr	r2, [pc, #280]	; (800626c <UART_CheckIdleState+0x148>)
 8006154:	9200      	str	r2, [sp, #0]
 8006156:	2200      	movs	r2, #0
 8006158:	f000 f88c 	bl	8006274 <UART_WaitOnFlagUntilTimeout>
 800615c:	1e03      	subs	r3, r0, #0
 800615e:	d021      	beq.n	80061a4 <UART_CheckIdleState+0x80>
 8006160:	f3ef 8310 	mrs	r3, PRIMASK
 8006164:	627b      	str	r3, [r7, #36]	; 0x24
 8006166:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006168:	63bb      	str	r3, [r7, #56]	; 0x38
 800616a:	2301      	movs	r3, #1
 800616c:	62bb      	str	r3, [r7, #40]	; 0x28
 800616e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006170:	f383 8810 	msr	PRIMASK, r3
 8006174:	46c0      	nop			; (mov r8, r8)
 8006176:	687b      	ldr	r3, [r7, #4]
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	681a      	ldr	r2, [r3, #0]
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	2180      	movs	r1, #128	; 0x80
 8006182:	438a      	bics	r2, r1
 8006184:	601a      	str	r2, [r3, #0]
 8006186:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006188:	62fb      	str	r3, [r7, #44]	; 0x2c
 800618a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800618c:	f383 8810 	msr	PRIMASK, r3
 8006190:	46c0      	nop			; (mov r8, r8)
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	2220      	movs	r2, #32
 8006196:	67da      	str	r2, [r3, #124]	; 0x7c
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	2278      	movs	r2, #120	; 0x78
 800619c:	2100      	movs	r1, #0
 800619e:	5499      	strb	r1, [r3, r2]
 80061a0:	2303      	movs	r3, #3
 80061a2:	e05f      	b.n	8006264 <UART_CheckIdleState+0x140>
 80061a4:	687b      	ldr	r3, [r7, #4]
 80061a6:	681b      	ldr	r3, [r3, #0]
 80061a8:	681b      	ldr	r3, [r3, #0]
 80061aa:	2204      	movs	r2, #4
 80061ac:	4013      	ands	r3, r2
 80061ae:	2b04      	cmp	r3, #4
 80061b0:	d146      	bne.n	8006240 <UART_CheckIdleState+0x11c>
 80061b2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80061b4:	2280      	movs	r2, #128	; 0x80
 80061b6:	03d1      	lsls	r1, r2, #15
 80061b8:	6878      	ldr	r0, [r7, #4]
 80061ba:	4a2c      	ldr	r2, [pc, #176]	; (800626c <UART_CheckIdleState+0x148>)
 80061bc:	9200      	str	r2, [sp, #0]
 80061be:	2200      	movs	r2, #0
 80061c0:	f000 f858 	bl	8006274 <UART_WaitOnFlagUntilTimeout>
 80061c4:	1e03      	subs	r3, r0, #0
 80061c6:	d03b      	beq.n	8006240 <UART_CheckIdleState+0x11c>
 80061c8:	f3ef 8310 	mrs	r3, PRIMASK
 80061cc:	60fb      	str	r3, [r7, #12]
 80061ce:	68fb      	ldr	r3, [r7, #12]
 80061d0:	637b      	str	r3, [r7, #52]	; 0x34
 80061d2:	2301      	movs	r3, #1
 80061d4:	613b      	str	r3, [r7, #16]
 80061d6:	693b      	ldr	r3, [r7, #16]
 80061d8:	f383 8810 	msr	PRIMASK, r3
 80061dc:	46c0      	nop			; (mov r8, r8)
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	681b      	ldr	r3, [r3, #0]
 80061e2:	681a      	ldr	r2, [r3, #0]
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	4921      	ldr	r1, [pc, #132]	; (8006270 <UART_CheckIdleState+0x14c>)
 80061ea:	400a      	ands	r2, r1
 80061ec:	601a      	str	r2, [r3, #0]
 80061ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80061f0:	617b      	str	r3, [r7, #20]
 80061f2:	697b      	ldr	r3, [r7, #20]
 80061f4:	f383 8810 	msr	PRIMASK, r3
 80061f8:	46c0      	nop			; (mov r8, r8)
 80061fa:	f3ef 8310 	mrs	r3, PRIMASK
 80061fe:	61bb      	str	r3, [r7, #24]
 8006200:	69bb      	ldr	r3, [r7, #24]
 8006202:	633b      	str	r3, [r7, #48]	; 0x30
 8006204:	2301      	movs	r3, #1
 8006206:	61fb      	str	r3, [r7, #28]
 8006208:	69fb      	ldr	r3, [r7, #28]
 800620a:	f383 8810 	msr	PRIMASK, r3
 800620e:	46c0      	nop			; (mov r8, r8)
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	689a      	ldr	r2, [r3, #8]
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	681b      	ldr	r3, [r3, #0]
 800621a:	2101      	movs	r1, #1
 800621c:	438a      	bics	r2, r1
 800621e:	609a      	str	r2, [r3, #8]
 8006220:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006222:	623b      	str	r3, [r7, #32]
 8006224:	6a3b      	ldr	r3, [r7, #32]
 8006226:	f383 8810 	msr	PRIMASK, r3
 800622a:	46c0      	nop			; (mov r8, r8)
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	2280      	movs	r2, #128	; 0x80
 8006230:	2120      	movs	r1, #32
 8006232:	5099      	str	r1, [r3, r2]
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	2278      	movs	r2, #120	; 0x78
 8006238:	2100      	movs	r1, #0
 800623a:	5499      	strb	r1, [r3, r2]
 800623c:	2303      	movs	r3, #3
 800623e:	e011      	b.n	8006264 <UART_CheckIdleState+0x140>
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	2220      	movs	r2, #32
 8006244:	67da      	str	r2, [r3, #124]	; 0x7c
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	2280      	movs	r2, #128	; 0x80
 800624a:	2120      	movs	r1, #32
 800624c:	5099      	str	r1, [r3, r2]
 800624e:	687b      	ldr	r3, [r7, #4]
 8006250:	2200      	movs	r2, #0
 8006252:	661a      	str	r2, [r3, #96]	; 0x60
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	2200      	movs	r2, #0
 8006258:	665a      	str	r2, [r3, #100]	; 0x64
 800625a:	687b      	ldr	r3, [r7, #4]
 800625c:	2278      	movs	r2, #120	; 0x78
 800625e:	2100      	movs	r1, #0
 8006260:	5499      	strb	r1, [r3, r2]
 8006262:	2300      	movs	r3, #0
 8006264:	0018      	movs	r0, r3
 8006266:	46bd      	mov	sp, r7
 8006268:	b010      	add	sp, #64	; 0x40
 800626a:	bd80      	pop	{r7, pc}
 800626c:	01ffffff 	.word	0x01ffffff
 8006270:	fffffedf 	.word	0xfffffedf

08006274 <UART_WaitOnFlagUntilTimeout>:
 8006274:	b580      	push	{r7, lr}
 8006276:	b084      	sub	sp, #16
 8006278:	af00      	add	r7, sp, #0
 800627a:	60f8      	str	r0, [r7, #12]
 800627c:	60b9      	str	r1, [r7, #8]
 800627e:	603b      	str	r3, [r7, #0]
 8006280:	1dfb      	adds	r3, r7, #7
 8006282:	701a      	strb	r2, [r3, #0]
 8006284:	e04b      	b.n	800631e <UART_WaitOnFlagUntilTimeout+0xaa>
 8006286:	69bb      	ldr	r3, [r7, #24]
 8006288:	3301      	adds	r3, #1
 800628a:	d048      	beq.n	800631e <UART_WaitOnFlagUntilTimeout+0xaa>
 800628c:	f7fc ff9a 	bl	80031c4 <HAL_GetTick>
 8006290:	0002      	movs	r2, r0
 8006292:	683b      	ldr	r3, [r7, #0]
 8006294:	1ad3      	subs	r3, r2, r3
 8006296:	69ba      	ldr	r2, [r7, #24]
 8006298:	429a      	cmp	r2, r3
 800629a:	d302      	bcc.n	80062a2 <UART_WaitOnFlagUntilTimeout+0x2e>
 800629c:	69bb      	ldr	r3, [r7, #24]
 800629e:	2b00      	cmp	r3, #0
 80062a0:	d101      	bne.n	80062a6 <UART_WaitOnFlagUntilTimeout+0x32>
 80062a2:	2303      	movs	r3, #3
 80062a4:	e04b      	b.n	800633e <UART_WaitOnFlagUntilTimeout+0xca>
 80062a6:	68fb      	ldr	r3, [r7, #12]
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	2204      	movs	r2, #4
 80062ae:	4013      	ands	r3, r2
 80062b0:	d035      	beq.n	800631e <UART_WaitOnFlagUntilTimeout+0xaa>
 80062b2:	68fb      	ldr	r3, [r7, #12]
 80062b4:	681b      	ldr	r3, [r3, #0]
 80062b6:	69db      	ldr	r3, [r3, #28]
 80062b8:	2208      	movs	r2, #8
 80062ba:	4013      	ands	r3, r2
 80062bc:	2b08      	cmp	r3, #8
 80062be:	d111      	bne.n	80062e4 <UART_WaitOnFlagUntilTimeout+0x70>
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	2208      	movs	r2, #8
 80062c6:	621a      	str	r2, [r3, #32]
 80062c8:	68fb      	ldr	r3, [r7, #12]
 80062ca:	0018      	movs	r0, r3
 80062cc:	f000 f8f2 	bl	80064b4 <UART_EndRxTransfer>
 80062d0:	68fb      	ldr	r3, [r7, #12]
 80062d2:	2284      	movs	r2, #132	; 0x84
 80062d4:	2108      	movs	r1, #8
 80062d6:	5099      	str	r1, [r3, r2]
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	2278      	movs	r2, #120	; 0x78
 80062dc:	2100      	movs	r1, #0
 80062de:	5499      	strb	r1, [r3, r2]
 80062e0:	2301      	movs	r3, #1
 80062e2:	e02c      	b.n	800633e <UART_WaitOnFlagUntilTimeout+0xca>
 80062e4:	68fb      	ldr	r3, [r7, #12]
 80062e6:	681b      	ldr	r3, [r3, #0]
 80062e8:	69da      	ldr	r2, [r3, #28]
 80062ea:	2380      	movs	r3, #128	; 0x80
 80062ec:	011b      	lsls	r3, r3, #4
 80062ee:	401a      	ands	r2, r3
 80062f0:	2380      	movs	r3, #128	; 0x80
 80062f2:	011b      	lsls	r3, r3, #4
 80062f4:	429a      	cmp	r2, r3
 80062f6:	d112      	bne.n	800631e <UART_WaitOnFlagUntilTimeout+0xaa>
 80062f8:	68fb      	ldr	r3, [r7, #12]
 80062fa:	681b      	ldr	r3, [r3, #0]
 80062fc:	2280      	movs	r2, #128	; 0x80
 80062fe:	0112      	lsls	r2, r2, #4
 8006300:	621a      	str	r2, [r3, #32]
 8006302:	68fb      	ldr	r3, [r7, #12]
 8006304:	0018      	movs	r0, r3
 8006306:	f000 f8d5 	bl	80064b4 <UART_EndRxTransfer>
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	2284      	movs	r2, #132	; 0x84
 800630e:	2120      	movs	r1, #32
 8006310:	5099      	str	r1, [r3, r2]
 8006312:	68fb      	ldr	r3, [r7, #12]
 8006314:	2278      	movs	r2, #120	; 0x78
 8006316:	2100      	movs	r1, #0
 8006318:	5499      	strb	r1, [r3, r2]
 800631a:	2303      	movs	r3, #3
 800631c:	e00f      	b.n	800633e <UART_WaitOnFlagUntilTimeout+0xca>
 800631e:	68fb      	ldr	r3, [r7, #12]
 8006320:	681b      	ldr	r3, [r3, #0]
 8006322:	69db      	ldr	r3, [r3, #28]
 8006324:	68ba      	ldr	r2, [r7, #8]
 8006326:	4013      	ands	r3, r2
 8006328:	68ba      	ldr	r2, [r7, #8]
 800632a:	1ad3      	subs	r3, r2, r3
 800632c:	425a      	negs	r2, r3
 800632e:	4153      	adcs	r3, r2
 8006330:	b2db      	uxtb	r3, r3
 8006332:	001a      	movs	r2, r3
 8006334:	1dfb      	adds	r3, r7, #7
 8006336:	781b      	ldrb	r3, [r3, #0]
 8006338:	429a      	cmp	r2, r3
 800633a:	d0a4      	beq.n	8006286 <UART_WaitOnFlagUntilTimeout+0x12>
 800633c:	2300      	movs	r3, #0
 800633e:	0018      	movs	r0, r3
 8006340:	46bd      	mov	sp, r7
 8006342:	b004      	add	sp, #16
 8006344:	bd80      	pop	{r7, pc}
	...

08006348 <UART_Start_Receive_IT>:
 8006348:	b580      	push	{r7, lr}
 800634a:	b090      	sub	sp, #64	; 0x40
 800634c:	af00      	add	r7, sp, #0
 800634e:	60f8      	str	r0, [r7, #12]
 8006350:	60b9      	str	r1, [r7, #8]
 8006352:	1dbb      	adds	r3, r7, #6
 8006354:	801a      	strh	r2, [r3, #0]
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	68ba      	ldr	r2, [r7, #8]
 800635a:	655a      	str	r2, [r3, #84]	; 0x54
 800635c:	68fb      	ldr	r3, [r7, #12]
 800635e:	1dba      	adds	r2, r7, #6
 8006360:	2158      	movs	r1, #88	; 0x58
 8006362:	8812      	ldrh	r2, [r2, #0]
 8006364:	525a      	strh	r2, [r3, r1]
 8006366:	68fb      	ldr	r3, [r7, #12]
 8006368:	1dba      	adds	r2, r7, #6
 800636a:	215a      	movs	r1, #90	; 0x5a
 800636c:	8812      	ldrh	r2, [r2, #0]
 800636e:	525a      	strh	r2, [r3, r1]
 8006370:	68fb      	ldr	r3, [r7, #12]
 8006372:	2200      	movs	r2, #0
 8006374:	669a      	str	r2, [r3, #104]	; 0x68
 8006376:	68fb      	ldr	r3, [r7, #12]
 8006378:	689a      	ldr	r2, [r3, #8]
 800637a:	2380      	movs	r3, #128	; 0x80
 800637c:	015b      	lsls	r3, r3, #5
 800637e:	429a      	cmp	r2, r3
 8006380:	d10d      	bne.n	800639e <UART_Start_Receive_IT+0x56>
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	691b      	ldr	r3, [r3, #16]
 8006386:	2b00      	cmp	r3, #0
 8006388:	d104      	bne.n	8006394 <UART_Start_Receive_IT+0x4c>
 800638a:	68fb      	ldr	r3, [r7, #12]
 800638c:	225c      	movs	r2, #92	; 0x5c
 800638e:	4946      	ldr	r1, [pc, #280]	; (80064a8 <UART_Start_Receive_IT+0x160>)
 8006390:	5299      	strh	r1, [r3, r2]
 8006392:	e01a      	b.n	80063ca <UART_Start_Receive_IT+0x82>
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	225c      	movs	r2, #92	; 0x5c
 8006398:	21ff      	movs	r1, #255	; 0xff
 800639a:	5299      	strh	r1, [r3, r2]
 800639c:	e015      	b.n	80063ca <UART_Start_Receive_IT+0x82>
 800639e:	68fb      	ldr	r3, [r7, #12]
 80063a0:	689b      	ldr	r3, [r3, #8]
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d10d      	bne.n	80063c2 <UART_Start_Receive_IT+0x7a>
 80063a6:	68fb      	ldr	r3, [r7, #12]
 80063a8:	691b      	ldr	r3, [r3, #16]
 80063aa:	2b00      	cmp	r3, #0
 80063ac:	d104      	bne.n	80063b8 <UART_Start_Receive_IT+0x70>
 80063ae:	68fb      	ldr	r3, [r7, #12]
 80063b0:	225c      	movs	r2, #92	; 0x5c
 80063b2:	21ff      	movs	r1, #255	; 0xff
 80063b4:	5299      	strh	r1, [r3, r2]
 80063b6:	e008      	b.n	80063ca <UART_Start_Receive_IT+0x82>
 80063b8:	68fb      	ldr	r3, [r7, #12]
 80063ba:	225c      	movs	r2, #92	; 0x5c
 80063bc:	217f      	movs	r1, #127	; 0x7f
 80063be:	5299      	strh	r1, [r3, r2]
 80063c0:	e003      	b.n	80063ca <UART_Start_Receive_IT+0x82>
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	225c      	movs	r2, #92	; 0x5c
 80063c6:	2100      	movs	r1, #0
 80063c8:	5299      	strh	r1, [r3, r2]
 80063ca:	68fb      	ldr	r3, [r7, #12]
 80063cc:	2284      	movs	r2, #132	; 0x84
 80063ce:	2100      	movs	r1, #0
 80063d0:	5099      	str	r1, [r3, r2]
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	2280      	movs	r2, #128	; 0x80
 80063d6:	2122      	movs	r1, #34	; 0x22
 80063d8:	5099      	str	r1, [r3, r2]
 80063da:	f3ef 8310 	mrs	r3, PRIMASK
 80063de:	62bb      	str	r3, [r7, #40]	; 0x28
 80063e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80063e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80063e4:	2301      	movs	r3, #1
 80063e6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80063e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80063ea:	f383 8810 	msr	PRIMASK, r3
 80063ee:	46c0      	nop			; (mov r8, r8)
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	689a      	ldr	r2, [r3, #8]
 80063f6:	68fb      	ldr	r3, [r7, #12]
 80063f8:	681b      	ldr	r3, [r3, #0]
 80063fa:	2101      	movs	r1, #1
 80063fc:	430a      	orrs	r2, r1
 80063fe:	609a      	str	r2, [r3, #8]
 8006400:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006402:	633b      	str	r3, [r7, #48]	; 0x30
 8006404:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006406:	f383 8810 	msr	PRIMASK, r3
 800640a:	46c0      	nop			; (mov r8, r8)
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	689a      	ldr	r2, [r3, #8]
 8006410:	2380      	movs	r3, #128	; 0x80
 8006412:	015b      	lsls	r3, r3, #5
 8006414:	429a      	cmp	r2, r3
 8006416:	d107      	bne.n	8006428 <UART_Start_Receive_IT+0xe0>
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	691b      	ldr	r3, [r3, #16]
 800641c:	2b00      	cmp	r3, #0
 800641e:	d103      	bne.n	8006428 <UART_Start_Receive_IT+0xe0>
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	4a22      	ldr	r2, [pc, #136]	; (80064ac <UART_Start_Receive_IT+0x164>)
 8006424:	669a      	str	r2, [r3, #104]	; 0x68
 8006426:	e002      	b.n	800642e <UART_Start_Receive_IT+0xe6>
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	4a21      	ldr	r2, [pc, #132]	; (80064b0 <UART_Start_Receive_IT+0x168>)
 800642c:	669a      	str	r2, [r3, #104]	; 0x68
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	691b      	ldr	r3, [r3, #16]
 8006432:	2b00      	cmp	r3, #0
 8006434:	d019      	beq.n	800646a <UART_Start_Receive_IT+0x122>
 8006436:	f3ef 8310 	mrs	r3, PRIMASK
 800643a:	61fb      	str	r3, [r7, #28]
 800643c:	69fb      	ldr	r3, [r7, #28]
 800643e:	637b      	str	r3, [r7, #52]	; 0x34
 8006440:	2301      	movs	r3, #1
 8006442:	623b      	str	r3, [r7, #32]
 8006444:	6a3b      	ldr	r3, [r7, #32]
 8006446:	f383 8810 	msr	PRIMASK, r3
 800644a:	46c0      	nop			; (mov r8, r8)
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	681b      	ldr	r3, [r3, #0]
 8006450:	681a      	ldr	r2, [r3, #0]
 8006452:	68fb      	ldr	r3, [r7, #12]
 8006454:	681b      	ldr	r3, [r3, #0]
 8006456:	2190      	movs	r1, #144	; 0x90
 8006458:	0049      	lsls	r1, r1, #1
 800645a:	430a      	orrs	r2, r1
 800645c:	601a      	str	r2, [r3, #0]
 800645e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006460:	627b      	str	r3, [r7, #36]	; 0x24
 8006462:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006464:	f383 8810 	msr	PRIMASK, r3
 8006468:	e018      	b.n	800649c <UART_Start_Receive_IT+0x154>
 800646a:	f3ef 8310 	mrs	r3, PRIMASK
 800646e:	613b      	str	r3, [r7, #16]
 8006470:	693b      	ldr	r3, [r7, #16]
 8006472:	63bb      	str	r3, [r7, #56]	; 0x38
 8006474:	2301      	movs	r3, #1
 8006476:	617b      	str	r3, [r7, #20]
 8006478:	697b      	ldr	r3, [r7, #20]
 800647a:	f383 8810 	msr	PRIMASK, r3
 800647e:	46c0      	nop			; (mov r8, r8)
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	681b      	ldr	r3, [r3, #0]
 8006484:	681a      	ldr	r2, [r3, #0]
 8006486:	68fb      	ldr	r3, [r7, #12]
 8006488:	681b      	ldr	r3, [r3, #0]
 800648a:	2120      	movs	r1, #32
 800648c:	430a      	orrs	r2, r1
 800648e:	601a      	str	r2, [r3, #0]
 8006490:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006492:	61bb      	str	r3, [r7, #24]
 8006494:	69bb      	ldr	r3, [r7, #24]
 8006496:	f383 8810 	msr	PRIMASK, r3
 800649a:	46c0      	nop			; (mov r8, r8)
 800649c:	2300      	movs	r3, #0
 800649e:	0018      	movs	r0, r3
 80064a0:	46bd      	mov	sp, r7
 80064a2:	b010      	add	sp, #64	; 0x40
 80064a4:	bd80      	pop	{r7, pc}
 80064a6:	46c0      	nop			; (mov r8, r8)
 80064a8:	000001ff 	.word	0x000001ff
 80064ac:	080067b9 	.word	0x080067b9
 80064b0:	08006601 	.word	0x08006601

080064b4 <UART_EndRxTransfer>:
 80064b4:	b580      	push	{r7, lr}
 80064b6:	b08e      	sub	sp, #56	; 0x38
 80064b8:	af00      	add	r7, sp, #0
 80064ba:	6078      	str	r0, [r7, #4]
 80064bc:	f3ef 8310 	mrs	r3, PRIMASK
 80064c0:	617b      	str	r3, [r7, #20]
 80064c2:	697b      	ldr	r3, [r7, #20]
 80064c4:	637b      	str	r3, [r7, #52]	; 0x34
 80064c6:	2301      	movs	r3, #1
 80064c8:	61bb      	str	r3, [r7, #24]
 80064ca:	69bb      	ldr	r3, [r7, #24]
 80064cc:	f383 8810 	msr	PRIMASK, r3
 80064d0:	46c0      	nop			; (mov r8, r8)
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	681a      	ldr	r2, [r3, #0]
 80064d8:	687b      	ldr	r3, [r7, #4]
 80064da:	681b      	ldr	r3, [r3, #0]
 80064dc:	4926      	ldr	r1, [pc, #152]	; (8006578 <UART_EndRxTransfer+0xc4>)
 80064de:	400a      	ands	r2, r1
 80064e0:	601a      	str	r2, [r3, #0]
 80064e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80064e4:	61fb      	str	r3, [r7, #28]
 80064e6:	69fb      	ldr	r3, [r7, #28]
 80064e8:	f383 8810 	msr	PRIMASK, r3
 80064ec:	46c0      	nop			; (mov r8, r8)
 80064ee:	f3ef 8310 	mrs	r3, PRIMASK
 80064f2:	623b      	str	r3, [r7, #32]
 80064f4:	6a3b      	ldr	r3, [r7, #32]
 80064f6:	633b      	str	r3, [r7, #48]	; 0x30
 80064f8:	2301      	movs	r3, #1
 80064fa:	627b      	str	r3, [r7, #36]	; 0x24
 80064fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064fe:	f383 8810 	msr	PRIMASK, r3
 8006502:	46c0      	nop			; (mov r8, r8)
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	689a      	ldr	r2, [r3, #8]
 800650a:	687b      	ldr	r3, [r7, #4]
 800650c:	681b      	ldr	r3, [r3, #0]
 800650e:	2101      	movs	r1, #1
 8006510:	438a      	bics	r2, r1
 8006512:	609a      	str	r2, [r3, #8]
 8006514:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006516:	62bb      	str	r3, [r7, #40]	; 0x28
 8006518:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800651a:	f383 8810 	msr	PRIMASK, r3
 800651e:	46c0      	nop			; (mov r8, r8)
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006524:	2b01      	cmp	r3, #1
 8006526:	d118      	bne.n	800655a <UART_EndRxTransfer+0xa6>
 8006528:	f3ef 8310 	mrs	r3, PRIMASK
 800652c:	60bb      	str	r3, [r7, #8]
 800652e:	68bb      	ldr	r3, [r7, #8]
 8006530:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006532:	2301      	movs	r3, #1
 8006534:	60fb      	str	r3, [r7, #12]
 8006536:	68fb      	ldr	r3, [r7, #12]
 8006538:	f383 8810 	msr	PRIMASK, r3
 800653c:	46c0      	nop			; (mov r8, r8)
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	681b      	ldr	r3, [r3, #0]
 8006542:	681a      	ldr	r2, [r3, #0]
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	681b      	ldr	r3, [r3, #0]
 8006548:	2110      	movs	r1, #16
 800654a:	438a      	bics	r2, r1
 800654c:	601a      	str	r2, [r3, #0]
 800654e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006550:	613b      	str	r3, [r7, #16]
 8006552:	693b      	ldr	r3, [r7, #16]
 8006554:	f383 8810 	msr	PRIMASK, r3
 8006558:	46c0      	nop			; (mov r8, r8)
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	2280      	movs	r2, #128	; 0x80
 800655e:	2120      	movs	r1, #32
 8006560:	5099      	str	r1, [r3, r2]
 8006562:	687b      	ldr	r3, [r7, #4]
 8006564:	2200      	movs	r2, #0
 8006566:	661a      	str	r2, [r3, #96]	; 0x60
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	2200      	movs	r2, #0
 800656c:	669a      	str	r2, [r3, #104]	; 0x68
 800656e:	46c0      	nop			; (mov r8, r8)
 8006570:	46bd      	mov	sp, r7
 8006572:	b00e      	add	sp, #56	; 0x38
 8006574:	bd80      	pop	{r7, pc}
 8006576:	46c0      	nop			; (mov r8, r8)
 8006578:	fffffedf 	.word	0xfffffedf

0800657c <UART_DMAAbortOnError>:
 800657c:	b580      	push	{r7, lr}
 800657e:	b084      	sub	sp, #16
 8006580:	af00      	add	r7, sp, #0
 8006582:	6078      	str	r0, [r7, #4]
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006588:	60fb      	str	r3, [r7, #12]
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	225a      	movs	r2, #90	; 0x5a
 800658e:	2100      	movs	r1, #0
 8006590:	5299      	strh	r1, [r3, r2]
 8006592:	68fb      	ldr	r3, [r7, #12]
 8006594:	2252      	movs	r2, #82	; 0x52
 8006596:	2100      	movs	r1, #0
 8006598:	5299      	strh	r1, [r3, r2]
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	0018      	movs	r0, r3
 800659e:	f7ff fbb9 	bl	8005d14 <HAL_UART_ErrorCallback>
 80065a2:	46c0      	nop			; (mov r8, r8)
 80065a4:	46bd      	mov	sp, r7
 80065a6:	b004      	add	sp, #16
 80065a8:	bd80      	pop	{r7, pc}

080065aa <UART_EndTransmit_IT>:
 80065aa:	b580      	push	{r7, lr}
 80065ac:	b086      	sub	sp, #24
 80065ae:	af00      	add	r7, sp, #0
 80065b0:	6078      	str	r0, [r7, #4]
 80065b2:	f3ef 8310 	mrs	r3, PRIMASK
 80065b6:	60bb      	str	r3, [r7, #8]
 80065b8:	68bb      	ldr	r3, [r7, #8]
 80065ba:	617b      	str	r3, [r7, #20]
 80065bc:	2301      	movs	r3, #1
 80065be:	60fb      	str	r3, [r7, #12]
 80065c0:	68fb      	ldr	r3, [r7, #12]
 80065c2:	f383 8810 	msr	PRIMASK, r3
 80065c6:	46c0      	nop			; (mov r8, r8)
 80065c8:	687b      	ldr	r3, [r7, #4]
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	681a      	ldr	r2, [r3, #0]
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	2140      	movs	r1, #64	; 0x40
 80065d4:	438a      	bics	r2, r1
 80065d6:	601a      	str	r2, [r3, #0]
 80065d8:	697b      	ldr	r3, [r7, #20]
 80065da:	613b      	str	r3, [r7, #16]
 80065dc:	693b      	ldr	r3, [r7, #16]
 80065de:	f383 8810 	msr	PRIMASK, r3
 80065e2:	46c0      	nop			; (mov r8, r8)
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	2220      	movs	r2, #32
 80065e8:	67da      	str	r2, [r3, #124]	; 0x7c
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	2200      	movs	r2, #0
 80065ee:	66da      	str	r2, [r3, #108]	; 0x6c
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	0018      	movs	r0, r3
 80065f4:	f7ff fb86 	bl	8005d04 <HAL_UART_TxCpltCallback>
 80065f8:	46c0      	nop			; (mov r8, r8)
 80065fa:	46bd      	mov	sp, r7
 80065fc:	b006      	add	sp, #24
 80065fe:	bd80      	pop	{r7, pc}

08006600 <UART_RxISR_8BIT>:
 8006600:	b580      	push	{r7, lr}
 8006602:	b094      	sub	sp, #80	; 0x50
 8006604:	af00      	add	r7, sp, #0
 8006606:	6078      	str	r0, [r7, #4]
 8006608:	204e      	movs	r0, #78	; 0x4e
 800660a:	183b      	adds	r3, r7, r0
 800660c:	687a      	ldr	r2, [r7, #4]
 800660e:	215c      	movs	r1, #92	; 0x5c
 8006610:	5a52      	ldrh	r2, [r2, r1]
 8006612:	801a      	strh	r2, [r3, #0]
 8006614:	687b      	ldr	r3, [r7, #4]
 8006616:	2280      	movs	r2, #128	; 0x80
 8006618:	589b      	ldr	r3, [r3, r2]
 800661a:	2b22      	cmp	r3, #34	; 0x22
 800661c:	d000      	beq.n	8006620 <UART_RxISR_8BIT+0x20>
 800661e:	e0ba      	b.n	8006796 <UART_RxISR_8BIT+0x196>
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	681a      	ldr	r2, [r3, #0]
 8006624:	214c      	movs	r1, #76	; 0x4c
 8006626:	187b      	adds	r3, r7, r1
 8006628:	8c92      	ldrh	r2, [r2, #36]	; 0x24
 800662a:	801a      	strh	r2, [r3, #0]
 800662c:	187b      	adds	r3, r7, r1
 800662e:	881b      	ldrh	r3, [r3, #0]
 8006630:	b2da      	uxtb	r2, r3
 8006632:	183b      	adds	r3, r7, r0
 8006634:	881b      	ldrh	r3, [r3, #0]
 8006636:	b2d9      	uxtb	r1, r3
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800663c:	400a      	ands	r2, r1
 800663e:	b2d2      	uxtb	r2, r2
 8006640:	701a      	strb	r2, [r3, #0]
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006646:	1c5a      	adds	r2, r3, #1
 8006648:	687b      	ldr	r3, [r7, #4]
 800664a:	655a      	str	r2, [r3, #84]	; 0x54
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	225a      	movs	r2, #90	; 0x5a
 8006650:	5a9b      	ldrh	r3, [r3, r2]
 8006652:	b29b      	uxth	r3, r3
 8006654:	3b01      	subs	r3, #1
 8006656:	b299      	uxth	r1, r3
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	225a      	movs	r2, #90	; 0x5a
 800665c:	5299      	strh	r1, [r3, r2]
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	225a      	movs	r2, #90	; 0x5a
 8006662:	5a9b      	ldrh	r3, [r3, r2]
 8006664:	b29b      	uxth	r3, r3
 8006666:	2b00      	cmp	r3, #0
 8006668:	d000      	beq.n	800666c <UART_RxISR_8BIT+0x6c>
 800666a:	e09c      	b.n	80067a6 <UART_RxISR_8BIT+0x1a6>
 800666c:	f3ef 8310 	mrs	r3, PRIMASK
 8006670:	627b      	str	r3, [r7, #36]	; 0x24
 8006672:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006674:	64bb      	str	r3, [r7, #72]	; 0x48
 8006676:	2301      	movs	r3, #1
 8006678:	62bb      	str	r3, [r7, #40]	; 0x28
 800667a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800667c:	f383 8810 	msr	PRIMASK, r3
 8006680:	46c0      	nop			; (mov r8, r8)
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	681b      	ldr	r3, [r3, #0]
 8006686:	681a      	ldr	r2, [r3, #0]
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	681b      	ldr	r3, [r3, #0]
 800668c:	4948      	ldr	r1, [pc, #288]	; (80067b0 <UART_RxISR_8BIT+0x1b0>)
 800668e:	400a      	ands	r2, r1
 8006690:	601a      	str	r2, [r3, #0]
 8006692:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006694:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006696:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006698:	f383 8810 	msr	PRIMASK, r3
 800669c:	46c0      	nop			; (mov r8, r8)
 800669e:	f3ef 8310 	mrs	r3, PRIMASK
 80066a2:	633b      	str	r3, [r7, #48]	; 0x30
 80066a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80066a6:	647b      	str	r3, [r7, #68]	; 0x44
 80066a8:	2301      	movs	r3, #1
 80066aa:	637b      	str	r3, [r7, #52]	; 0x34
 80066ac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80066ae:	f383 8810 	msr	PRIMASK, r3
 80066b2:	46c0      	nop			; (mov r8, r8)
 80066b4:	687b      	ldr	r3, [r7, #4]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	689a      	ldr	r2, [r3, #8]
 80066ba:	687b      	ldr	r3, [r7, #4]
 80066bc:	681b      	ldr	r3, [r3, #0]
 80066be:	2101      	movs	r1, #1
 80066c0:	438a      	bics	r2, r1
 80066c2:	609a      	str	r2, [r3, #8]
 80066c4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80066c6:	63bb      	str	r3, [r7, #56]	; 0x38
 80066c8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80066ca:	f383 8810 	msr	PRIMASK, r3
 80066ce:	46c0      	nop			; (mov r8, r8)
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	2280      	movs	r2, #128	; 0x80
 80066d4:	2120      	movs	r1, #32
 80066d6:	5099      	str	r1, [r3, r2]
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	2200      	movs	r2, #0
 80066dc:	669a      	str	r2, [r3, #104]	; 0x68
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	2200      	movs	r2, #0
 80066e2:	665a      	str	r2, [r3, #100]	; 0x64
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	685a      	ldr	r2, [r3, #4]
 80066ea:	2380      	movs	r3, #128	; 0x80
 80066ec:	041b      	lsls	r3, r3, #16
 80066ee:	4013      	ands	r3, r2
 80066f0:	d018      	beq.n	8006724 <UART_RxISR_8BIT+0x124>
 80066f2:	f3ef 8310 	mrs	r3, PRIMASK
 80066f6:	61bb      	str	r3, [r7, #24]
 80066f8:	69bb      	ldr	r3, [r7, #24]
 80066fa:	643b      	str	r3, [r7, #64]	; 0x40
 80066fc:	2301      	movs	r3, #1
 80066fe:	61fb      	str	r3, [r7, #28]
 8006700:	69fb      	ldr	r3, [r7, #28]
 8006702:	f383 8810 	msr	PRIMASK, r3
 8006706:	46c0      	nop			; (mov r8, r8)
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	681b      	ldr	r3, [r3, #0]
 800670c:	681a      	ldr	r2, [r3, #0]
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	4928      	ldr	r1, [pc, #160]	; (80067b4 <UART_RxISR_8BIT+0x1b4>)
 8006714:	400a      	ands	r2, r1
 8006716:	601a      	str	r2, [r3, #0]
 8006718:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800671a:	623b      	str	r3, [r7, #32]
 800671c:	6a3b      	ldr	r3, [r7, #32]
 800671e:	f383 8810 	msr	PRIMASK, r3
 8006722:	46c0      	nop			; (mov r8, r8)
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006728:	2b01      	cmp	r3, #1
 800672a:	d12f      	bne.n	800678c <UART_RxISR_8BIT+0x18c>
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	2200      	movs	r2, #0
 8006730:	661a      	str	r2, [r3, #96]	; 0x60
 8006732:	f3ef 8310 	mrs	r3, PRIMASK
 8006736:	60fb      	str	r3, [r7, #12]
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800673c:	2301      	movs	r3, #1
 800673e:	613b      	str	r3, [r7, #16]
 8006740:	693b      	ldr	r3, [r7, #16]
 8006742:	f383 8810 	msr	PRIMASK, r3
 8006746:	46c0      	nop			; (mov r8, r8)
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	681b      	ldr	r3, [r3, #0]
 800674c:	681a      	ldr	r2, [r3, #0]
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	681b      	ldr	r3, [r3, #0]
 8006752:	2110      	movs	r1, #16
 8006754:	438a      	bics	r2, r1
 8006756:	601a      	str	r2, [r3, #0]
 8006758:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800675a:	617b      	str	r3, [r7, #20]
 800675c:	697b      	ldr	r3, [r7, #20]
 800675e:	f383 8810 	msr	PRIMASK, r3
 8006762:	46c0      	nop			; (mov r8, r8)
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	681b      	ldr	r3, [r3, #0]
 8006768:	69db      	ldr	r3, [r3, #28]
 800676a:	2210      	movs	r2, #16
 800676c:	4013      	ands	r3, r2
 800676e:	2b10      	cmp	r3, #16
 8006770:	d103      	bne.n	800677a <UART_RxISR_8BIT+0x17a>
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	2210      	movs	r2, #16
 8006778:	621a      	str	r2, [r3, #32]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	2258      	movs	r2, #88	; 0x58
 800677e:	5a9a      	ldrh	r2, [r3, r2]
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	0011      	movs	r1, r2
 8006784:	0018      	movs	r0, r3
 8006786:	f7ff facd 	bl	8005d24 <HAL_UARTEx_RxEventCallback>
 800678a:	e00c      	b.n	80067a6 <UART_RxISR_8BIT+0x1a6>
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	0018      	movs	r0, r3
 8006790:	f7fa fb28 	bl	8000de4 <HAL_UART_RxCpltCallback>
 8006794:	e007      	b.n	80067a6 <UART_RxISR_8BIT+0x1a6>
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	699a      	ldr	r2, [r3, #24]
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	2108      	movs	r1, #8
 80067a2:	430a      	orrs	r2, r1
 80067a4:	619a      	str	r2, [r3, #24]
 80067a6:	46c0      	nop			; (mov r8, r8)
 80067a8:	46bd      	mov	sp, r7
 80067aa:	b014      	add	sp, #80	; 0x50
 80067ac:	bd80      	pop	{r7, pc}
 80067ae:	46c0      	nop			; (mov r8, r8)
 80067b0:	fffffedf 	.word	0xfffffedf
 80067b4:	fbffffff 	.word	0xfbffffff

080067b8 <UART_RxISR_16BIT>:
 80067b8:	b580      	push	{r7, lr}
 80067ba:	b094      	sub	sp, #80	; 0x50
 80067bc:	af00      	add	r7, sp, #0
 80067be:	6078      	str	r0, [r7, #4]
 80067c0:	204e      	movs	r0, #78	; 0x4e
 80067c2:	183b      	adds	r3, r7, r0
 80067c4:	687a      	ldr	r2, [r7, #4]
 80067c6:	215c      	movs	r1, #92	; 0x5c
 80067c8:	5a52      	ldrh	r2, [r2, r1]
 80067ca:	801a      	strh	r2, [r3, #0]
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	2280      	movs	r2, #128	; 0x80
 80067d0:	589b      	ldr	r3, [r3, r2]
 80067d2:	2b22      	cmp	r3, #34	; 0x22
 80067d4:	d000      	beq.n	80067d8 <UART_RxISR_16BIT+0x20>
 80067d6:	e0ba      	b.n	800694e <UART_RxISR_16BIT+0x196>
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	681a      	ldr	r2, [r3, #0]
 80067dc:	214c      	movs	r1, #76	; 0x4c
 80067de:	187b      	adds	r3, r7, r1
 80067e0:	8c92      	ldrh	r2, [r2, #36]	; 0x24
 80067e2:	801a      	strh	r2, [r3, #0]
 80067e4:	687b      	ldr	r3, [r7, #4]
 80067e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80067e8:	64bb      	str	r3, [r7, #72]	; 0x48
 80067ea:	187b      	adds	r3, r7, r1
 80067ec:	183a      	adds	r2, r7, r0
 80067ee:	881b      	ldrh	r3, [r3, #0]
 80067f0:	8812      	ldrh	r2, [r2, #0]
 80067f2:	4013      	ands	r3, r2
 80067f4:	b29a      	uxth	r2, r3
 80067f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80067f8:	801a      	strh	r2, [r3, #0]
 80067fa:	687b      	ldr	r3, [r7, #4]
 80067fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80067fe:	1c9a      	adds	r2, r3, #2
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	655a      	str	r2, [r3, #84]	; 0x54
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	225a      	movs	r2, #90	; 0x5a
 8006808:	5a9b      	ldrh	r3, [r3, r2]
 800680a:	b29b      	uxth	r3, r3
 800680c:	3b01      	subs	r3, #1
 800680e:	b299      	uxth	r1, r3
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	225a      	movs	r2, #90	; 0x5a
 8006814:	5299      	strh	r1, [r3, r2]
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	225a      	movs	r2, #90	; 0x5a
 800681a:	5a9b      	ldrh	r3, [r3, r2]
 800681c:	b29b      	uxth	r3, r3
 800681e:	2b00      	cmp	r3, #0
 8006820:	d000      	beq.n	8006824 <UART_RxISR_16BIT+0x6c>
 8006822:	e09c      	b.n	800695e <UART_RxISR_16BIT+0x1a6>
 8006824:	f3ef 8310 	mrs	r3, PRIMASK
 8006828:	623b      	str	r3, [r7, #32]
 800682a:	6a3b      	ldr	r3, [r7, #32]
 800682c:	647b      	str	r3, [r7, #68]	; 0x44
 800682e:	2301      	movs	r3, #1
 8006830:	627b      	str	r3, [r7, #36]	; 0x24
 8006832:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006834:	f383 8810 	msr	PRIMASK, r3
 8006838:	46c0      	nop			; (mov r8, r8)
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	681b      	ldr	r3, [r3, #0]
 800683e:	681a      	ldr	r2, [r3, #0]
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	4948      	ldr	r1, [pc, #288]	; (8006968 <UART_RxISR_16BIT+0x1b0>)
 8006846:	400a      	ands	r2, r1
 8006848:	601a      	str	r2, [r3, #0]
 800684a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800684c:	62bb      	str	r3, [r7, #40]	; 0x28
 800684e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006850:	f383 8810 	msr	PRIMASK, r3
 8006854:	46c0      	nop			; (mov r8, r8)
 8006856:	f3ef 8310 	mrs	r3, PRIMASK
 800685a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800685c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800685e:	643b      	str	r3, [r7, #64]	; 0x40
 8006860:	2301      	movs	r3, #1
 8006862:	633b      	str	r3, [r7, #48]	; 0x30
 8006864:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006866:	f383 8810 	msr	PRIMASK, r3
 800686a:	46c0      	nop			; (mov r8, r8)
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	689a      	ldr	r2, [r3, #8]
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	681b      	ldr	r3, [r3, #0]
 8006876:	2101      	movs	r1, #1
 8006878:	438a      	bics	r2, r1
 800687a:	609a      	str	r2, [r3, #8]
 800687c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800687e:	637b      	str	r3, [r7, #52]	; 0x34
 8006880:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006882:	f383 8810 	msr	PRIMASK, r3
 8006886:	46c0      	nop			; (mov r8, r8)
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	2280      	movs	r2, #128	; 0x80
 800688c:	2120      	movs	r1, #32
 800688e:	5099      	str	r1, [r3, r2]
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	2200      	movs	r2, #0
 8006894:	669a      	str	r2, [r3, #104]	; 0x68
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	2200      	movs	r2, #0
 800689a:	665a      	str	r2, [r3, #100]	; 0x64
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	685a      	ldr	r2, [r3, #4]
 80068a2:	2380      	movs	r3, #128	; 0x80
 80068a4:	041b      	lsls	r3, r3, #16
 80068a6:	4013      	ands	r3, r2
 80068a8:	d018      	beq.n	80068dc <UART_RxISR_16BIT+0x124>
 80068aa:	f3ef 8310 	mrs	r3, PRIMASK
 80068ae:	617b      	str	r3, [r7, #20]
 80068b0:	697b      	ldr	r3, [r7, #20]
 80068b2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80068b4:	2301      	movs	r3, #1
 80068b6:	61bb      	str	r3, [r7, #24]
 80068b8:	69bb      	ldr	r3, [r7, #24]
 80068ba:	f383 8810 	msr	PRIMASK, r3
 80068be:	46c0      	nop			; (mov r8, r8)
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	681a      	ldr	r2, [r3, #0]
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	4928      	ldr	r1, [pc, #160]	; (800696c <UART_RxISR_16BIT+0x1b4>)
 80068cc:	400a      	ands	r2, r1
 80068ce:	601a      	str	r2, [r3, #0]
 80068d0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80068d2:	61fb      	str	r3, [r7, #28]
 80068d4:	69fb      	ldr	r3, [r7, #28]
 80068d6:	f383 8810 	msr	PRIMASK, r3
 80068da:	46c0      	nop			; (mov r8, r8)
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80068e0:	2b01      	cmp	r3, #1
 80068e2:	d12f      	bne.n	8006944 <UART_RxISR_16BIT+0x18c>
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	2200      	movs	r2, #0
 80068e8:	661a      	str	r2, [r3, #96]	; 0x60
 80068ea:	f3ef 8310 	mrs	r3, PRIMASK
 80068ee:	60bb      	str	r3, [r7, #8]
 80068f0:	68bb      	ldr	r3, [r7, #8]
 80068f2:	63bb      	str	r3, [r7, #56]	; 0x38
 80068f4:	2301      	movs	r3, #1
 80068f6:	60fb      	str	r3, [r7, #12]
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	f383 8810 	msr	PRIMASK, r3
 80068fe:	46c0      	nop			; (mov r8, r8)
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	681b      	ldr	r3, [r3, #0]
 8006904:	681a      	ldr	r2, [r3, #0]
 8006906:	687b      	ldr	r3, [r7, #4]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	2110      	movs	r1, #16
 800690c:	438a      	bics	r2, r1
 800690e:	601a      	str	r2, [r3, #0]
 8006910:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006912:	613b      	str	r3, [r7, #16]
 8006914:	693b      	ldr	r3, [r7, #16]
 8006916:	f383 8810 	msr	PRIMASK, r3
 800691a:	46c0      	nop			; (mov r8, r8)
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	681b      	ldr	r3, [r3, #0]
 8006920:	69db      	ldr	r3, [r3, #28]
 8006922:	2210      	movs	r2, #16
 8006924:	4013      	ands	r3, r2
 8006926:	2b10      	cmp	r3, #16
 8006928:	d103      	bne.n	8006932 <UART_RxISR_16BIT+0x17a>
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	681b      	ldr	r3, [r3, #0]
 800692e:	2210      	movs	r2, #16
 8006930:	621a      	str	r2, [r3, #32]
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	2258      	movs	r2, #88	; 0x58
 8006936:	5a9a      	ldrh	r2, [r3, r2]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	0011      	movs	r1, r2
 800693c:	0018      	movs	r0, r3
 800693e:	f7ff f9f1 	bl	8005d24 <HAL_UARTEx_RxEventCallback>
 8006942:	e00c      	b.n	800695e <UART_RxISR_16BIT+0x1a6>
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	0018      	movs	r0, r3
 8006948:	f7fa fa4c 	bl	8000de4 <HAL_UART_RxCpltCallback>
 800694c:	e007      	b.n	800695e <UART_RxISR_16BIT+0x1a6>
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	681b      	ldr	r3, [r3, #0]
 8006952:	699a      	ldr	r2, [r3, #24]
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	681b      	ldr	r3, [r3, #0]
 8006958:	2108      	movs	r1, #8
 800695a:	430a      	orrs	r2, r1
 800695c:	619a      	str	r2, [r3, #24]
 800695e:	46c0      	nop			; (mov r8, r8)
 8006960:	46bd      	mov	sp, r7
 8006962:	b014      	add	sp, #80	; 0x50
 8006964:	bd80      	pop	{r7, pc}
 8006966:	46c0      	nop			; (mov r8, r8)
 8006968:	fffffedf 	.word	0xfffffedf
 800696c:	fbffffff 	.word	0xfbffffff

08006970 <siprintf>:
 8006970:	b40e      	push	{r1, r2, r3}
 8006972:	b500      	push	{lr}
 8006974:	490b      	ldr	r1, [pc, #44]	; (80069a4 <siprintf+0x34>)
 8006976:	b09c      	sub	sp, #112	; 0x70
 8006978:	ab1d      	add	r3, sp, #116	; 0x74
 800697a:	9002      	str	r0, [sp, #8]
 800697c:	9006      	str	r0, [sp, #24]
 800697e:	9107      	str	r1, [sp, #28]
 8006980:	9104      	str	r1, [sp, #16]
 8006982:	4809      	ldr	r0, [pc, #36]	; (80069a8 <siprintf+0x38>)
 8006984:	4909      	ldr	r1, [pc, #36]	; (80069ac <siprintf+0x3c>)
 8006986:	cb04      	ldmia	r3!, {r2}
 8006988:	9105      	str	r1, [sp, #20]
 800698a:	6800      	ldr	r0, [r0, #0]
 800698c:	a902      	add	r1, sp, #8
 800698e:	9301      	str	r3, [sp, #4]
 8006990:	f000 f9a2 	bl	8006cd8 <_svfiprintf_r>
 8006994:	2200      	movs	r2, #0
 8006996:	9b02      	ldr	r3, [sp, #8]
 8006998:	701a      	strb	r2, [r3, #0]
 800699a:	b01c      	add	sp, #112	; 0x70
 800699c:	bc08      	pop	{r3}
 800699e:	b003      	add	sp, #12
 80069a0:	4718      	bx	r3
 80069a2:	46c0      	nop			; (mov r8, r8)
 80069a4:	7fffffff 	.word	0x7fffffff
 80069a8:	20000064 	.word	0x20000064
 80069ac:	ffff0208 	.word	0xffff0208

080069b0 <memset>:
 80069b0:	0003      	movs	r3, r0
 80069b2:	1882      	adds	r2, r0, r2
 80069b4:	4293      	cmp	r3, r2
 80069b6:	d100      	bne.n	80069ba <memset+0xa>
 80069b8:	4770      	bx	lr
 80069ba:	7019      	strb	r1, [r3, #0]
 80069bc:	3301      	adds	r3, #1
 80069be:	e7f9      	b.n	80069b4 <memset+0x4>

080069c0 <__errno>:
 80069c0:	4b01      	ldr	r3, [pc, #4]	; (80069c8 <__errno+0x8>)
 80069c2:	6818      	ldr	r0, [r3, #0]
 80069c4:	4770      	bx	lr
 80069c6:	46c0      	nop			; (mov r8, r8)
 80069c8:	20000064 	.word	0x20000064

080069cc <__libc_init_array>:
 80069cc:	b570      	push	{r4, r5, r6, lr}
 80069ce:	2600      	movs	r6, #0
 80069d0:	4c0c      	ldr	r4, [pc, #48]	; (8006a04 <__libc_init_array+0x38>)
 80069d2:	4d0d      	ldr	r5, [pc, #52]	; (8006a08 <__libc_init_array+0x3c>)
 80069d4:	1b64      	subs	r4, r4, r5
 80069d6:	10a4      	asrs	r4, r4, #2
 80069d8:	42a6      	cmp	r6, r4
 80069da:	d109      	bne.n	80069f0 <__libc_init_array+0x24>
 80069dc:	2600      	movs	r6, #0
 80069de:	f000 fc6d 	bl	80072bc <_init>
 80069e2:	4c0a      	ldr	r4, [pc, #40]	; (8006a0c <__libc_init_array+0x40>)
 80069e4:	4d0a      	ldr	r5, [pc, #40]	; (8006a10 <__libc_init_array+0x44>)
 80069e6:	1b64      	subs	r4, r4, r5
 80069e8:	10a4      	asrs	r4, r4, #2
 80069ea:	42a6      	cmp	r6, r4
 80069ec:	d105      	bne.n	80069fa <__libc_init_array+0x2e>
 80069ee:	bd70      	pop	{r4, r5, r6, pc}
 80069f0:	00b3      	lsls	r3, r6, #2
 80069f2:	58eb      	ldr	r3, [r5, r3]
 80069f4:	4798      	blx	r3
 80069f6:	3601      	adds	r6, #1
 80069f8:	e7ee      	b.n	80069d8 <__libc_init_array+0xc>
 80069fa:	00b3      	lsls	r3, r6, #2
 80069fc:	58eb      	ldr	r3, [r5, r3]
 80069fe:	4798      	blx	r3
 8006a00:	3601      	adds	r6, #1
 8006a02:	e7f2      	b.n	80069ea <__libc_init_array+0x1e>
 8006a04:	08007580 	.word	0x08007580
 8006a08:	08007580 	.word	0x08007580
 8006a0c:	08007584 	.word	0x08007584
 8006a10:	08007580 	.word	0x08007580

08006a14 <__retarget_lock_acquire_recursive>:
 8006a14:	4770      	bx	lr

08006a16 <__retarget_lock_release_recursive>:
 8006a16:	4770      	bx	lr

08006a18 <_free_r>:
 8006a18:	b570      	push	{r4, r5, r6, lr}
 8006a1a:	0005      	movs	r5, r0
 8006a1c:	2900      	cmp	r1, #0
 8006a1e:	d010      	beq.n	8006a42 <_free_r+0x2a>
 8006a20:	1f0c      	subs	r4, r1, #4
 8006a22:	6823      	ldr	r3, [r4, #0]
 8006a24:	2b00      	cmp	r3, #0
 8006a26:	da00      	bge.n	8006a2a <_free_r+0x12>
 8006a28:	18e4      	adds	r4, r4, r3
 8006a2a:	0028      	movs	r0, r5
 8006a2c:	f000 f8e2 	bl	8006bf4 <__malloc_lock>
 8006a30:	4a1d      	ldr	r2, [pc, #116]	; (8006aa8 <_free_r+0x90>)
 8006a32:	6813      	ldr	r3, [r2, #0]
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	d105      	bne.n	8006a44 <_free_r+0x2c>
 8006a38:	6063      	str	r3, [r4, #4]
 8006a3a:	6014      	str	r4, [r2, #0]
 8006a3c:	0028      	movs	r0, r5
 8006a3e:	f000 f8e1 	bl	8006c04 <__malloc_unlock>
 8006a42:	bd70      	pop	{r4, r5, r6, pc}
 8006a44:	42a3      	cmp	r3, r4
 8006a46:	d908      	bls.n	8006a5a <_free_r+0x42>
 8006a48:	6820      	ldr	r0, [r4, #0]
 8006a4a:	1821      	adds	r1, r4, r0
 8006a4c:	428b      	cmp	r3, r1
 8006a4e:	d1f3      	bne.n	8006a38 <_free_r+0x20>
 8006a50:	6819      	ldr	r1, [r3, #0]
 8006a52:	685b      	ldr	r3, [r3, #4]
 8006a54:	1809      	adds	r1, r1, r0
 8006a56:	6021      	str	r1, [r4, #0]
 8006a58:	e7ee      	b.n	8006a38 <_free_r+0x20>
 8006a5a:	001a      	movs	r2, r3
 8006a5c:	685b      	ldr	r3, [r3, #4]
 8006a5e:	2b00      	cmp	r3, #0
 8006a60:	d001      	beq.n	8006a66 <_free_r+0x4e>
 8006a62:	42a3      	cmp	r3, r4
 8006a64:	d9f9      	bls.n	8006a5a <_free_r+0x42>
 8006a66:	6811      	ldr	r1, [r2, #0]
 8006a68:	1850      	adds	r0, r2, r1
 8006a6a:	42a0      	cmp	r0, r4
 8006a6c:	d10b      	bne.n	8006a86 <_free_r+0x6e>
 8006a6e:	6820      	ldr	r0, [r4, #0]
 8006a70:	1809      	adds	r1, r1, r0
 8006a72:	1850      	adds	r0, r2, r1
 8006a74:	6011      	str	r1, [r2, #0]
 8006a76:	4283      	cmp	r3, r0
 8006a78:	d1e0      	bne.n	8006a3c <_free_r+0x24>
 8006a7a:	6818      	ldr	r0, [r3, #0]
 8006a7c:	685b      	ldr	r3, [r3, #4]
 8006a7e:	1841      	adds	r1, r0, r1
 8006a80:	6011      	str	r1, [r2, #0]
 8006a82:	6053      	str	r3, [r2, #4]
 8006a84:	e7da      	b.n	8006a3c <_free_r+0x24>
 8006a86:	42a0      	cmp	r0, r4
 8006a88:	d902      	bls.n	8006a90 <_free_r+0x78>
 8006a8a:	230c      	movs	r3, #12
 8006a8c:	602b      	str	r3, [r5, #0]
 8006a8e:	e7d5      	b.n	8006a3c <_free_r+0x24>
 8006a90:	6820      	ldr	r0, [r4, #0]
 8006a92:	1821      	adds	r1, r4, r0
 8006a94:	428b      	cmp	r3, r1
 8006a96:	d103      	bne.n	8006aa0 <_free_r+0x88>
 8006a98:	6819      	ldr	r1, [r3, #0]
 8006a9a:	685b      	ldr	r3, [r3, #4]
 8006a9c:	1809      	adds	r1, r1, r0
 8006a9e:	6021      	str	r1, [r4, #0]
 8006aa0:	6063      	str	r3, [r4, #4]
 8006aa2:	6054      	str	r4, [r2, #4]
 8006aa4:	e7ca      	b.n	8006a3c <_free_r+0x24>
 8006aa6:	46c0      	nop			; (mov r8, r8)
 8006aa8:	20000374 	.word	0x20000374

08006aac <sbrk_aligned>:
 8006aac:	b570      	push	{r4, r5, r6, lr}
 8006aae:	4e0f      	ldr	r6, [pc, #60]	; (8006aec <sbrk_aligned+0x40>)
 8006ab0:	000d      	movs	r5, r1
 8006ab2:	6831      	ldr	r1, [r6, #0]
 8006ab4:	0004      	movs	r4, r0
 8006ab6:	2900      	cmp	r1, #0
 8006ab8:	d102      	bne.n	8006ac0 <sbrk_aligned+0x14>
 8006aba:	f000 fba1 	bl	8007200 <_sbrk_r>
 8006abe:	6030      	str	r0, [r6, #0]
 8006ac0:	0029      	movs	r1, r5
 8006ac2:	0020      	movs	r0, r4
 8006ac4:	f000 fb9c 	bl	8007200 <_sbrk_r>
 8006ac8:	1c43      	adds	r3, r0, #1
 8006aca:	d00a      	beq.n	8006ae2 <sbrk_aligned+0x36>
 8006acc:	2303      	movs	r3, #3
 8006ace:	1cc5      	adds	r5, r0, #3
 8006ad0:	439d      	bics	r5, r3
 8006ad2:	42a8      	cmp	r0, r5
 8006ad4:	d007      	beq.n	8006ae6 <sbrk_aligned+0x3a>
 8006ad6:	1a29      	subs	r1, r5, r0
 8006ad8:	0020      	movs	r0, r4
 8006ada:	f000 fb91 	bl	8007200 <_sbrk_r>
 8006ade:	3001      	adds	r0, #1
 8006ae0:	d101      	bne.n	8006ae6 <sbrk_aligned+0x3a>
 8006ae2:	2501      	movs	r5, #1
 8006ae4:	426d      	negs	r5, r5
 8006ae6:	0028      	movs	r0, r5
 8006ae8:	bd70      	pop	{r4, r5, r6, pc}
 8006aea:	46c0      	nop			; (mov r8, r8)
 8006aec:	20000378 	.word	0x20000378

08006af0 <_malloc_r>:
 8006af0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006af2:	2203      	movs	r2, #3
 8006af4:	1ccb      	adds	r3, r1, #3
 8006af6:	4393      	bics	r3, r2
 8006af8:	3308      	adds	r3, #8
 8006afa:	0006      	movs	r6, r0
 8006afc:	001f      	movs	r7, r3
 8006afe:	2b0c      	cmp	r3, #12
 8006b00:	d238      	bcs.n	8006b74 <_malloc_r+0x84>
 8006b02:	270c      	movs	r7, #12
 8006b04:	42b9      	cmp	r1, r7
 8006b06:	d837      	bhi.n	8006b78 <_malloc_r+0x88>
 8006b08:	0030      	movs	r0, r6
 8006b0a:	f000 f873 	bl	8006bf4 <__malloc_lock>
 8006b0e:	4b38      	ldr	r3, [pc, #224]	; (8006bf0 <_malloc_r+0x100>)
 8006b10:	9300      	str	r3, [sp, #0]
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	001c      	movs	r4, r3
 8006b16:	2c00      	cmp	r4, #0
 8006b18:	d133      	bne.n	8006b82 <_malloc_r+0x92>
 8006b1a:	0039      	movs	r1, r7
 8006b1c:	0030      	movs	r0, r6
 8006b1e:	f7ff ffc5 	bl	8006aac <sbrk_aligned>
 8006b22:	0004      	movs	r4, r0
 8006b24:	1c43      	adds	r3, r0, #1
 8006b26:	d15e      	bne.n	8006be6 <_malloc_r+0xf6>
 8006b28:	9b00      	ldr	r3, [sp, #0]
 8006b2a:	681c      	ldr	r4, [r3, #0]
 8006b2c:	0025      	movs	r5, r4
 8006b2e:	2d00      	cmp	r5, #0
 8006b30:	d14e      	bne.n	8006bd0 <_malloc_r+0xe0>
 8006b32:	2c00      	cmp	r4, #0
 8006b34:	d051      	beq.n	8006bda <_malloc_r+0xea>
 8006b36:	6823      	ldr	r3, [r4, #0]
 8006b38:	0029      	movs	r1, r5
 8006b3a:	18e3      	adds	r3, r4, r3
 8006b3c:	0030      	movs	r0, r6
 8006b3e:	9301      	str	r3, [sp, #4]
 8006b40:	f000 fb5e 	bl	8007200 <_sbrk_r>
 8006b44:	9b01      	ldr	r3, [sp, #4]
 8006b46:	4283      	cmp	r3, r0
 8006b48:	d147      	bne.n	8006bda <_malloc_r+0xea>
 8006b4a:	6823      	ldr	r3, [r4, #0]
 8006b4c:	0030      	movs	r0, r6
 8006b4e:	1aff      	subs	r7, r7, r3
 8006b50:	0039      	movs	r1, r7
 8006b52:	f7ff ffab 	bl	8006aac <sbrk_aligned>
 8006b56:	3001      	adds	r0, #1
 8006b58:	d03f      	beq.n	8006bda <_malloc_r+0xea>
 8006b5a:	6823      	ldr	r3, [r4, #0]
 8006b5c:	19db      	adds	r3, r3, r7
 8006b5e:	6023      	str	r3, [r4, #0]
 8006b60:	9b00      	ldr	r3, [sp, #0]
 8006b62:	681b      	ldr	r3, [r3, #0]
 8006b64:	2b00      	cmp	r3, #0
 8006b66:	d040      	beq.n	8006bea <_malloc_r+0xfa>
 8006b68:	685a      	ldr	r2, [r3, #4]
 8006b6a:	42a2      	cmp	r2, r4
 8006b6c:	d133      	bne.n	8006bd6 <_malloc_r+0xe6>
 8006b6e:	2200      	movs	r2, #0
 8006b70:	605a      	str	r2, [r3, #4]
 8006b72:	e014      	b.n	8006b9e <_malloc_r+0xae>
 8006b74:	2b00      	cmp	r3, #0
 8006b76:	dac5      	bge.n	8006b04 <_malloc_r+0x14>
 8006b78:	230c      	movs	r3, #12
 8006b7a:	2500      	movs	r5, #0
 8006b7c:	6033      	str	r3, [r6, #0]
 8006b7e:	0028      	movs	r0, r5
 8006b80:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006b82:	6821      	ldr	r1, [r4, #0]
 8006b84:	1bc9      	subs	r1, r1, r7
 8006b86:	d420      	bmi.n	8006bca <_malloc_r+0xda>
 8006b88:	290b      	cmp	r1, #11
 8006b8a:	d918      	bls.n	8006bbe <_malloc_r+0xce>
 8006b8c:	19e2      	adds	r2, r4, r7
 8006b8e:	6027      	str	r7, [r4, #0]
 8006b90:	42a3      	cmp	r3, r4
 8006b92:	d112      	bne.n	8006bba <_malloc_r+0xca>
 8006b94:	9b00      	ldr	r3, [sp, #0]
 8006b96:	601a      	str	r2, [r3, #0]
 8006b98:	6863      	ldr	r3, [r4, #4]
 8006b9a:	6011      	str	r1, [r2, #0]
 8006b9c:	6053      	str	r3, [r2, #4]
 8006b9e:	0030      	movs	r0, r6
 8006ba0:	0025      	movs	r5, r4
 8006ba2:	f000 f82f 	bl	8006c04 <__malloc_unlock>
 8006ba6:	2207      	movs	r2, #7
 8006ba8:	350b      	adds	r5, #11
 8006baa:	1d23      	adds	r3, r4, #4
 8006bac:	4395      	bics	r5, r2
 8006bae:	1aea      	subs	r2, r5, r3
 8006bb0:	429d      	cmp	r5, r3
 8006bb2:	d0e4      	beq.n	8006b7e <_malloc_r+0x8e>
 8006bb4:	1b5b      	subs	r3, r3, r5
 8006bb6:	50a3      	str	r3, [r4, r2]
 8006bb8:	e7e1      	b.n	8006b7e <_malloc_r+0x8e>
 8006bba:	605a      	str	r2, [r3, #4]
 8006bbc:	e7ec      	b.n	8006b98 <_malloc_r+0xa8>
 8006bbe:	6862      	ldr	r2, [r4, #4]
 8006bc0:	42a3      	cmp	r3, r4
 8006bc2:	d1d5      	bne.n	8006b70 <_malloc_r+0x80>
 8006bc4:	9b00      	ldr	r3, [sp, #0]
 8006bc6:	601a      	str	r2, [r3, #0]
 8006bc8:	e7e9      	b.n	8006b9e <_malloc_r+0xae>
 8006bca:	0023      	movs	r3, r4
 8006bcc:	6864      	ldr	r4, [r4, #4]
 8006bce:	e7a2      	b.n	8006b16 <_malloc_r+0x26>
 8006bd0:	002c      	movs	r4, r5
 8006bd2:	686d      	ldr	r5, [r5, #4]
 8006bd4:	e7ab      	b.n	8006b2e <_malloc_r+0x3e>
 8006bd6:	0013      	movs	r3, r2
 8006bd8:	e7c4      	b.n	8006b64 <_malloc_r+0x74>
 8006bda:	230c      	movs	r3, #12
 8006bdc:	0030      	movs	r0, r6
 8006bde:	6033      	str	r3, [r6, #0]
 8006be0:	f000 f810 	bl	8006c04 <__malloc_unlock>
 8006be4:	e7cb      	b.n	8006b7e <_malloc_r+0x8e>
 8006be6:	6027      	str	r7, [r4, #0]
 8006be8:	e7d9      	b.n	8006b9e <_malloc_r+0xae>
 8006bea:	605b      	str	r3, [r3, #4]
 8006bec:	deff      	udf	#255	; 0xff
 8006bee:	46c0      	nop			; (mov r8, r8)
 8006bf0:	20000374 	.word	0x20000374

08006bf4 <__malloc_lock>:
 8006bf4:	b510      	push	{r4, lr}
 8006bf6:	4802      	ldr	r0, [pc, #8]	; (8006c00 <__malloc_lock+0xc>)
 8006bf8:	f7ff ff0c 	bl	8006a14 <__retarget_lock_acquire_recursive>
 8006bfc:	bd10      	pop	{r4, pc}
 8006bfe:	46c0      	nop			; (mov r8, r8)
 8006c00:	20000370 	.word	0x20000370

08006c04 <__malloc_unlock>:
 8006c04:	b510      	push	{r4, lr}
 8006c06:	4802      	ldr	r0, [pc, #8]	; (8006c10 <__malloc_unlock+0xc>)
 8006c08:	f7ff ff05 	bl	8006a16 <__retarget_lock_release_recursive>
 8006c0c:	bd10      	pop	{r4, pc}
 8006c0e:	46c0      	nop			; (mov r8, r8)
 8006c10:	20000370 	.word	0x20000370

08006c14 <__ssputs_r>:
 8006c14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006c16:	b085      	sub	sp, #20
 8006c18:	9301      	str	r3, [sp, #4]
 8006c1a:	9203      	str	r2, [sp, #12]
 8006c1c:	688e      	ldr	r6, [r1, #8]
 8006c1e:	9a01      	ldr	r2, [sp, #4]
 8006c20:	0007      	movs	r7, r0
 8006c22:	000c      	movs	r4, r1
 8006c24:	680b      	ldr	r3, [r1, #0]
 8006c26:	4296      	cmp	r6, r2
 8006c28:	d831      	bhi.n	8006c8e <__ssputs_r+0x7a>
 8006c2a:	898a      	ldrh	r2, [r1, #12]
 8006c2c:	2190      	movs	r1, #144	; 0x90
 8006c2e:	00c9      	lsls	r1, r1, #3
 8006c30:	420a      	tst	r2, r1
 8006c32:	d029      	beq.n	8006c88 <__ssputs_r+0x74>
 8006c34:	2003      	movs	r0, #3
 8006c36:	6921      	ldr	r1, [r4, #16]
 8006c38:	1a5b      	subs	r3, r3, r1
 8006c3a:	9302      	str	r3, [sp, #8]
 8006c3c:	6963      	ldr	r3, [r4, #20]
 8006c3e:	4343      	muls	r3, r0
 8006c40:	0fdd      	lsrs	r5, r3, #31
 8006c42:	18ed      	adds	r5, r5, r3
 8006c44:	9b01      	ldr	r3, [sp, #4]
 8006c46:	9802      	ldr	r0, [sp, #8]
 8006c48:	3301      	adds	r3, #1
 8006c4a:	181b      	adds	r3, r3, r0
 8006c4c:	106d      	asrs	r5, r5, #1
 8006c4e:	42ab      	cmp	r3, r5
 8006c50:	d900      	bls.n	8006c54 <__ssputs_r+0x40>
 8006c52:	001d      	movs	r5, r3
 8006c54:	0552      	lsls	r2, r2, #21
 8006c56:	d529      	bpl.n	8006cac <__ssputs_r+0x98>
 8006c58:	0029      	movs	r1, r5
 8006c5a:	0038      	movs	r0, r7
 8006c5c:	f7ff ff48 	bl	8006af0 <_malloc_r>
 8006c60:	1e06      	subs	r6, r0, #0
 8006c62:	d02d      	beq.n	8006cc0 <__ssputs_r+0xac>
 8006c64:	9a02      	ldr	r2, [sp, #8]
 8006c66:	6921      	ldr	r1, [r4, #16]
 8006c68:	f000 fae7 	bl	800723a <memcpy>
 8006c6c:	89a2      	ldrh	r2, [r4, #12]
 8006c6e:	4b19      	ldr	r3, [pc, #100]	; (8006cd4 <__ssputs_r+0xc0>)
 8006c70:	401a      	ands	r2, r3
 8006c72:	2380      	movs	r3, #128	; 0x80
 8006c74:	4313      	orrs	r3, r2
 8006c76:	81a3      	strh	r3, [r4, #12]
 8006c78:	9b02      	ldr	r3, [sp, #8]
 8006c7a:	6126      	str	r6, [r4, #16]
 8006c7c:	18f6      	adds	r6, r6, r3
 8006c7e:	6026      	str	r6, [r4, #0]
 8006c80:	6165      	str	r5, [r4, #20]
 8006c82:	9e01      	ldr	r6, [sp, #4]
 8006c84:	1aed      	subs	r5, r5, r3
 8006c86:	60a5      	str	r5, [r4, #8]
 8006c88:	9b01      	ldr	r3, [sp, #4]
 8006c8a:	429e      	cmp	r6, r3
 8006c8c:	d900      	bls.n	8006c90 <__ssputs_r+0x7c>
 8006c8e:	9e01      	ldr	r6, [sp, #4]
 8006c90:	0032      	movs	r2, r6
 8006c92:	9903      	ldr	r1, [sp, #12]
 8006c94:	6820      	ldr	r0, [r4, #0]
 8006c96:	f000 fa9f 	bl	80071d8 <memmove>
 8006c9a:	2000      	movs	r0, #0
 8006c9c:	68a3      	ldr	r3, [r4, #8]
 8006c9e:	1b9b      	subs	r3, r3, r6
 8006ca0:	60a3      	str	r3, [r4, #8]
 8006ca2:	6823      	ldr	r3, [r4, #0]
 8006ca4:	199b      	adds	r3, r3, r6
 8006ca6:	6023      	str	r3, [r4, #0]
 8006ca8:	b005      	add	sp, #20
 8006caa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006cac:	002a      	movs	r2, r5
 8006cae:	0038      	movs	r0, r7
 8006cb0:	f000 facc 	bl	800724c <_realloc_r>
 8006cb4:	1e06      	subs	r6, r0, #0
 8006cb6:	d1df      	bne.n	8006c78 <__ssputs_r+0x64>
 8006cb8:	0038      	movs	r0, r7
 8006cba:	6921      	ldr	r1, [r4, #16]
 8006cbc:	f7ff feac 	bl	8006a18 <_free_r>
 8006cc0:	230c      	movs	r3, #12
 8006cc2:	2001      	movs	r0, #1
 8006cc4:	603b      	str	r3, [r7, #0]
 8006cc6:	89a2      	ldrh	r2, [r4, #12]
 8006cc8:	3334      	adds	r3, #52	; 0x34
 8006cca:	4313      	orrs	r3, r2
 8006ccc:	81a3      	strh	r3, [r4, #12]
 8006cce:	4240      	negs	r0, r0
 8006cd0:	e7ea      	b.n	8006ca8 <__ssputs_r+0x94>
 8006cd2:	46c0      	nop			; (mov r8, r8)
 8006cd4:	fffffb7f 	.word	0xfffffb7f

08006cd8 <_svfiprintf_r>:
 8006cd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006cda:	b0a1      	sub	sp, #132	; 0x84
 8006cdc:	9003      	str	r0, [sp, #12]
 8006cde:	001d      	movs	r5, r3
 8006ce0:	898b      	ldrh	r3, [r1, #12]
 8006ce2:	000f      	movs	r7, r1
 8006ce4:	0016      	movs	r6, r2
 8006ce6:	061b      	lsls	r3, r3, #24
 8006ce8:	d511      	bpl.n	8006d0e <_svfiprintf_r+0x36>
 8006cea:	690b      	ldr	r3, [r1, #16]
 8006cec:	2b00      	cmp	r3, #0
 8006cee:	d10e      	bne.n	8006d0e <_svfiprintf_r+0x36>
 8006cf0:	2140      	movs	r1, #64	; 0x40
 8006cf2:	f7ff fefd 	bl	8006af0 <_malloc_r>
 8006cf6:	6038      	str	r0, [r7, #0]
 8006cf8:	6138      	str	r0, [r7, #16]
 8006cfa:	2800      	cmp	r0, #0
 8006cfc:	d105      	bne.n	8006d0a <_svfiprintf_r+0x32>
 8006cfe:	230c      	movs	r3, #12
 8006d00:	9a03      	ldr	r2, [sp, #12]
 8006d02:	3801      	subs	r0, #1
 8006d04:	6013      	str	r3, [r2, #0]
 8006d06:	b021      	add	sp, #132	; 0x84
 8006d08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006d0a:	2340      	movs	r3, #64	; 0x40
 8006d0c:	617b      	str	r3, [r7, #20]
 8006d0e:	2300      	movs	r3, #0
 8006d10:	ac08      	add	r4, sp, #32
 8006d12:	6163      	str	r3, [r4, #20]
 8006d14:	3320      	adds	r3, #32
 8006d16:	7663      	strb	r3, [r4, #25]
 8006d18:	3310      	adds	r3, #16
 8006d1a:	76a3      	strb	r3, [r4, #26]
 8006d1c:	9507      	str	r5, [sp, #28]
 8006d1e:	0035      	movs	r5, r6
 8006d20:	782b      	ldrb	r3, [r5, #0]
 8006d22:	2b00      	cmp	r3, #0
 8006d24:	d001      	beq.n	8006d2a <_svfiprintf_r+0x52>
 8006d26:	2b25      	cmp	r3, #37	; 0x25
 8006d28:	d148      	bne.n	8006dbc <_svfiprintf_r+0xe4>
 8006d2a:	1bab      	subs	r3, r5, r6
 8006d2c:	9305      	str	r3, [sp, #20]
 8006d2e:	42b5      	cmp	r5, r6
 8006d30:	d00b      	beq.n	8006d4a <_svfiprintf_r+0x72>
 8006d32:	0032      	movs	r2, r6
 8006d34:	0039      	movs	r1, r7
 8006d36:	9803      	ldr	r0, [sp, #12]
 8006d38:	f7ff ff6c 	bl	8006c14 <__ssputs_r>
 8006d3c:	3001      	adds	r0, #1
 8006d3e:	d100      	bne.n	8006d42 <_svfiprintf_r+0x6a>
 8006d40:	e0af      	b.n	8006ea2 <_svfiprintf_r+0x1ca>
 8006d42:	6963      	ldr	r3, [r4, #20]
 8006d44:	9a05      	ldr	r2, [sp, #20]
 8006d46:	189b      	adds	r3, r3, r2
 8006d48:	6163      	str	r3, [r4, #20]
 8006d4a:	782b      	ldrb	r3, [r5, #0]
 8006d4c:	2b00      	cmp	r3, #0
 8006d4e:	d100      	bne.n	8006d52 <_svfiprintf_r+0x7a>
 8006d50:	e0a7      	b.n	8006ea2 <_svfiprintf_r+0x1ca>
 8006d52:	2201      	movs	r2, #1
 8006d54:	2300      	movs	r3, #0
 8006d56:	4252      	negs	r2, r2
 8006d58:	6062      	str	r2, [r4, #4]
 8006d5a:	a904      	add	r1, sp, #16
 8006d5c:	3254      	adds	r2, #84	; 0x54
 8006d5e:	1852      	adds	r2, r2, r1
 8006d60:	1c6e      	adds	r6, r5, #1
 8006d62:	6023      	str	r3, [r4, #0]
 8006d64:	60e3      	str	r3, [r4, #12]
 8006d66:	60a3      	str	r3, [r4, #8]
 8006d68:	7013      	strb	r3, [r2, #0]
 8006d6a:	65a3      	str	r3, [r4, #88]	; 0x58
 8006d6c:	4b55      	ldr	r3, [pc, #340]	; (8006ec4 <_svfiprintf_r+0x1ec>)
 8006d6e:	2205      	movs	r2, #5
 8006d70:	0018      	movs	r0, r3
 8006d72:	7831      	ldrb	r1, [r6, #0]
 8006d74:	9305      	str	r3, [sp, #20]
 8006d76:	f000 fa55 	bl	8007224 <memchr>
 8006d7a:	1c75      	adds	r5, r6, #1
 8006d7c:	2800      	cmp	r0, #0
 8006d7e:	d11f      	bne.n	8006dc0 <_svfiprintf_r+0xe8>
 8006d80:	6822      	ldr	r2, [r4, #0]
 8006d82:	06d3      	lsls	r3, r2, #27
 8006d84:	d504      	bpl.n	8006d90 <_svfiprintf_r+0xb8>
 8006d86:	2353      	movs	r3, #83	; 0x53
 8006d88:	a904      	add	r1, sp, #16
 8006d8a:	185b      	adds	r3, r3, r1
 8006d8c:	2120      	movs	r1, #32
 8006d8e:	7019      	strb	r1, [r3, #0]
 8006d90:	0713      	lsls	r3, r2, #28
 8006d92:	d504      	bpl.n	8006d9e <_svfiprintf_r+0xc6>
 8006d94:	2353      	movs	r3, #83	; 0x53
 8006d96:	a904      	add	r1, sp, #16
 8006d98:	185b      	adds	r3, r3, r1
 8006d9a:	212b      	movs	r1, #43	; 0x2b
 8006d9c:	7019      	strb	r1, [r3, #0]
 8006d9e:	7833      	ldrb	r3, [r6, #0]
 8006da0:	2b2a      	cmp	r3, #42	; 0x2a
 8006da2:	d016      	beq.n	8006dd2 <_svfiprintf_r+0xfa>
 8006da4:	0035      	movs	r5, r6
 8006da6:	2100      	movs	r1, #0
 8006da8:	200a      	movs	r0, #10
 8006daa:	68e3      	ldr	r3, [r4, #12]
 8006dac:	782a      	ldrb	r2, [r5, #0]
 8006dae:	1c6e      	adds	r6, r5, #1
 8006db0:	3a30      	subs	r2, #48	; 0x30
 8006db2:	2a09      	cmp	r2, #9
 8006db4:	d94e      	bls.n	8006e54 <_svfiprintf_r+0x17c>
 8006db6:	2900      	cmp	r1, #0
 8006db8:	d111      	bne.n	8006dde <_svfiprintf_r+0x106>
 8006dba:	e017      	b.n	8006dec <_svfiprintf_r+0x114>
 8006dbc:	3501      	adds	r5, #1
 8006dbe:	e7af      	b.n	8006d20 <_svfiprintf_r+0x48>
 8006dc0:	9b05      	ldr	r3, [sp, #20]
 8006dc2:	6822      	ldr	r2, [r4, #0]
 8006dc4:	1ac0      	subs	r0, r0, r3
 8006dc6:	2301      	movs	r3, #1
 8006dc8:	4083      	lsls	r3, r0
 8006dca:	4313      	orrs	r3, r2
 8006dcc:	002e      	movs	r6, r5
 8006dce:	6023      	str	r3, [r4, #0]
 8006dd0:	e7cc      	b.n	8006d6c <_svfiprintf_r+0x94>
 8006dd2:	9b07      	ldr	r3, [sp, #28]
 8006dd4:	1d19      	adds	r1, r3, #4
 8006dd6:	681b      	ldr	r3, [r3, #0]
 8006dd8:	9107      	str	r1, [sp, #28]
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	db01      	blt.n	8006de2 <_svfiprintf_r+0x10a>
 8006dde:	930b      	str	r3, [sp, #44]	; 0x2c
 8006de0:	e004      	b.n	8006dec <_svfiprintf_r+0x114>
 8006de2:	425b      	negs	r3, r3
 8006de4:	60e3      	str	r3, [r4, #12]
 8006de6:	2302      	movs	r3, #2
 8006de8:	4313      	orrs	r3, r2
 8006dea:	6023      	str	r3, [r4, #0]
 8006dec:	782b      	ldrb	r3, [r5, #0]
 8006dee:	2b2e      	cmp	r3, #46	; 0x2e
 8006df0:	d10a      	bne.n	8006e08 <_svfiprintf_r+0x130>
 8006df2:	786b      	ldrb	r3, [r5, #1]
 8006df4:	2b2a      	cmp	r3, #42	; 0x2a
 8006df6:	d135      	bne.n	8006e64 <_svfiprintf_r+0x18c>
 8006df8:	9b07      	ldr	r3, [sp, #28]
 8006dfa:	3502      	adds	r5, #2
 8006dfc:	1d1a      	adds	r2, r3, #4
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	9207      	str	r2, [sp, #28]
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	db2b      	blt.n	8006e5e <_svfiprintf_r+0x186>
 8006e06:	9309      	str	r3, [sp, #36]	; 0x24
 8006e08:	4e2f      	ldr	r6, [pc, #188]	; (8006ec8 <_svfiprintf_r+0x1f0>)
 8006e0a:	2203      	movs	r2, #3
 8006e0c:	0030      	movs	r0, r6
 8006e0e:	7829      	ldrb	r1, [r5, #0]
 8006e10:	f000 fa08 	bl	8007224 <memchr>
 8006e14:	2800      	cmp	r0, #0
 8006e16:	d006      	beq.n	8006e26 <_svfiprintf_r+0x14e>
 8006e18:	2340      	movs	r3, #64	; 0x40
 8006e1a:	1b80      	subs	r0, r0, r6
 8006e1c:	4083      	lsls	r3, r0
 8006e1e:	6822      	ldr	r2, [r4, #0]
 8006e20:	3501      	adds	r5, #1
 8006e22:	4313      	orrs	r3, r2
 8006e24:	6023      	str	r3, [r4, #0]
 8006e26:	7829      	ldrb	r1, [r5, #0]
 8006e28:	2206      	movs	r2, #6
 8006e2a:	4828      	ldr	r0, [pc, #160]	; (8006ecc <_svfiprintf_r+0x1f4>)
 8006e2c:	1c6e      	adds	r6, r5, #1
 8006e2e:	7621      	strb	r1, [r4, #24]
 8006e30:	f000 f9f8 	bl	8007224 <memchr>
 8006e34:	2800      	cmp	r0, #0
 8006e36:	d03c      	beq.n	8006eb2 <_svfiprintf_r+0x1da>
 8006e38:	4b25      	ldr	r3, [pc, #148]	; (8006ed0 <_svfiprintf_r+0x1f8>)
 8006e3a:	2b00      	cmp	r3, #0
 8006e3c:	d125      	bne.n	8006e8a <_svfiprintf_r+0x1b2>
 8006e3e:	2207      	movs	r2, #7
 8006e40:	9b07      	ldr	r3, [sp, #28]
 8006e42:	3307      	adds	r3, #7
 8006e44:	4393      	bics	r3, r2
 8006e46:	3308      	adds	r3, #8
 8006e48:	9307      	str	r3, [sp, #28]
 8006e4a:	6963      	ldr	r3, [r4, #20]
 8006e4c:	9a04      	ldr	r2, [sp, #16]
 8006e4e:	189b      	adds	r3, r3, r2
 8006e50:	6163      	str	r3, [r4, #20]
 8006e52:	e764      	b.n	8006d1e <_svfiprintf_r+0x46>
 8006e54:	4343      	muls	r3, r0
 8006e56:	0035      	movs	r5, r6
 8006e58:	2101      	movs	r1, #1
 8006e5a:	189b      	adds	r3, r3, r2
 8006e5c:	e7a6      	b.n	8006dac <_svfiprintf_r+0xd4>
 8006e5e:	2301      	movs	r3, #1
 8006e60:	425b      	negs	r3, r3
 8006e62:	e7d0      	b.n	8006e06 <_svfiprintf_r+0x12e>
 8006e64:	2300      	movs	r3, #0
 8006e66:	200a      	movs	r0, #10
 8006e68:	001a      	movs	r2, r3
 8006e6a:	3501      	adds	r5, #1
 8006e6c:	6063      	str	r3, [r4, #4]
 8006e6e:	7829      	ldrb	r1, [r5, #0]
 8006e70:	1c6e      	adds	r6, r5, #1
 8006e72:	3930      	subs	r1, #48	; 0x30
 8006e74:	2909      	cmp	r1, #9
 8006e76:	d903      	bls.n	8006e80 <_svfiprintf_r+0x1a8>
 8006e78:	2b00      	cmp	r3, #0
 8006e7a:	d0c5      	beq.n	8006e08 <_svfiprintf_r+0x130>
 8006e7c:	9209      	str	r2, [sp, #36]	; 0x24
 8006e7e:	e7c3      	b.n	8006e08 <_svfiprintf_r+0x130>
 8006e80:	4342      	muls	r2, r0
 8006e82:	0035      	movs	r5, r6
 8006e84:	2301      	movs	r3, #1
 8006e86:	1852      	adds	r2, r2, r1
 8006e88:	e7f1      	b.n	8006e6e <_svfiprintf_r+0x196>
 8006e8a:	aa07      	add	r2, sp, #28
 8006e8c:	9200      	str	r2, [sp, #0]
 8006e8e:	0021      	movs	r1, r4
 8006e90:	003a      	movs	r2, r7
 8006e92:	4b10      	ldr	r3, [pc, #64]	; (8006ed4 <_svfiprintf_r+0x1fc>)
 8006e94:	9803      	ldr	r0, [sp, #12]
 8006e96:	e000      	b.n	8006e9a <_svfiprintf_r+0x1c2>
 8006e98:	bf00      	nop
 8006e9a:	9004      	str	r0, [sp, #16]
 8006e9c:	9b04      	ldr	r3, [sp, #16]
 8006e9e:	3301      	adds	r3, #1
 8006ea0:	d1d3      	bne.n	8006e4a <_svfiprintf_r+0x172>
 8006ea2:	89bb      	ldrh	r3, [r7, #12]
 8006ea4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006ea6:	065b      	lsls	r3, r3, #25
 8006ea8:	d400      	bmi.n	8006eac <_svfiprintf_r+0x1d4>
 8006eaa:	e72c      	b.n	8006d06 <_svfiprintf_r+0x2e>
 8006eac:	2001      	movs	r0, #1
 8006eae:	4240      	negs	r0, r0
 8006eb0:	e729      	b.n	8006d06 <_svfiprintf_r+0x2e>
 8006eb2:	aa07      	add	r2, sp, #28
 8006eb4:	9200      	str	r2, [sp, #0]
 8006eb6:	0021      	movs	r1, r4
 8006eb8:	003a      	movs	r2, r7
 8006eba:	4b06      	ldr	r3, [pc, #24]	; (8006ed4 <_svfiprintf_r+0x1fc>)
 8006ebc:	9803      	ldr	r0, [sp, #12]
 8006ebe:	f000 f87b 	bl	8006fb8 <_printf_i>
 8006ec2:	e7ea      	b.n	8006e9a <_svfiprintf_r+0x1c2>
 8006ec4:	0800754c 	.word	0x0800754c
 8006ec8:	08007552 	.word	0x08007552
 8006ecc:	08007556 	.word	0x08007556
 8006ed0:	00000000 	.word	0x00000000
 8006ed4:	08006c15 	.word	0x08006c15

08006ed8 <_printf_common>:
 8006ed8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006eda:	0016      	movs	r6, r2
 8006edc:	9301      	str	r3, [sp, #4]
 8006ede:	688a      	ldr	r2, [r1, #8]
 8006ee0:	690b      	ldr	r3, [r1, #16]
 8006ee2:	000c      	movs	r4, r1
 8006ee4:	9000      	str	r0, [sp, #0]
 8006ee6:	4293      	cmp	r3, r2
 8006ee8:	da00      	bge.n	8006eec <_printf_common+0x14>
 8006eea:	0013      	movs	r3, r2
 8006eec:	0022      	movs	r2, r4
 8006eee:	6033      	str	r3, [r6, #0]
 8006ef0:	3243      	adds	r2, #67	; 0x43
 8006ef2:	7812      	ldrb	r2, [r2, #0]
 8006ef4:	2a00      	cmp	r2, #0
 8006ef6:	d001      	beq.n	8006efc <_printf_common+0x24>
 8006ef8:	3301      	adds	r3, #1
 8006efa:	6033      	str	r3, [r6, #0]
 8006efc:	6823      	ldr	r3, [r4, #0]
 8006efe:	069b      	lsls	r3, r3, #26
 8006f00:	d502      	bpl.n	8006f08 <_printf_common+0x30>
 8006f02:	6833      	ldr	r3, [r6, #0]
 8006f04:	3302      	adds	r3, #2
 8006f06:	6033      	str	r3, [r6, #0]
 8006f08:	6822      	ldr	r2, [r4, #0]
 8006f0a:	2306      	movs	r3, #6
 8006f0c:	0015      	movs	r5, r2
 8006f0e:	401d      	ands	r5, r3
 8006f10:	421a      	tst	r2, r3
 8006f12:	d027      	beq.n	8006f64 <_printf_common+0x8c>
 8006f14:	0023      	movs	r3, r4
 8006f16:	3343      	adds	r3, #67	; 0x43
 8006f18:	781b      	ldrb	r3, [r3, #0]
 8006f1a:	1e5a      	subs	r2, r3, #1
 8006f1c:	4193      	sbcs	r3, r2
 8006f1e:	6822      	ldr	r2, [r4, #0]
 8006f20:	0692      	lsls	r2, r2, #26
 8006f22:	d430      	bmi.n	8006f86 <_printf_common+0xae>
 8006f24:	0022      	movs	r2, r4
 8006f26:	9901      	ldr	r1, [sp, #4]
 8006f28:	9800      	ldr	r0, [sp, #0]
 8006f2a:	9d08      	ldr	r5, [sp, #32]
 8006f2c:	3243      	adds	r2, #67	; 0x43
 8006f2e:	47a8      	blx	r5
 8006f30:	3001      	adds	r0, #1
 8006f32:	d025      	beq.n	8006f80 <_printf_common+0xa8>
 8006f34:	2206      	movs	r2, #6
 8006f36:	6823      	ldr	r3, [r4, #0]
 8006f38:	2500      	movs	r5, #0
 8006f3a:	4013      	ands	r3, r2
 8006f3c:	2b04      	cmp	r3, #4
 8006f3e:	d105      	bne.n	8006f4c <_printf_common+0x74>
 8006f40:	6833      	ldr	r3, [r6, #0]
 8006f42:	68e5      	ldr	r5, [r4, #12]
 8006f44:	1aed      	subs	r5, r5, r3
 8006f46:	43eb      	mvns	r3, r5
 8006f48:	17db      	asrs	r3, r3, #31
 8006f4a:	401d      	ands	r5, r3
 8006f4c:	68a3      	ldr	r3, [r4, #8]
 8006f4e:	6922      	ldr	r2, [r4, #16]
 8006f50:	4293      	cmp	r3, r2
 8006f52:	dd01      	ble.n	8006f58 <_printf_common+0x80>
 8006f54:	1a9b      	subs	r3, r3, r2
 8006f56:	18ed      	adds	r5, r5, r3
 8006f58:	2600      	movs	r6, #0
 8006f5a:	42b5      	cmp	r5, r6
 8006f5c:	d120      	bne.n	8006fa0 <_printf_common+0xc8>
 8006f5e:	2000      	movs	r0, #0
 8006f60:	e010      	b.n	8006f84 <_printf_common+0xac>
 8006f62:	3501      	adds	r5, #1
 8006f64:	68e3      	ldr	r3, [r4, #12]
 8006f66:	6832      	ldr	r2, [r6, #0]
 8006f68:	1a9b      	subs	r3, r3, r2
 8006f6a:	42ab      	cmp	r3, r5
 8006f6c:	ddd2      	ble.n	8006f14 <_printf_common+0x3c>
 8006f6e:	0022      	movs	r2, r4
 8006f70:	2301      	movs	r3, #1
 8006f72:	9901      	ldr	r1, [sp, #4]
 8006f74:	9800      	ldr	r0, [sp, #0]
 8006f76:	9f08      	ldr	r7, [sp, #32]
 8006f78:	3219      	adds	r2, #25
 8006f7a:	47b8      	blx	r7
 8006f7c:	3001      	adds	r0, #1
 8006f7e:	d1f0      	bne.n	8006f62 <_printf_common+0x8a>
 8006f80:	2001      	movs	r0, #1
 8006f82:	4240      	negs	r0, r0
 8006f84:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006f86:	2030      	movs	r0, #48	; 0x30
 8006f88:	18e1      	adds	r1, r4, r3
 8006f8a:	3143      	adds	r1, #67	; 0x43
 8006f8c:	7008      	strb	r0, [r1, #0]
 8006f8e:	0021      	movs	r1, r4
 8006f90:	1c5a      	adds	r2, r3, #1
 8006f92:	3145      	adds	r1, #69	; 0x45
 8006f94:	7809      	ldrb	r1, [r1, #0]
 8006f96:	18a2      	adds	r2, r4, r2
 8006f98:	3243      	adds	r2, #67	; 0x43
 8006f9a:	3302      	adds	r3, #2
 8006f9c:	7011      	strb	r1, [r2, #0]
 8006f9e:	e7c1      	b.n	8006f24 <_printf_common+0x4c>
 8006fa0:	0022      	movs	r2, r4
 8006fa2:	2301      	movs	r3, #1
 8006fa4:	9901      	ldr	r1, [sp, #4]
 8006fa6:	9800      	ldr	r0, [sp, #0]
 8006fa8:	9f08      	ldr	r7, [sp, #32]
 8006faa:	321a      	adds	r2, #26
 8006fac:	47b8      	blx	r7
 8006fae:	3001      	adds	r0, #1
 8006fb0:	d0e6      	beq.n	8006f80 <_printf_common+0xa8>
 8006fb2:	3601      	adds	r6, #1
 8006fb4:	e7d1      	b.n	8006f5a <_printf_common+0x82>
	...

08006fb8 <_printf_i>:
 8006fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006fba:	b08b      	sub	sp, #44	; 0x2c
 8006fbc:	9206      	str	r2, [sp, #24]
 8006fbe:	000a      	movs	r2, r1
 8006fc0:	3243      	adds	r2, #67	; 0x43
 8006fc2:	9307      	str	r3, [sp, #28]
 8006fc4:	9005      	str	r0, [sp, #20]
 8006fc6:	9204      	str	r2, [sp, #16]
 8006fc8:	7e0a      	ldrb	r2, [r1, #24]
 8006fca:	000c      	movs	r4, r1
 8006fcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006fce:	2a78      	cmp	r2, #120	; 0x78
 8006fd0:	d809      	bhi.n	8006fe6 <_printf_i+0x2e>
 8006fd2:	2a62      	cmp	r2, #98	; 0x62
 8006fd4:	d80b      	bhi.n	8006fee <_printf_i+0x36>
 8006fd6:	2a00      	cmp	r2, #0
 8006fd8:	d100      	bne.n	8006fdc <_printf_i+0x24>
 8006fda:	e0be      	b.n	800715a <_printf_i+0x1a2>
 8006fdc:	497c      	ldr	r1, [pc, #496]	; (80071d0 <_printf_i+0x218>)
 8006fde:	9103      	str	r1, [sp, #12]
 8006fe0:	2a58      	cmp	r2, #88	; 0x58
 8006fe2:	d100      	bne.n	8006fe6 <_printf_i+0x2e>
 8006fe4:	e093      	b.n	800710e <_printf_i+0x156>
 8006fe6:	0026      	movs	r6, r4
 8006fe8:	3642      	adds	r6, #66	; 0x42
 8006fea:	7032      	strb	r2, [r6, #0]
 8006fec:	e022      	b.n	8007034 <_printf_i+0x7c>
 8006fee:	0010      	movs	r0, r2
 8006ff0:	3863      	subs	r0, #99	; 0x63
 8006ff2:	2815      	cmp	r0, #21
 8006ff4:	d8f7      	bhi.n	8006fe6 <_printf_i+0x2e>
 8006ff6:	f7f9 f887 	bl	8000108 <__gnu_thumb1_case_shi>
 8006ffa:	0016      	.short	0x0016
 8006ffc:	fff6001f 	.word	0xfff6001f
 8007000:	fff6fff6 	.word	0xfff6fff6
 8007004:	001ffff6 	.word	0x001ffff6
 8007008:	fff6fff6 	.word	0xfff6fff6
 800700c:	fff6fff6 	.word	0xfff6fff6
 8007010:	003600a3 	.word	0x003600a3
 8007014:	fff60083 	.word	0xfff60083
 8007018:	00b4fff6 	.word	0x00b4fff6
 800701c:	0036fff6 	.word	0x0036fff6
 8007020:	fff6fff6 	.word	0xfff6fff6
 8007024:	0087      	.short	0x0087
 8007026:	0026      	movs	r6, r4
 8007028:	681a      	ldr	r2, [r3, #0]
 800702a:	3642      	adds	r6, #66	; 0x42
 800702c:	1d11      	adds	r1, r2, #4
 800702e:	6019      	str	r1, [r3, #0]
 8007030:	6813      	ldr	r3, [r2, #0]
 8007032:	7033      	strb	r3, [r6, #0]
 8007034:	2301      	movs	r3, #1
 8007036:	e0a2      	b.n	800717e <_printf_i+0x1c6>
 8007038:	6818      	ldr	r0, [r3, #0]
 800703a:	6809      	ldr	r1, [r1, #0]
 800703c:	1d02      	adds	r2, r0, #4
 800703e:	060d      	lsls	r5, r1, #24
 8007040:	d50b      	bpl.n	800705a <_printf_i+0xa2>
 8007042:	6805      	ldr	r5, [r0, #0]
 8007044:	601a      	str	r2, [r3, #0]
 8007046:	2d00      	cmp	r5, #0
 8007048:	da03      	bge.n	8007052 <_printf_i+0x9a>
 800704a:	232d      	movs	r3, #45	; 0x2d
 800704c:	9a04      	ldr	r2, [sp, #16]
 800704e:	426d      	negs	r5, r5
 8007050:	7013      	strb	r3, [r2, #0]
 8007052:	4b5f      	ldr	r3, [pc, #380]	; (80071d0 <_printf_i+0x218>)
 8007054:	270a      	movs	r7, #10
 8007056:	9303      	str	r3, [sp, #12]
 8007058:	e01b      	b.n	8007092 <_printf_i+0xda>
 800705a:	6805      	ldr	r5, [r0, #0]
 800705c:	601a      	str	r2, [r3, #0]
 800705e:	0649      	lsls	r1, r1, #25
 8007060:	d5f1      	bpl.n	8007046 <_printf_i+0x8e>
 8007062:	b22d      	sxth	r5, r5
 8007064:	e7ef      	b.n	8007046 <_printf_i+0x8e>
 8007066:	680d      	ldr	r5, [r1, #0]
 8007068:	6819      	ldr	r1, [r3, #0]
 800706a:	1d08      	adds	r0, r1, #4
 800706c:	6018      	str	r0, [r3, #0]
 800706e:	062e      	lsls	r6, r5, #24
 8007070:	d501      	bpl.n	8007076 <_printf_i+0xbe>
 8007072:	680d      	ldr	r5, [r1, #0]
 8007074:	e003      	b.n	800707e <_printf_i+0xc6>
 8007076:	066d      	lsls	r5, r5, #25
 8007078:	d5fb      	bpl.n	8007072 <_printf_i+0xba>
 800707a:	680d      	ldr	r5, [r1, #0]
 800707c:	b2ad      	uxth	r5, r5
 800707e:	4b54      	ldr	r3, [pc, #336]	; (80071d0 <_printf_i+0x218>)
 8007080:	2708      	movs	r7, #8
 8007082:	9303      	str	r3, [sp, #12]
 8007084:	2a6f      	cmp	r2, #111	; 0x6f
 8007086:	d000      	beq.n	800708a <_printf_i+0xd2>
 8007088:	3702      	adds	r7, #2
 800708a:	0023      	movs	r3, r4
 800708c:	2200      	movs	r2, #0
 800708e:	3343      	adds	r3, #67	; 0x43
 8007090:	701a      	strb	r2, [r3, #0]
 8007092:	6863      	ldr	r3, [r4, #4]
 8007094:	60a3      	str	r3, [r4, #8]
 8007096:	2b00      	cmp	r3, #0
 8007098:	db03      	blt.n	80070a2 <_printf_i+0xea>
 800709a:	2104      	movs	r1, #4
 800709c:	6822      	ldr	r2, [r4, #0]
 800709e:	438a      	bics	r2, r1
 80070a0:	6022      	str	r2, [r4, #0]
 80070a2:	2d00      	cmp	r5, #0
 80070a4:	d102      	bne.n	80070ac <_printf_i+0xf4>
 80070a6:	9e04      	ldr	r6, [sp, #16]
 80070a8:	2b00      	cmp	r3, #0
 80070aa:	d00c      	beq.n	80070c6 <_printf_i+0x10e>
 80070ac:	9e04      	ldr	r6, [sp, #16]
 80070ae:	0028      	movs	r0, r5
 80070b0:	0039      	movs	r1, r7
 80070b2:	f7f9 f8b9 	bl	8000228 <__aeabi_uidivmod>
 80070b6:	9b03      	ldr	r3, [sp, #12]
 80070b8:	3e01      	subs	r6, #1
 80070ba:	5c5b      	ldrb	r3, [r3, r1]
 80070bc:	7033      	strb	r3, [r6, #0]
 80070be:	002b      	movs	r3, r5
 80070c0:	0005      	movs	r5, r0
 80070c2:	429f      	cmp	r7, r3
 80070c4:	d9f3      	bls.n	80070ae <_printf_i+0xf6>
 80070c6:	2f08      	cmp	r7, #8
 80070c8:	d109      	bne.n	80070de <_printf_i+0x126>
 80070ca:	6823      	ldr	r3, [r4, #0]
 80070cc:	07db      	lsls	r3, r3, #31
 80070ce:	d506      	bpl.n	80070de <_printf_i+0x126>
 80070d0:	6862      	ldr	r2, [r4, #4]
 80070d2:	6923      	ldr	r3, [r4, #16]
 80070d4:	429a      	cmp	r2, r3
 80070d6:	dc02      	bgt.n	80070de <_printf_i+0x126>
 80070d8:	2330      	movs	r3, #48	; 0x30
 80070da:	3e01      	subs	r6, #1
 80070dc:	7033      	strb	r3, [r6, #0]
 80070de:	9b04      	ldr	r3, [sp, #16]
 80070e0:	1b9b      	subs	r3, r3, r6
 80070e2:	6123      	str	r3, [r4, #16]
 80070e4:	9b07      	ldr	r3, [sp, #28]
 80070e6:	0021      	movs	r1, r4
 80070e8:	9300      	str	r3, [sp, #0]
 80070ea:	9805      	ldr	r0, [sp, #20]
 80070ec:	9b06      	ldr	r3, [sp, #24]
 80070ee:	aa09      	add	r2, sp, #36	; 0x24
 80070f0:	f7ff fef2 	bl	8006ed8 <_printf_common>
 80070f4:	3001      	adds	r0, #1
 80070f6:	d147      	bne.n	8007188 <_printf_i+0x1d0>
 80070f8:	2001      	movs	r0, #1
 80070fa:	4240      	negs	r0, r0
 80070fc:	b00b      	add	sp, #44	; 0x2c
 80070fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007100:	2220      	movs	r2, #32
 8007102:	6809      	ldr	r1, [r1, #0]
 8007104:	430a      	orrs	r2, r1
 8007106:	6022      	str	r2, [r4, #0]
 8007108:	2278      	movs	r2, #120	; 0x78
 800710a:	4932      	ldr	r1, [pc, #200]	; (80071d4 <_printf_i+0x21c>)
 800710c:	9103      	str	r1, [sp, #12]
 800710e:	0021      	movs	r1, r4
 8007110:	3145      	adds	r1, #69	; 0x45
 8007112:	700a      	strb	r2, [r1, #0]
 8007114:	6819      	ldr	r1, [r3, #0]
 8007116:	6822      	ldr	r2, [r4, #0]
 8007118:	c920      	ldmia	r1!, {r5}
 800711a:	0610      	lsls	r0, r2, #24
 800711c:	d402      	bmi.n	8007124 <_printf_i+0x16c>
 800711e:	0650      	lsls	r0, r2, #25
 8007120:	d500      	bpl.n	8007124 <_printf_i+0x16c>
 8007122:	b2ad      	uxth	r5, r5
 8007124:	6019      	str	r1, [r3, #0]
 8007126:	07d3      	lsls	r3, r2, #31
 8007128:	d502      	bpl.n	8007130 <_printf_i+0x178>
 800712a:	2320      	movs	r3, #32
 800712c:	4313      	orrs	r3, r2
 800712e:	6023      	str	r3, [r4, #0]
 8007130:	2710      	movs	r7, #16
 8007132:	2d00      	cmp	r5, #0
 8007134:	d1a9      	bne.n	800708a <_printf_i+0xd2>
 8007136:	2220      	movs	r2, #32
 8007138:	6823      	ldr	r3, [r4, #0]
 800713a:	4393      	bics	r3, r2
 800713c:	6023      	str	r3, [r4, #0]
 800713e:	e7a4      	b.n	800708a <_printf_i+0xd2>
 8007140:	681a      	ldr	r2, [r3, #0]
 8007142:	680d      	ldr	r5, [r1, #0]
 8007144:	1d10      	adds	r0, r2, #4
 8007146:	6949      	ldr	r1, [r1, #20]
 8007148:	6018      	str	r0, [r3, #0]
 800714a:	6813      	ldr	r3, [r2, #0]
 800714c:	062e      	lsls	r6, r5, #24
 800714e:	d501      	bpl.n	8007154 <_printf_i+0x19c>
 8007150:	6019      	str	r1, [r3, #0]
 8007152:	e002      	b.n	800715a <_printf_i+0x1a2>
 8007154:	066d      	lsls	r5, r5, #25
 8007156:	d5fb      	bpl.n	8007150 <_printf_i+0x198>
 8007158:	8019      	strh	r1, [r3, #0]
 800715a:	2300      	movs	r3, #0
 800715c:	9e04      	ldr	r6, [sp, #16]
 800715e:	6123      	str	r3, [r4, #16]
 8007160:	e7c0      	b.n	80070e4 <_printf_i+0x12c>
 8007162:	681a      	ldr	r2, [r3, #0]
 8007164:	1d11      	adds	r1, r2, #4
 8007166:	6019      	str	r1, [r3, #0]
 8007168:	6816      	ldr	r6, [r2, #0]
 800716a:	2100      	movs	r1, #0
 800716c:	0030      	movs	r0, r6
 800716e:	6862      	ldr	r2, [r4, #4]
 8007170:	f000 f858 	bl	8007224 <memchr>
 8007174:	2800      	cmp	r0, #0
 8007176:	d001      	beq.n	800717c <_printf_i+0x1c4>
 8007178:	1b80      	subs	r0, r0, r6
 800717a:	6060      	str	r0, [r4, #4]
 800717c:	6863      	ldr	r3, [r4, #4]
 800717e:	6123      	str	r3, [r4, #16]
 8007180:	2300      	movs	r3, #0
 8007182:	9a04      	ldr	r2, [sp, #16]
 8007184:	7013      	strb	r3, [r2, #0]
 8007186:	e7ad      	b.n	80070e4 <_printf_i+0x12c>
 8007188:	0032      	movs	r2, r6
 800718a:	6923      	ldr	r3, [r4, #16]
 800718c:	9906      	ldr	r1, [sp, #24]
 800718e:	9805      	ldr	r0, [sp, #20]
 8007190:	9d07      	ldr	r5, [sp, #28]
 8007192:	47a8      	blx	r5
 8007194:	3001      	adds	r0, #1
 8007196:	d0af      	beq.n	80070f8 <_printf_i+0x140>
 8007198:	6823      	ldr	r3, [r4, #0]
 800719a:	079b      	lsls	r3, r3, #30
 800719c:	d415      	bmi.n	80071ca <_printf_i+0x212>
 800719e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80071a0:	68e0      	ldr	r0, [r4, #12]
 80071a2:	4298      	cmp	r0, r3
 80071a4:	daaa      	bge.n	80070fc <_printf_i+0x144>
 80071a6:	0018      	movs	r0, r3
 80071a8:	e7a8      	b.n	80070fc <_printf_i+0x144>
 80071aa:	0022      	movs	r2, r4
 80071ac:	2301      	movs	r3, #1
 80071ae:	9906      	ldr	r1, [sp, #24]
 80071b0:	9805      	ldr	r0, [sp, #20]
 80071b2:	9e07      	ldr	r6, [sp, #28]
 80071b4:	3219      	adds	r2, #25
 80071b6:	47b0      	blx	r6
 80071b8:	3001      	adds	r0, #1
 80071ba:	d09d      	beq.n	80070f8 <_printf_i+0x140>
 80071bc:	3501      	adds	r5, #1
 80071be:	68e3      	ldr	r3, [r4, #12]
 80071c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80071c2:	1a9b      	subs	r3, r3, r2
 80071c4:	42ab      	cmp	r3, r5
 80071c6:	dcf0      	bgt.n	80071aa <_printf_i+0x1f2>
 80071c8:	e7e9      	b.n	800719e <_printf_i+0x1e6>
 80071ca:	2500      	movs	r5, #0
 80071cc:	e7f7      	b.n	80071be <_printf_i+0x206>
 80071ce:	46c0      	nop			; (mov r8, r8)
 80071d0:	0800755d 	.word	0x0800755d
 80071d4:	0800756e 	.word	0x0800756e

080071d8 <memmove>:
 80071d8:	b510      	push	{r4, lr}
 80071da:	4288      	cmp	r0, r1
 80071dc:	d902      	bls.n	80071e4 <memmove+0xc>
 80071de:	188b      	adds	r3, r1, r2
 80071e0:	4298      	cmp	r0, r3
 80071e2:	d303      	bcc.n	80071ec <memmove+0x14>
 80071e4:	2300      	movs	r3, #0
 80071e6:	e007      	b.n	80071f8 <memmove+0x20>
 80071e8:	5c8b      	ldrb	r3, [r1, r2]
 80071ea:	5483      	strb	r3, [r0, r2]
 80071ec:	3a01      	subs	r2, #1
 80071ee:	d2fb      	bcs.n	80071e8 <memmove+0x10>
 80071f0:	bd10      	pop	{r4, pc}
 80071f2:	5ccc      	ldrb	r4, [r1, r3]
 80071f4:	54c4      	strb	r4, [r0, r3]
 80071f6:	3301      	adds	r3, #1
 80071f8:	429a      	cmp	r2, r3
 80071fa:	d1fa      	bne.n	80071f2 <memmove+0x1a>
 80071fc:	e7f8      	b.n	80071f0 <memmove+0x18>
	...

08007200 <_sbrk_r>:
 8007200:	2300      	movs	r3, #0
 8007202:	b570      	push	{r4, r5, r6, lr}
 8007204:	4d06      	ldr	r5, [pc, #24]	; (8007220 <_sbrk_r+0x20>)
 8007206:	0004      	movs	r4, r0
 8007208:	0008      	movs	r0, r1
 800720a:	602b      	str	r3, [r5, #0]
 800720c:	f7fb ff1a 	bl	8003044 <_sbrk>
 8007210:	1c43      	adds	r3, r0, #1
 8007212:	d103      	bne.n	800721c <_sbrk_r+0x1c>
 8007214:	682b      	ldr	r3, [r5, #0]
 8007216:	2b00      	cmp	r3, #0
 8007218:	d000      	beq.n	800721c <_sbrk_r+0x1c>
 800721a:	6023      	str	r3, [r4, #0]
 800721c:	bd70      	pop	{r4, r5, r6, pc}
 800721e:	46c0      	nop			; (mov r8, r8)
 8007220:	2000036c 	.word	0x2000036c

08007224 <memchr>:
 8007224:	b2c9      	uxtb	r1, r1
 8007226:	1882      	adds	r2, r0, r2
 8007228:	4290      	cmp	r0, r2
 800722a:	d101      	bne.n	8007230 <memchr+0xc>
 800722c:	2000      	movs	r0, #0
 800722e:	4770      	bx	lr
 8007230:	7803      	ldrb	r3, [r0, #0]
 8007232:	428b      	cmp	r3, r1
 8007234:	d0fb      	beq.n	800722e <memchr+0xa>
 8007236:	3001      	adds	r0, #1
 8007238:	e7f6      	b.n	8007228 <memchr+0x4>

0800723a <memcpy>:
 800723a:	2300      	movs	r3, #0
 800723c:	b510      	push	{r4, lr}
 800723e:	429a      	cmp	r2, r3
 8007240:	d100      	bne.n	8007244 <memcpy+0xa>
 8007242:	bd10      	pop	{r4, pc}
 8007244:	5ccc      	ldrb	r4, [r1, r3]
 8007246:	54c4      	strb	r4, [r0, r3]
 8007248:	3301      	adds	r3, #1
 800724a:	e7f8      	b.n	800723e <memcpy+0x4>

0800724c <_realloc_r>:
 800724c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800724e:	0007      	movs	r7, r0
 8007250:	000e      	movs	r6, r1
 8007252:	0014      	movs	r4, r2
 8007254:	2900      	cmp	r1, #0
 8007256:	d105      	bne.n	8007264 <_realloc_r+0x18>
 8007258:	0011      	movs	r1, r2
 800725a:	f7ff fc49 	bl	8006af0 <_malloc_r>
 800725e:	0005      	movs	r5, r0
 8007260:	0028      	movs	r0, r5
 8007262:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007264:	2a00      	cmp	r2, #0
 8007266:	d103      	bne.n	8007270 <_realloc_r+0x24>
 8007268:	f7ff fbd6 	bl	8006a18 <_free_r>
 800726c:	0025      	movs	r5, r4
 800726e:	e7f7      	b.n	8007260 <_realloc_r+0x14>
 8007270:	f000 f81b 	bl	80072aa <_malloc_usable_size_r>
 8007274:	9001      	str	r0, [sp, #4]
 8007276:	4284      	cmp	r4, r0
 8007278:	d803      	bhi.n	8007282 <_realloc_r+0x36>
 800727a:	0035      	movs	r5, r6
 800727c:	0843      	lsrs	r3, r0, #1
 800727e:	42a3      	cmp	r3, r4
 8007280:	d3ee      	bcc.n	8007260 <_realloc_r+0x14>
 8007282:	0021      	movs	r1, r4
 8007284:	0038      	movs	r0, r7
 8007286:	f7ff fc33 	bl	8006af0 <_malloc_r>
 800728a:	1e05      	subs	r5, r0, #0
 800728c:	d0e8      	beq.n	8007260 <_realloc_r+0x14>
 800728e:	9b01      	ldr	r3, [sp, #4]
 8007290:	0022      	movs	r2, r4
 8007292:	429c      	cmp	r4, r3
 8007294:	d900      	bls.n	8007298 <_realloc_r+0x4c>
 8007296:	001a      	movs	r2, r3
 8007298:	0031      	movs	r1, r6
 800729a:	0028      	movs	r0, r5
 800729c:	f7ff ffcd 	bl	800723a <memcpy>
 80072a0:	0031      	movs	r1, r6
 80072a2:	0038      	movs	r0, r7
 80072a4:	f7ff fbb8 	bl	8006a18 <_free_r>
 80072a8:	e7da      	b.n	8007260 <_realloc_r+0x14>

080072aa <_malloc_usable_size_r>:
 80072aa:	1f0b      	subs	r3, r1, #4
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	1f18      	subs	r0, r3, #4
 80072b0:	2b00      	cmp	r3, #0
 80072b2:	da01      	bge.n	80072b8 <_malloc_usable_size_r+0xe>
 80072b4:	580b      	ldr	r3, [r1, r0]
 80072b6:	18c0      	adds	r0, r0, r3
 80072b8:	4770      	bx	lr
	...

080072bc <_init>:
 80072bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072be:	46c0      	nop			; (mov r8, r8)
 80072c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80072c2:	bc08      	pop	{r3}
 80072c4:	469e      	mov	lr, r3
 80072c6:	4770      	bx	lr

080072c8 <_fini>:
 80072c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80072ca:	46c0      	nop			; (mov r8, r8)
 80072cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80072ce:	bc08      	pop	{r3}
 80072d0:	469e      	mov	lr, r3
 80072d2:	4770      	bx	lr
